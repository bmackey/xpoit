0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install' ]
2 info using npm@1.2.30
3 info using node@v0.10.11
4 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/package.json
5 warn package.json fh-app@0.1.0 No repository field.
6 warn package.json fh-app@0.1.0 No readme data.
7 verbose readDependencies using package.json deps
8 verbose install where, deps [ '/Users/bmackey/college/Project/App/xpoit/cloud',
8 verbose install   [ 'fh-nodeapp' ] ]
9 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
10 info preinstall fh-app@0.1.0
11 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
12 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
13 verbose readDependencies using package.json deps
14 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
15 verbose cache add [ 'fh-nodeapp@*', null ]
16 verbose cache add name=undefined spec="fh-nodeapp@*" args=["fh-nodeapp@*",null]
17 verbose parsed url { protocol: null,
17 verbose parsed url   slashes: null,
17 verbose parsed url   auth: null,
17 verbose parsed url   host: null,
17 verbose parsed url   port: null,
17 verbose parsed url   hostname: null,
17 verbose parsed url   hash: null,
17 verbose parsed url   search: null,
17 verbose parsed url   query: null,
17 verbose parsed url   pathname: 'fh-nodeapp@*',
17 verbose parsed url   path: 'fh-nodeapp@*',
17 verbose parsed url   href: 'fh-nodeapp@*' }
18 verbose cache add name="fh-nodeapp" spec="*" args=["fh-nodeapp","*"]
19 verbose parsed url { protocol: null,
19 verbose parsed url   slashes: null,
19 verbose parsed url   auth: null,
19 verbose parsed url   host: null,
19 verbose parsed url   port: null,
19 verbose parsed url   hostname: null,
19 verbose parsed url   hash: null,
19 verbose parsed url   search: null,
19 verbose parsed url   query: null,
19 verbose parsed url   pathname: '*',
19 verbose parsed url   path: '*',
19 verbose parsed url   href: '*' }
20 verbose addNamed [ 'fh-nodeapp', '*' ]
21 verbose addNamed [ null, '' ]
22 silly lockFile e7526326-fh-nodeapp fh-nodeapp@*
23 verbose lock fh-nodeapp@* /Users/bmackey/.npm/e7526326-fh-nodeapp.lock
24 silly addNameRange { name: 'fh-nodeapp', range: '', hasData: false }
25 verbose url raw fh-nodeapp
26 verbose url resolving [ 'https://registry.npmjs.org/', './fh-nodeapp' ]
27 verbose url resolved https://registry.npmjs.org/fh-nodeapp
28 info trying registry request attempt 1 at 14:17:52
29 verbose etag "238JHH0H0JVG188I4NQ68Z6C8"
30 http GET https://registry.npmjs.org/fh-nodeapp
31 http 304 https://registry.npmjs.org/fh-nodeapp
32 silly registry.get cb [ 304,
32 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:52 GMT',
32 silly registry.get     server: 'Apache',
32 silly registry.get     via: '1.1 varnish',
32 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:52 GMT',
32 silly registry.get     'cache-control': 'max-age=1',
32 silly registry.get     etag: '"238JHH0H0JVG188I4NQ68Z6C8"',
32 silly registry.get     'x-served-by': 'cache-lcy1121-LCY',
32 silly registry.get     'x-cache': 'MISS',
32 silly registry.get     'x-cache-hits': '0',
32 silly registry.get     'x-timer': 'S1394633872.891942739,VS0,VE91',
32 silly registry.get     vary: 'Accept',
32 silly registry.get     'content-length': '0',
32 silly registry.get     'keep-alive': 'timeout=10, max=50',
32 silly registry.get     connection: 'Keep-Alive' } ]
33 verbose etag fh-nodeapp from cache
34 silly addNameRange number 2 { name: 'fh-nodeapp', range: '', hasData: true }
35 silly addNameRange versions [ 'fh-nodeapp',
35 silly addNameRange   [ '0.32.0-BUILD-NUMBER',
35 silly addNameRange     '0.32.0',
35 silly addNameRange     '0.33.0',
35 silly addNameRange     '0.34.0',
35 silly addNameRange     '0.35.0',
35 silly addNameRange     '0.36.0',
35 silly addNameRange     '0.37.0',
35 silly addNameRange     '0.38.0',
35 silly addNameRange     '0.39.0',
35 silly addNameRange     '0.40.0',
35 silly addNameRange     '0.41.0',
35 silly addNameRange     '0.40.1',
35 silly addNameRange     '0.41.1',
35 silly addNameRange     '0.41.2',
35 silly addNameRange     '0.42.0',
35 silly addNameRange     '0.43.0',
35 silly addNameRange     '0.44.0',
35 silly addNameRange     '0.45.0',
35 silly addNameRange     '0.46.0',
35 silly addNameRange     '0.47.0',
35 silly addNameRange     '0.48.0',
35 silly addNameRange     '0.48.2',
35 silly addNameRange     '0.49.0',
35 silly addNameRange     '0.50.0',
35 silly addNameRange     '0.51.0',
35 silly addNameRange     '0.52.0',
35 silly addNameRange     '0.53.0',
35 silly addNameRange     '0.54.0',
35 silly addNameRange     '0.55.0',
35 silly addNameRange     '0.56.0',
35 silly addNameRange     '0.57.0',
35 silly addNameRange     '0.58.0',
35 silly addNameRange     '0.59.0',
35 silly addNameRange     '0.60.0',
35 silly addNameRange     '0.61.0',
35 silly addNameRange     '0.61.1',
35 silly addNameRange     '0.62.0',
35 silly addNameRange     '0.63.0',
35 silly addNameRange     '0.64.0',
35 silly addNameRange     '0.65.0' ] ]
36 verbose addNamed [ 'fh-nodeapp', '0.65.0' ]
37 verbose addNamed [ '0.65.0', '0.65.0' ]
38 silly lockFile def7f766-fh-nodeapp-0-65-0 fh-nodeapp@0.65.0
39 verbose lock fh-nodeapp@0.65.0 /Users/bmackey/.npm/def7f766-fh-nodeapp-0-65-0.lock
40 verbose read json /Users/bmackey/.npm/fh-nodeapp/0.65.0/package/package.json
41 warn package.json fh-nodeapp@0.65.0 No repository field.
42 warn package.json fh-nodeapp@0.65.0 No readme data.
43 silly lockFile def7f766-fh-nodeapp-0-65-0 fh-nodeapp@0.65.0
44 silly lockFile def7f766-fh-nodeapp-0-65-0 fh-nodeapp@0.65.0
45 silly lockFile e7526326-fh-nodeapp fh-nodeapp@*
46 silly lockFile e7526326-fh-nodeapp fh-nodeapp@*
47 silly resolved [ { name: 'fh-nodeapp',
47 silly resolved     description: 'FeedHenry Node Application',
47 silly resolved     version: '0.65.0',
47 silly resolved     author: { name: 'FeedHenry', email: 'npm@feedhenry.com' },
47 silly resolved     main: './lib/fh-nodeapp.js',
47 silly resolved     directories: { lib: 'lib' },
47 silly resolved     engines: { node: '>=0.6' },
47 silly resolved     dependencies:
47 silly resolved      { 'fh-connect': '1.8.6',
47 silly resolved        async: '0.2.1',
47 silly resolved        redis: '0.8.2',
47 silly resolved        request: '2.12.0',
47 silly resolved        'fh-statsc': '*',
47 silly resolved        'fh-reportingclient': '*',
47 silly resolved        'fh-security': '*',
47 silly resolved        winston: '0.6.2',
47 silly resolved        moment: '2.0.0',
47 silly resolved        'fh-amqp-js': '*' },
47 silly resolved     readme: 'ERROR: No README data found!',
47 silly resolved     _id: 'fh-nodeapp@0.65.0',
47 silly resolved     _from: 'fh-nodeapp@*' } ]
48 info install fh-nodeapp@0.65.0 into /Users/bmackey/college/Project/App/xpoit/cloud
49 info installOne fh-nodeapp@0.65.0
50 verbose from cache /Users/bmackey/.npm/fh-nodeapp/0.65.0/package/package.json
51 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp unbuild
52 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
53 verbose tar unpack /Users/bmackey/.npm/fh-nodeapp/0.65.0/package.tgz
54 silly lockFile e78e3081-it-cloud-node-modules-fh-nodeapp tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
55 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp /Users/bmackey/.npm/e78e3081-it-cloud-node-modules-fh-nodeapp.lock
56 silly lockFile f7c28bd0-pm-fh-nodeapp-0-65-0-package-tgz tar:///Users/bmackey/.npm/fh-nodeapp/0.65.0/package.tgz
57 verbose lock tar:///Users/bmackey/.npm/fh-nodeapp/0.65.0/package.tgz /Users/bmackey/.npm/f7c28bd0-pm-fh-nodeapp-0-65-0-package-tgz.lock
58 silly gunzTarPerm modes [ '755', '644' ]
59 silly gunzTarPerm extractEntry package.json
60 silly gunzTarPerm extractEntry VERSION.txt
61 silly gunzTarPerm extractEntry lib/authenticate.js
62 silly gunzTarPerm extractEntry lib/feedhenry.js
63 silly gunzTarPerm extractEntry lib/fh-nodeapp.js
64 silly gunzTarPerm extractEntry lib/fh-reports.js
65 silly gunzTarPerm extractEntry lib/consolelogger.js
66 silly gunzTarPerm extractEntry lib/fhserver.js
67 silly gunzTarPerm extractEntry lib/hostapp.js
68 silly gunzTarPerm extractEntry lib/message.js
69 silly gunzTarPerm extractEntry lib/sync-srv.js
70 silly gunzTarPerm extractEntry lib/urbanairship.js
71 silly gunzTarPerm extractEntry lib/fhhelpers.js
72 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
73 silly lockFile e78e3081-it-cloud-node-modules-fh-nodeapp tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
74 silly lockFile e78e3081-it-cloud-node-modules-fh-nodeapp tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
75 silly lockFile f7c28bd0-pm-fh-nodeapp-0-65-0-package-tgz tar:///Users/bmackey/.npm/fh-nodeapp/0.65.0/package.tgz
76 silly lockFile f7c28bd0-pm-fh-nodeapp-0-65-0-package-tgz tar:///Users/bmackey/.npm/fh-nodeapp/0.65.0/package.tgz
77 info preinstall fh-nodeapp@0.65.0
78 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
79 verbose readDependencies using package.json deps
80 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
81 verbose readDependencies using package.json deps
82 verbose cache add [ 'fh-connect@1.8.6', null ]
83 verbose cache add name=undefined spec="fh-connect@1.8.6" args=["fh-connect@1.8.6",null]
84 verbose parsed url { protocol: null,
84 verbose parsed url   slashes: null,
84 verbose parsed url   auth: null,
84 verbose parsed url   host: null,
84 verbose parsed url   port: null,
84 verbose parsed url   hostname: null,
84 verbose parsed url   hash: null,
84 verbose parsed url   search: null,
84 verbose parsed url   query: null,
84 verbose parsed url   pathname: 'fh-connect@1.8.6',
84 verbose parsed url   path: 'fh-connect@1.8.6',
84 verbose parsed url   href: 'fh-connect@1.8.6' }
85 verbose cache add name="fh-connect" spec="1.8.6" args=["fh-connect","1.8.6"]
86 verbose parsed url { protocol: null,
86 verbose parsed url   slashes: null,
86 verbose parsed url   auth: null,
86 verbose parsed url   host: null,
86 verbose parsed url   port: null,
86 verbose parsed url   hostname: null,
86 verbose parsed url   hash: null,
86 verbose parsed url   search: null,
86 verbose parsed url   query: null,
86 verbose parsed url   pathname: '1.8.6',
86 verbose parsed url   path: '1.8.6',
86 verbose parsed url   href: '1.8.6' }
87 verbose addNamed [ 'fh-connect', '1.8.6' ]
88 verbose addNamed [ '1.8.6', '1.8.6' ]
89 silly lockFile 314113b8-fh-connect-1-8-6 fh-connect@1.8.6
90 verbose lock fh-connect@1.8.6 /Users/bmackey/.npm/314113b8-fh-connect-1-8-6.lock
91 verbose cache add [ 'async@0.2.1', null ]
92 verbose cache add name=undefined spec="async@0.2.1" args=["async@0.2.1",null]
93 verbose parsed url { protocol: null,
93 verbose parsed url   slashes: null,
93 verbose parsed url   auth: null,
93 verbose parsed url   host: null,
93 verbose parsed url   port: null,
93 verbose parsed url   hostname: null,
93 verbose parsed url   hash: null,
93 verbose parsed url   search: null,
93 verbose parsed url   query: null,
93 verbose parsed url   pathname: 'async@0.2.1',
93 verbose parsed url   path: 'async@0.2.1',
93 verbose parsed url   href: 'async@0.2.1' }
94 verbose cache add name="async" spec="0.2.1" args=["async","0.2.1"]
95 verbose parsed url { protocol: null,
95 verbose parsed url   slashes: null,
95 verbose parsed url   auth: null,
95 verbose parsed url   host: null,
95 verbose parsed url   port: null,
95 verbose parsed url   hostname: null,
95 verbose parsed url   hash: null,
95 verbose parsed url   search: null,
95 verbose parsed url   query: null,
95 verbose parsed url   pathname: '0.2.1',
95 verbose parsed url   path: '0.2.1',
95 verbose parsed url   href: '0.2.1' }
96 verbose addNamed [ 'async', '0.2.1' ]
97 verbose addNamed [ '0.2.1', '0.2.1' ]
98 silly lockFile 64d41f22-async-0-2-1 async@0.2.1
99 verbose lock async@0.2.1 /Users/bmackey/.npm/64d41f22-async-0-2-1.lock
100 verbose cache add [ 'request@2.12.0', null ]
101 verbose cache add name=undefined spec="request@2.12.0" args=["request@2.12.0",null]
102 verbose parsed url { protocol: null,
102 verbose parsed url   slashes: null,
102 verbose parsed url   auth: null,
102 verbose parsed url   host: null,
102 verbose parsed url   port: null,
102 verbose parsed url   hostname: null,
102 verbose parsed url   hash: null,
102 verbose parsed url   search: null,
102 verbose parsed url   query: null,
102 verbose parsed url   pathname: 'request@2.12.0',
102 verbose parsed url   path: 'request@2.12.0',
102 verbose parsed url   href: 'request@2.12.0' }
103 verbose cache add name="request" spec="2.12.0" args=["request","2.12.0"]
104 verbose parsed url { protocol: null,
104 verbose parsed url   slashes: null,
104 verbose parsed url   auth: null,
104 verbose parsed url   host: null,
104 verbose parsed url   port: null,
104 verbose parsed url   hostname: null,
104 verbose parsed url   hash: null,
104 verbose parsed url   search: null,
104 verbose parsed url   query: null,
104 verbose parsed url   pathname: '2.12.0',
104 verbose parsed url   path: '2.12.0',
104 verbose parsed url   href: '2.12.0' }
105 verbose addNamed [ 'request', '2.12.0' ]
106 verbose addNamed [ '2.12.0', '2.12.0' ]
107 silly lockFile ba282548-request-2-12-0 request@2.12.0
108 verbose lock request@2.12.0 /Users/bmackey/.npm/ba282548-request-2-12-0.lock
109 verbose cache add [ 'redis@0.8.2', null ]
110 verbose cache add name=undefined spec="redis@0.8.2" args=["redis@0.8.2",null]
111 verbose parsed url { protocol: null,
111 verbose parsed url   slashes: null,
111 verbose parsed url   auth: null,
111 verbose parsed url   host: null,
111 verbose parsed url   port: null,
111 verbose parsed url   hostname: null,
111 verbose parsed url   hash: null,
111 verbose parsed url   search: null,
111 verbose parsed url   query: null,
111 verbose parsed url   pathname: 'redis@0.8.2',
111 verbose parsed url   path: 'redis@0.8.2',
111 verbose parsed url   href: 'redis@0.8.2' }
112 verbose cache add name="redis" spec="0.8.2" args=["redis","0.8.2"]
113 verbose parsed url { protocol: null,
113 verbose parsed url   slashes: null,
113 verbose parsed url   auth: null,
113 verbose parsed url   host: null,
113 verbose parsed url   port: null,
113 verbose parsed url   hostname: null,
113 verbose parsed url   hash: null,
113 verbose parsed url   search: null,
113 verbose parsed url   query: null,
113 verbose parsed url   pathname: '0.8.2',
113 verbose parsed url   path: '0.8.2',
113 verbose parsed url   href: '0.8.2' }
114 verbose addNamed [ 'redis', '0.8.2' ]
115 verbose addNamed [ '0.8.2', '0.8.2' ]
116 silly lockFile 0e7a726c-redis-0-8-2 redis@0.8.2
117 verbose lock redis@0.8.2 /Users/bmackey/.npm/0e7a726c-redis-0-8-2.lock
118 verbose cache add [ 'fh-statsc@*', null ]
119 verbose cache add name=undefined spec="fh-statsc@*" args=["fh-statsc@*",null]
120 verbose parsed url { protocol: null,
120 verbose parsed url   slashes: null,
120 verbose parsed url   auth: null,
120 verbose parsed url   host: null,
120 verbose parsed url   port: null,
120 verbose parsed url   hostname: null,
120 verbose parsed url   hash: null,
120 verbose parsed url   search: null,
120 verbose parsed url   query: null,
120 verbose parsed url   pathname: 'fh-statsc@*',
120 verbose parsed url   path: 'fh-statsc@*',
120 verbose parsed url   href: 'fh-statsc@*' }
121 verbose cache add name="fh-statsc" spec="*" args=["fh-statsc","*"]
122 verbose parsed url { protocol: null,
122 verbose parsed url   slashes: null,
122 verbose parsed url   auth: null,
122 verbose parsed url   host: null,
122 verbose parsed url   port: null,
122 verbose parsed url   hostname: null,
122 verbose parsed url   hash: null,
122 verbose parsed url   search: null,
122 verbose parsed url   query: null,
122 verbose parsed url   pathname: '*',
122 verbose parsed url   path: '*',
122 verbose parsed url   href: '*' }
123 verbose addNamed [ 'fh-statsc', '*' ]
124 verbose addNamed [ null, '' ]
125 silly lockFile ab8762f1-fh-statsc fh-statsc@*
126 verbose lock fh-statsc@* /Users/bmackey/.npm/ab8762f1-fh-statsc.lock
127 verbose cache add [ 'fh-reportingclient@*', null ]
128 verbose cache add name=undefined spec="fh-reportingclient@*" args=["fh-reportingclient@*",null]
129 verbose parsed url { protocol: null,
129 verbose parsed url   slashes: null,
129 verbose parsed url   auth: null,
129 verbose parsed url   host: null,
129 verbose parsed url   port: null,
129 verbose parsed url   hostname: null,
129 verbose parsed url   hash: null,
129 verbose parsed url   search: null,
129 verbose parsed url   query: null,
129 verbose parsed url   pathname: 'fh-reportingclient@*',
129 verbose parsed url   path: 'fh-reportingclient@*',
129 verbose parsed url   href: 'fh-reportingclient@*' }
130 verbose cache add name="fh-reportingclient" spec="*" args=["fh-reportingclient","*"]
131 verbose parsed url { protocol: null,
131 verbose parsed url   slashes: null,
131 verbose parsed url   auth: null,
131 verbose parsed url   host: null,
131 verbose parsed url   port: null,
131 verbose parsed url   hostname: null,
131 verbose parsed url   hash: null,
131 verbose parsed url   search: null,
131 verbose parsed url   query: null,
131 verbose parsed url   pathname: '*',
131 verbose parsed url   path: '*',
131 verbose parsed url   href: '*' }
132 verbose addNamed [ 'fh-reportingclient', '*' ]
133 verbose addNamed [ null, '' ]
134 silly lockFile 501eba9c-fh-reportingclient fh-reportingclient@*
135 verbose lock fh-reportingclient@* /Users/bmackey/.npm/501eba9c-fh-reportingclient.lock
136 verbose cache add [ 'fh-security@*', null ]
137 verbose cache add name=undefined spec="fh-security@*" args=["fh-security@*",null]
138 verbose parsed url { protocol: null,
138 verbose parsed url   slashes: null,
138 verbose parsed url   auth: null,
138 verbose parsed url   host: null,
138 verbose parsed url   port: null,
138 verbose parsed url   hostname: null,
138 verbose parsed url   hash: null,
138 verbose parsed url   search: null,
138 verbose parsed url   query: null,
138 verbose parsed url   pathname: 'fh-security@*',
138 verbose parsed url   path: 'fh-security@*',
138 verbose parsed url   href: 'fh-security@*' }
139 verbose cache add name="fh-security" spec="*" args=["fh-security","*"]
140 verbose parsed url { protocol: null,
140 verbose parsed url   slashes: null,
140 verbose parsed url   auth: null,
140 verbose parsed url   host: null,
140 verbose parsed url   port: null,
140 verbose parsed url   hostname: null,
140 verbose parsed url   hash: null,
140 verbose parsed url   search: null,
140 verbose parsed url   query: null,
140 verbose parsed url   pathname: '*',
140 verbose parsed url   path: '*',
140 verbose parsed url   href: '*' }
141 verbose addNamed [ 'fh-security', '*' ]
142 verbose addNamed [ null, '' ]
143 silly lockFile 8123d62d-fh-security fh-security@*
144 verbose lock fh-security@* /Users/bmackey/.npm/8123d62d-fh-security.lock
145 verbose cache add [ 'winston@0.6.2', null ]
146 verbose cache add name=undefined spec="winston@0.6.2" args=["winston@0.6.2",null]
147 verbose parsed url { protocol: null,
147 verbose parsed url   slashes: null,
147 verbose parsed url   auth: null,
147 verbose parsed url   host: null,
147 verbose parsed url   port: null,
147 verbose parsed url   hostname: null,
147 verbose parsed url   hash: null,
147 verbose parsed url   search: null,
147 verbose parsed url   query: null,
147 verbose parsed url   pathname: 'winston@0.6.2',
147 verbose parsed url   path: 'winston@0.6.2',
147 verbose parsed url   href: 'winston@0.6.2' }
148 verbose cache add name="winston" spec="0.6.2" args=["winston","0.6.2"]
149 verbose parsed url { protocol: null,
149 verbose parsed url   slashes: null,
149 verbose parsed url   auth: null,
149 verbose parsed url   host: null,
149 verbose parsed url   port: null,
149 verbose parsed url   hostname: null,
149 verbose parsed url   hash: null,
149 verbose parsed url   search: null,
149 verbose parsed url   query: null,
149 verbose parsed url   pathname: '0.6.2',
149 verbose parsed url   path: '0.6.2',
149 verbose parsed url   href: '0.6.2' }
150 verbose addNamed [ 'winston', '0.6.2' ]
151 verbose addNamed [ '0.6.2', '0.6.2' ]
152 silly lockFile 6b025e09-winston-0-6-2 winston@0.6.2
153 verbose lock winston@0.6.2 /Users/bmackey/.npm/6b025e09-winston-0-6-2.lock
154 verbose cache add [ 'moment@2.0.0', null ]
155 verbose cache add name=undefined spec="moment@2.0.0" args=["moment@2.0.0",null]
156 verbose parsed url { protocol: null,
156 verbose parsed url   slashes: null,
156 verbose parsed url   auth: null,
156 verbose parsed url   host: null,
156 verbose parsed url   port: null,
156 verbose parsed url   hostname: null,
156 verbose parsed url   hash: null,
156 verbose parsed url   search: null,
156 verbose parsed url   query: null,
156 verbose parsed url   pathname: 'moment@2.0.0',
156 verbose parsed url   path: 'moment@2.0.0',
156 verbose parsed url   href: 'moment@2.0.0' }
157 verbose cache add name="moment" spec="2.0.0" args=["moment","2.0.0"]
158 verbose parsed url { protocol: null,
158 verbose parsed url   slashes: null,
158 verbose parsed url   auth: null,
158 verbose parsed url   host: null,
158 verbose parsed url   port: null,
158 verbose parsed url   hostname: null,
158 verbose parsed url   hash: null,
158 verbose parsed url   search: null,
158 verbose parsed url   query: null,
158 verbose parsed url   pathname: '2.0.0',
158 verbose parsed url   path: '2.0.0',
158 verbose parsed url   href: '2.0.0' }
159 verbose addNamed [ 'moment', '2.0.0' ]
160 verbose addNamed [ '2.0.0', '2.0.0' ]
161 silly lockFile 43720542-moment-2-0-0 moment@2.0.0
162 verbose lock moment@2.0.0 /Users/bmackey/.npm/43720542-moment-2-0-0.lock
163 silly addNameRange { name: 'fh-statsc', range: '', hasData: false }
164 silly addNameRange { name: 'fh-reportingclient', range: '', hasData: false }
165 silly addNameRange { name: 'fh-security', range: '', hasData: false }
166 verbose cache add [ 'fh-amqp-js@*', null ]
167 verbose cache add name=undefined spec="fh-amqp-js@*" args=["fh-amqp-js@*",null]
168 verbose parsed url { protocol: null,
168 verbose parsed url   slashes: null,
168 verbose parsed url   auth: null,
168 verbose parsed url   host: null,
168 verbose parsed url   port: null,
168 verbose parsed url   hostname: null,
168 verbose parsed url   hash: null,
168 verbose parsed url   search: null,
168 verbose parsed url   query: null,
168 verbose parsed url   pathname: 'fh-amqp-js@*',
168 verbose parsed url   path: 'fh-amqp-js@*',
168 verbose parsed url   href: 'fh-amqp-js@*' }
169 verbose cache add name="fh-amqp-js" spec="*" args=["fh-amqp-js","*"]
170 verbose parsed url { protocol: null,
170 verbose parsed url   slashes: null,
170 verbose parsed url   auth: null,
170 verbose parsed url   host: null,
170 verbose parsed url   port: null,
170 verbose parsed url   hostname: null,
170 verbose parsed url   hash: null,
170 verbose parsed url   search: null,
170 verbose parsed url   query: null,
170 verbose parsed url   pathname: '*',
170 verbose parsed url   path: '*',
170 verbose parsed url   href: '*' }
171 verbose addNamed [ 'fh-amqp-js', '*' ]
172 verbose addNamed [ null, '' ]
173 silly lockFile bc47418e-fh-amqp-js fh-amqp-js@*
174 verbose lock fh-amqp-js@* /Users/bmackey/.npm/bc47418e-fh-amqp-js.lock
175 silly addNameRange { name: 'fh-amqp-js', range: '', hasData: false }
176 verbose url raw fh-connect/1.8.6
177 verbose url resolving [ 'https://registry.npmjs.org/', './fh-connect/1.8.6' ]
178 verbose url resolved https://registry.npmjs.org/fh-connect/1.8.6
179 info trying registry request attempt 1 at 14:17:54
180 verbose etag "QXNFSVY6DJ2AV1ZDID0Z85U1"
181 http GET https://registry.npmjs.org/fh-connect/1.8.6
182 verbose url raw async/0.2.1
183 verbose url resolving [ 'https://registry.npmjs.org/', './async/0.2.1' ]
184 verbose url resolved https://registry.npmjs.org/async/0.2.1
185 info trying registry request attempt 1 at 14:17:54
186 verbose etag "EMEUTIIMHACQUJENNNGQCRBQT"
187 http GET https://registry.npmjs.org/async/0.2.1
188 verbose url raw request/2.12.0
189 verbose url resolving [ 'https://registry.npmjs.org/', './request/2.12.0' ]
190 verbose url resolved https://registry.npmjs.org/request/2.12.0
191 info trying registry request attempt 1 at 14:17:54
192 verbose etag "CD0F84EPPLF0ZO5GVLC8FJVH7"
193 http GET https://registry.npmjs.org/request/2.12.0
194 verbose url raw redis/0.8.2
195 verbose url resolving [ 'https://registry.npmjs.org/', './redis/0.8.2' ]
196 verbose url resolved https://registry.npmjs.org/redis/0.8.2
197 info trying registry request attempt 1 at 14:17:54
198 verbose etag "6O5A0RECS4KI3YJJVHWIP2FQR"
199 http GET https://registry.npmjs.org/redis/0.8.2
200 verbose url raw fh-statsc
201 verbose url resolving [ 'https://registry.npmjs.org/', './fh-statsc' ]
202 verbose url resolved https://registry.npmjs.org/fh-statsc
203 info trying registry request attempt 1 at 14:17:54
204 verbose etag "123ZEWHLYF1W54BO5JMO2RTBG"
205 http GET https://registry.npmjs.org/fh-statsc
206 verbose url raw fh-reportingclient
207 verbose url resolving [ 'https://registry.npmjs.org/', './fh-reportingclient' ]
208 verbose url resolved https://registry.npmjs.org/fh-reportingclient
209 info trying registry request attempt 1 at 14:17:54
210 verbose etag "55KXMN4OXR9JXVOSBMNLNRVL5"
211 http GET https://registry.npmjs.org/fh-reportingclient
212 verbose url raw fh-security
213 verbose url resolving [ 'https://registry.npmjs.org/', './fh-security' ]
214 verbose url resolved https://registry.npmjs.org/fh-security
215 info trying registry request attempt 1 at 14:17:54
216 verbose etag "4QGC4QWOAIAJ0TS03S06HD1HF"
217 http GET https://registry.npmjs.org/fh-security
218 verbose url raw winston/0.6.2
219 verbose url resolving [ 'https://registry.npmjs.org/', './winston/0.6.2' ]
220 verbose url resolved https://registry.npmjs.org/winston/0.6.2
221 info trying registry request attempt 1 at 14:17:54
222 verbose etag "8SGJRWRLVY8Q5CIVSRB75HWFX"
223 http GET https://registry.npmjs.org/winston/0.6.2
224 verbose url raw moment/2.0.0
225 verbose url resolving [ 'https://registry.npmjs.org/', './moment/2.0.0' ]
226 verbose url resolved https://registry.npmjs.org/moment/2.0.0
227 info trying registry request attempt 1 at 14:17:54
228 verbose etag "44TQSTSCDPA5C9CKWAR9PXW6E"
229 http GET https://registry.npmjs.org/moment/2.0.0
230 verbose url raw fh-amqp-js
231 verbose url resolving [ 'https://registry.npmjs.org/', './fh-amqp-js' ]
232 verbose url resolved https://registry.npmjs.org/fh-amqp-js
233 info trying registry request attempt 1 at 14:17:54
234 verbose etag "ECZE8RE4VET8QSZ4ZLZGARJHU"
235 http GET https://registry.npmjs.org/fh-amqp-js
236 http 304 https://registry.npmjs.org/fh-connect/1.8.6
237 silly registry.get cb [ 304,
237 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:53 GMT',
237 silly registry.get     server: 'Apache',
237 silly registry.get     via: '1.1 varnish',
237 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:53 GMT',
237 silly registry.get     'cache-control': 'max-age=1',
237 silly registry.get     etag: '"QXNFSVY6DJ2AV1ZDID0Z85U1"',
237 silly registry.get     'x-served-by': 'cache-lcy1126-LCY',
237 silly registry.get     'x-cache': 'MISS',
237 silly registry.get     'x-cache-hits': '0',
237 silly registry.get     'x-timer': 'S1394633873.860020876,VS0,VE77',
237 silly registry.get     vary: 'Accept',
237 silly registry.get     'content-length': '0',
237 silly registry.get     'keep-alive': 'timeout=10, max=50',
237 silly registry.get     connection: 'Keep-Alive' } ]
238 verbose etag fh-connect/1.8.6 from cache
239 verbose read json /Users/bmackey/.npm/fh-connect/1.8.6/package/package.json
240 silly lockFile 314113b8-fh-connect-1-8-6 fh-connect@1.8.6
241 silly lockFile 314113b8-fh-connect-1-8-6 fh-connect@1.8.6
242 http 304 https://registry.npmjs.org/request/2.12.0
243 silly registry.get cb [ 304,
243 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:53 GMT',
243 silly registry.get     server: 'Apache',
243 silly registry.get     via: '1.1 varnish',
243 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:54 GMT',
243 silly registry.get     'cache-control': 'max-age=1',
243 silly registry.get     etag: '"CD0F84EPPLF0ZO5GVLC8FJVH7"',
243 silly registry.get     'x-served-by': 'cache-lcy1120-LCY',
243 silly registry.get     'x-cache': 'MISS',
243 silly registry.get     'x-cache-hits': '0',
243 silly registry.get     'x-timer': 'S1394633873.925357342,VS0,VE79',
243 silly registry.get     vary: 'Accept',
243 silly registry.get     'content-length': '0',
243 silly registry.get     'keep-alive': 'timeout=10, max=50',
243 silly registry.get     connection: 'Keep-Alive' } ]
244 verbose etag request/2.12.0 from cache
245 verbose read json /Users/bmackey/.npm/request/2.12.0/package/package.json
246 silly lockFile ba282548-request-2-12-0 request@2.12.0
247 silly lockFile ba282548-request-2-12-0 request@2.12.0
248 http 304 https://registry.npmjs.org/async/0.2.1
249 silly registry.get cb [ 304,
249 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:53 GMT',
249 silly registry.get     server: 'Apache',
249 silly registry.get     via: '1.1 varnish',
249 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:54 GMT',
249 silly registry.get     'cache-control': 'max-age=1',
249 silly registry.get     etag: '"EMEUTIIMHACQUJENNNGQCRBQT"',
249 silly registry.get     'x-served-by': 'cache-lcy1126-LCY',
249 silly registry.get     'x-cache': 'MISS',
249 silly registry.get     'x-cache-hits': '0',
249 silly registry.get     'x-timer': 'S1394633873.896240950,VS0,VE174',
249 silly registry.get     vary: 'Accept',
249 silly registry.get     'content-length': '0',
249 silly registry.get     'keep-alive': 'timeout=10, max=50',
249 silly registry.get     connection: 'Keep-Alive' } ]
250 verbose etag async/0.2.1 from cache
251 verbose read json /Users/bmackey/.npm/async/0.2.1/package/package.json
252 http 304 https://registry.npmjs.org/redis/0.8.2
253 silly registry.get cb [ 304,
253 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:53 GMT',
253 silly registry.get     server: 'Apache',
253 silly registry.get     via: '1.1 varnish',
253 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:54 GMT',
253 silly registry.get     'cache-control': 'max-age=1',
253 silly registry.get     etag: '"6O5A0RECS4KI3YJJVHWIP2FQR"',
253 silly registry.get     'x-served-by': 'cache-lcy1131-LCY',
253 silly registry.get     'x-cache': 'MISS',
253 silly registry.get     'x-cache-hits': '0',
253 silly registry.get     'x-timer': 'S1394633873.948953390,VS0,VE129',
253 silly registry.get     vary: 'Accept',
253 silly registry.get     'content-length': '0',
253 silly registry.get     'keep-alive': 'timeout=10, max=50',
253 silly registry.get     connection: 'Keep-Alive' } ]
254 verbose etag redis/0.8.2 from cache
255 verbose read json /Users/bmackey/.npm/redis/0.8.2/package/package.json
256 silly lockFile 64d41f22-async-0-2-1 async@0.2.1
257 silly lockFile 64d41f22-async-0-2-1 async@0.2.1
258 silly lockFile 0e7a726c-redis-0-8-2 redis@0.8.2
259 silly lockFile 0e7a726c-redis-0-8-2 redis@0.8.2
260 http 304 https://registry.npmjs.org/fh-statsc
261 silly registry.get cb [ 304,
261 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:53 GMT',
261 silly registry.get     server: 'Apache',
261 silly registry.get     via: '1.1 varnish',
261 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:54 GMT',
261 silly registry.get     'cache-control': 'max-age=1',
261 silly registry.get     etag: '"123ZEWHLYF1W54BO5JMO2RTBG"',
261 silly registry.get     'x-served-by': 'cache-lcy1133-LCY',
261 silly registry.get     'x-cache': 'MISS',
261 silly registry.get     'x-cache-hits': '0',
261 silly registry.get     'x-timer': 'S1394633873.971770048,VS0,VE173',
261 silly registry.get     vary: 'Accept',
261 silly registry.get     'content-length': '0',
261 silly registry.get     'keep-alive': 'timeout=10, max=50',
261 silly registry.get     connection: 'Keep-Alive' } ]
262 verbose etag fh-statsc from cache
263 silly addNameRange number 2 { name: 'fh-statsc', range: '', hasData: true }
264 silly addNameRange versions [ 'fh-statsc', [ '0.2.0-BUILD-NUMBER', '0.2.0', '0.2.1' ] ]
265 verbose addNamed [ 'fh-statsc', '0.2.1' ]
266 verbose addNamed [ '0.2.1', '0.2.1' ]
267 silly lockFile 6ee147d2-fh-statsc-0-2-1 fh-statsc@0.2.1
268 verbose lock fh-statsc@0.2.1 /Users/bmackey/.npm/6ee147d2-fh-statsc-0-2-1.lock
269 verbose read json /Users/bmackey/.npm/fh-statsc/0.2.1/package/package.json
270 warn package.json fh-statsc@0.2.1 No repository field.
271 warn package.json fh-statsc@0.2.1 No readme data.
272 silly lockFile 6ee147d2-fh-statsc-0-2-1 fh-statsc@0.2.1
273 silly lockFile 6ee147d2-fh-statsc-0-2-1 fh-statsc@0.2.1
274 silly lockFile ab8762f1-fh-statsc fh-statsc@*
275 silly lockFile ab8762f1-fh-statsc fh-statsc@*
276 http 304 https://registry.npmjs.org/winston/0.6.2
277 silly registry.get cb [ 304,
277 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:54 GMT',
277 silly registry.get     server: 'Apache',
277 silly registry.get     via: '1.1 varnish',
277 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:54 GMT',
277 silly registry.get     'cache-control': 'max-age=1',
277 silly registry.get     etag: '"8SGJRWRLVY8Q5CIVSRB75HWFX"',
277 silly registry.get     'x-served-by': 'cache-lcy1126-LCY',
277 silly registry.get     'x-cache': 'MISS',
277 silly registry.get     'x-cache-hits': '0',
277 silly registry.get     'x-timer': 'S1394633874.598736048,VS0,VE121',
277 silly registry.get     vary: 'Accept',
277 silly registry.get     'content-length': '0',
277 silly registry.get     'keep-alive': 'timeout=10, max=49',
277 silly registry.get     connection: 'Keep-Alive' } ]
278 verbose etag winston/0.6.2 from cache
279 verbose read json /Users/bmackey/.npm/winston/0.6.2/package/package.json
280 silly lockFile 6b025e09-winston-0-6-2 winston@0.6.2
281 silly lockFile 6b025e09-winston-0-6-2 winston@0.6.2
282 http 304 https://registry.npmjs.org/fh-reportingclient
283 silly registry.get cb [ 304,
283 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:54 GMT',
283 silly registry.get     server: 'Apache',
283 silly registry.get     via: '1.1 varnish',
283 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:54 GMT',
283 silly registry.get     'cache-control': 'max-age=1',
283 silly registry.get     etag: '"55KXMN4OXR9JXVOSBMNLNRVL5"',
283 silly registry.get     'x-served-by': 'cache-lcy1126-LCY',
283 silly registry.get     'x-cache': 'MISS',
283 silly registry.get     'x-cache-hits': '0',
283 silly registry.get     'x-timer': 'S1394633874.552458525,VS0,VE178',
283 silly registry.get     vary: 'Accept',
283 silly registry.get     'content-length': '0',
283 silly registry.get     'keep-alive': 'timeout=10, max=49',
283 silly registry.get     connection: 'Keep-Alive' } ]
284 verbose etag fh-reportingclient from cache
285 silly addNameRange number 2 { name: 'fh-reportingclient', range: '', hasData: true }
286 silly addNameRange versions [ 'fh-reportingclient', [ '0.1.1', '0.2.1', '0.2.2' ] ]
287 verbose addNamed [ 'fh-reportingclient', '0.2.2' ]
288 verbose addNamed [ '0.2.2', '0.2.2' ]
289 silly lockFile e2412720-fh-reportingclient-0-2-2 fh-reportingclient@0.2.2
290 verbose lock fh-reportingclient@0.2.2 /Users/bmackey/.npm/e2412720-fh-reportingclient-0-2-2.lock
291 verbose read json /Users/bmackey/.npm/fh-reportingclient/0.2.2/package/package.json
292 warn package.json fh-reportingclient@0.2.2 No repository field.
293 warn package.json fh-reportingclient@0.2.2 No readme data.
294 silly lockFile e2412720-fh-reportingclient-0-2-2 fh-reportingclient@0.2.2
295 silly lockFile e2412720-fh-reportingclient-0-2-2 fh-reportingclient@0.2.2
296 silly lockFile 501eba9c-fh-reportingclient fh-reportingclient@*
297 silly lockFile 501eba9c-fh-reportingclient fh-reportingclient@*
298 http 304 https://registry.npmjs.org/fh-amqp-js
299 silly registry.get cb [ 304,
299 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:54 GMT',
299 silly registry.get     server: 'Apache',
299 silly registry.get     via: '1.1 varnish',
299 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:54 GMT',
299 silly registry.get     'cache-control': 'max-age=1',
299 silly registry.get     etag: '"ECZE8RE4VET8QSZ4ZLZGARJHU"',
299 silly registry.get     'x-served-by': 'cache-lcy1133-LCY',
299 silly registry.get     'x-cache': 'MISS',
299 silly registry.get     'x-cache-hits': '0',
299 silly registry.get     'x-timer': 'S1394633874.644041300,VS0,VE131',
299 silly registry.get     vary: 'Accept',
299 silly registry.get     'content-length': '0',
299 silly registry.get     'keep-alive': 'timeout=10, max=49',
299 silly registry.get     connection: 'Keep-Alive' } ]
300 verbose etag fh-amqp-js from cache
301 silly addNameRange number 2 { name: 'fh-amqp-js', range: '', hasData: true }
302 silly addNameRange versions [ 'fh-amqp-js',
302 silly addNameRange   [ '0.1.0', '0.1.1', '0.1.2', '0.2.0', '0.2.1' ] ]
303 verbose addNamed [ 'fh-amqp-js', '0.2.1' ]
304 verbose addNamed [ '0.2.1', '0.2.1' ]
305 silly lockFile 40cb0633-fh-amqp-js-0-2-1 fh-amqp-js@0.2.1
306 verbose lock fh-amqp-js@0.2.1 /Users/bmackey/.npm/40cb0633-fh-amqp-js-0-2-1.lock
307 verbose read json /Users/bmackey/.npm/fh-amqp-js/0.2.1/package/package.json
308 warn package.json fh-amqp-js@0.2.1 No repository field.
309 silly lockFile 40cb0633-fh-amqp-js-0-2-1 fh-amqp-js@0.2.1
310 silly lockFile 40cb0633-fh-amqp-js-0-2-1 fh-amqp-js@0.2.1
311 silly lockFile bc47418e-fh-amqp-js fh-amqp-js@*
312 silly lockFile bc47418e-fh-amqp-js fh-amqp-js@*
313 http 304 https://registry.npmjs.org/moment/2.0.0
314 silly registry.get cb [ 304,
314 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:54 GMT',
314 silly registry.get     server: 'Apache',
314 silly registry.get     via: '1.1 varnish',
314 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:54 GMT',
314 silly registry.get     'cache-control': 'max-age=1',
314 silly registry.get     etag: '"44TQSTSCDPA5C9CKWAR9PXW6E"',
314 silly registry.get     'x-served-by': 'cache-lcy1131-LCY',
314 silly registry.get     'x-cache': 'MISS',
314 silly registry.get     'x-cache-hits': '0',
314 silly registry.get     'x-timer': 'S1394633874.621818781,VS0,VE181',
314 silly registry.get     vary: 'Accept',
314 silly registry.get     'content-length': '0',
314 silly registry.get     'keep-alive': 'timeout=10, max=49',
314 silly registry.get     connection: 'Keep-Alive' } ]
315 verbose etag moment/2.0.0 from cache
316 verbose read json /Users/bmackey/.npm/moment/2.0.0/package/package.json
317 silly lockFile 43720542-moment-2-0-0 moment@2.0.0
318 silly lockFile 43720542-moment-2-0-0 moment@2.0.0
319 http 304 https://registry.npmjs.org/fh-security
320 silly registry.get cb [ 304,
320 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:54 GMT',
320 silly registry.get     server: 'Apache',
320 silly registry.get     via: '1.1 varnish',
320 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:54 GMT',
320 silly registry.get     'cache-control': 'max-age=1',
320 silly registry.get     etag: '"4QGC4QWOAIAJ0TS03S06HD1HF"',
320 silly registry.get     'x-served-by': 'cache-lcy1120-LCY',
320 silly registry.get     'x-cache': 'MISS',
320 silly registry.get     'x-cache-hits': '0',
320 silly registry.get     'x-timer': 'S1394633874.574455738,VS0,VE251',
320 silly registry.get     vary: 'Accept',
320 silly registry.get     'content-length': '0',
320 silly registry.get     'keep-alive': 'timeout=10, max=49',
320 silly registry.get     connection: 'Keep-Alive' } ]
321 verbose etag fh-security from cache
322 silly addNameRange number 2 { name: 'fh-security', range: '', hasData: true }
323 silly addNameRange versions [ 'fh-security', [ '0.1.0-1', '0.1.1-2', '0.1.2-3' ] ]
324 verbose addNamed [ 'fh-security', '0.1.2-3' ]
325 verbose addNamed [ '0.1.2-3', '0.1.2-3' ]
326 silly lockFile 9de8dd99-fh-security-0-1-2-3 fh-security@0.1.2-3
327 verbose lock fh-security@0.1.2-3 /Users/bmackey/.npm/9de8dd99-fh-security-0-1-2-3.lock
328 verbose read json /Users/bmackey/.npm/fh-security/0.1.2-3/package/package.json
329 warn package.json fh-security@0.1.2-3 No readme data.
330 silly lockFile 9de8dd99-fh-security-0-1-2-3 fh-security@0.1.2-3
331 silly lockFile 9de8dd99-fh-security-0-1-2-3 fh-security@0.1.2-3
332 silly lockFile 8123d62d-fh-security fh-security@*
333 silly lockFile 8123d62d-fh-security fh-security@*
334 silly resolved [ { name: 'fh-connect',
334 silly resolved     version: '1.8.6',
334 silly resolved     description: 'FeedHenry published version of connect 1.8.6 with the \'formidable\' bugfix',
334 silly resolved     keywords: [ 'framework', 'web', 'middleware', 'connect', 'rack' ],
334 silly resolved     repository: { type: 'git', url: 'git://github.com/feedhenry/fh-connect' },
334 silly resolved     author:
334 silly resolved      { name: 'FeedHenry',
334 silly resolved        email: 'npm@feedhenry.com',
334 silly resolved        url: 'http://feedhenry.com' },
334 silly resolved     dependencies: { qs: '>= 0.4.0', mime: '>= 0.0.1', formidable: '1.0.11' },
334 silly resolved     devDependencies:
334 silly resolved      { expresso: '0.9.2',
334 silly resolved        koala: '0.1.2',
334 silly resolved        less: '1.1.1',
334 silly resolved        sass: '0.5.0',
334 silly resolved        markdown: '0.2.1',
334 silly resolved        ejs: '0.4.3',
334 silly resolved        should: '0.3.2' },
334 silly resolved     main: 'index',
334 silly resolved     engines: { node: '>= 0.6.0 < 0.9.0' },
334 silly resolved     readme: '\n# Connect\n\n  Connect is an extensible HTTP server framework for [node](http://nodejs.org), providing high performance "plugins" known as _middleware_.\n\n Connect is bundled with over _14_ commonly used middleware, including\n a logger, session support, cookie parser, and [more](http://senchalabs.github.com/connect). Be sure to view the 1.0 [documentation](http://senchalabs.github.com/connect/).\n\n## Middleware\n\n  - csrf\n  - basicAuth\n  - bodyParser\n  - cookieParser\n  - directory\n  - errorHandler\n  - favicon\n  - limit\n  - logger\n  - methodOverride\n  - query\n  - responsetime\n  - session\n  - static\n  - staticCache\n  - vhost\n\n## Static file serving\n\n The benchmarks below show the `static()` middleware\n requests per second vs `static()` with the `staticCache()`\n cache layer, out performing other popular node modules,\n while maintaining more features like Range request etc.\n\n  - static(): 2700 rps\n  - node-static: 5300 rps\n  - static() + staticCache(): 7500 rps\n\n## Running Tests\n\nfirst:\n\n    $ npm install -d\n\nthen:\n\n    $ make test\n\n## Authors\n\n Below is the output from [git-summary](http://github.com/visionmedia/git-extras).\n\n     project: connect\n     commits: 1616\n     files  : 168\n     authors: \n      1086\tTj Holowaychuk\n       298\tvisionmedia\n       191\tTim Caswell\n         8\tAstro\n         5\tNathan Rajlich\n         4\tJakub Nešetřil\n         3\tAlexander Simmerl\n         2\tJacques Crocker\n         2\tAndreas Lind Petersen\n         2\tFabian Jakobs\n         2\tAaron Heckmann\n         2\tJames Campos\n         1\tnateps\n         1\tGregory McWhirter\n         1\tAdam Malcontenti-Wilson\n         1\tJoshua Peek\n         1\tJxck\n         1\tEran Hammer-Lahav\n         1\tTJ Holowaychuk\n         1\tBart Teeuwisse\n         1\tAseem Kishore\n         1\tGuillermo Rauch\n         1\tJakub Nesetril\n\n\n## Node Compatibility\n\n  Connect `< 1.x` is compatible with node 0.2.x\n\n\n  Connect `1.x` is compatible with node 0.4.x and 0.6.x\n\n\n  Connect `2.x` (master) will be compatible with node 0.6.x\n\n## CLA\n\n [http://code.google.com/legal/individual-cla-v1.0.html](http://code.google.com/legal/individual-cla-v1.0.html)\n\n## License\n\nView the [LICENSE](https://github.com/senchalabs/connect/blob/master/LICENSE) file. The [Silk](http://www.famfamfam.com/lab/icons/silk/) icons used by the `directory` middleware created by/copyright of [FAMFAMFAM](http://www.famfamfam.com/).',
334 silly resolved     readmeFilename: 'Readme.md',
334 silly resolved     bugs: { url: 'https://github.com/feedhenry/fh-connect/issues' },
334 silly resolved     _id: 'fh-connect@1.8.6',
334 silly resolved     _from: 'fh-connect@1.8.6' },
334 silly resolved   { name: 'request',
334 silly resolved     description: 'Simplified HTTP request client.',
334 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
334 silly resolved     version: '2.12.0',
334 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
334 silly resolved     repository: { type: 'git', url: 'http://github.com/mikeal/request.git' },
334 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
334 silly resolved     engines: [ 'node >= 0.3.6' ],
334 silly resolved     main: './main',
334 silly resolved     dependencies: { 'form-data': '~0.0.3', mime: '~1.2.7' },
334 silly resolved     bundleDependencies: [ 'form-data', 'mime' ],
334 silly resolved     scripts: { test: 'node tests/run.js' },
334 silly resolved     readme: '# Request -- Simplified HTTP request method\n\n## Install\n\n<pre>\n  npm install request\n</pre>\n\nOr from source:\n\n<pre>\n  git clone git://github.com/mikeal/request.git \n  cd request\n  npm link\n</pre>\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types, in this case `application/json`, and use the proper content-type in the PUT request if one is not already provided in the headers.\n\n```javascript\nfs.createReadStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also pipe to itself. When doing so the content-type and content-length will be preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let\'s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    } \n  }\n})\n```\n\nYou can also pipe() from a http.ServerRequest instance and to a http.ServerResponse instance. The HTTP method and headers will be sent as well as the entity-body data. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since pipe() returns the destination stream in node 0.5.x you can do one line proxying :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\nUrl encoded forms are simple\n\n```javascript\nrequest.post(\'http://service.com/upload\', {form:{key:\'value\'}})\n// or\nrequest.post(\'http://service.com/upload\').form({key:\'value\'})\n```\n\nFor `multipart/form-data` we use the [form-data](https://github.com/felixge/node-form-data) library by [@felixge](https://github.com/felixge). You don\'t need to worry about piping the form object or setting the headers, `request` will handle that for you.\n\n```javascript\nvar r = request.post(\'http://service.com/upload\')\nvar form = r.form()\nform.append(\'my_field\', \'my_value\')\nform.append(\'my_buffer\', new Buffer([1, 2, 3]))\nform.append(\'my_file\', fs.createReadStream(path.join(__dirname, \'doodle.png\'))\nform.append(\'remote_file\', request(\'http://google.com/doodle.png\'))\n```\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Assume by some stretch of magic you aquired the verifier\n  var access_token = qs.parse(body)\n    , oauth = \n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: VERIFIER\n      , token_secret: access_token.oauth_token_secret\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth = \n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1/users/show.json?\'\n      , params = \n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n\n\n### request(options, callback)\n\nThe first argument can be either a url or an options object. The only required option is uri, all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from url.parse()\n* `qs` - object containing querystring values to be appended to the uri\n* `method` - http method, defaults to GET\n* `headers` - http headers, defaults to {}\n* `body` - entity body for POST and PUT requests. Must be buffer or string.\n* `form` - when passed an object this will set `body` but to a querystring representation of value and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header. When passed no option a FormData instance is returned that will be piped to request.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.  Additionally, parses the response body as json.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects. defaults to true.\n* `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects. defaults to false.\n* `maxRedirects` - the maximum number of redirects to follow, defaults to 10.\n* `encoding` - Encoding to be used on `setEncoding` of response data. If set to `null`, the body is returned as a Buffer.\n* `pool` - A hash object containing the agents for these requests. If omitted this request will use the global pool which is set to node\'s default maxSockets.\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\t\n* `proxy` - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it\'s supported with the `url` parameter by embedding the auth info in the uri.\n* `oauth` - Options for OAuth HMAC-SHA1 signing, see documentation above.\n* `strictSSL` - Set to `true` to require that SSL certificates be valid. Note: to use your own certificate authority, you need to specify an agent that was created with that ca as an option.\n* `jar` - Set to `false` if you don\'t want cookies to be remembered for future use or define your custom cookie jar (see examples section)\n* `aws` - object containing aws signing information, should have the properties `key` and `secret` as well as `bucket` unless you\'re specifying your bucket as part of the path, or you are making a request that doesn\'t use a bucket (i.e. GET Services)\n\n\nThe callback argument gets 3 arguments. The first is an error when applicable (usually from the http.Client option not the http.ClientRequest object). The second in an http.ClientResponse object. The third is the response body String or Buffer.\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)  \n  \nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as request() but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.post\n\nSame as request() but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as request() but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nAlias to normal request method for uniformity.\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart: \n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ] \n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\nCookies are enabled by default (so they can be used in subsequent requests). To disable cookies set jar to false (either in defaults or in the options sent).\n\n```javascript\nvar request = request.defaults({jar: false})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nIf you to use a custom cookie jar (instead of letting request use its own global cookie jar) you do so by setting the jar default or by specifying it as an option:\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.add(cookie)\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n',
334 silly resolved     readmeFilename: 'README.md',
334 silly resolved     _id: 'request@2.12.0',
334 silly resolved     _from: 'request@2.12.0' },
334 silly resolved   { name: 'async',
334 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
334 silly resolved     main: './lib/async',
334 silly resolved     author: { name: 'Caolan McMahon' },
334 silly resolved     version: '0.2.1',
334 silly resolved     repository: { type: 'git', url: 'http://github.com/caolan/async.git' },
334 silly resolved     bugs: { url: 'http://github.com/caolan/async/issues' },
334 silly resolved     licenses: [ [Object] ],
334 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
334 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser.\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, forEach…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n\n## Download\n\nReleases are available for download from\n[GitHub](http://github.com/caolan/async/downloads).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 17.5kb Uncompressed\n\n__Production:__ [async.min.js](https://github.com/caolan/async/raw/master/dist/async.min.js) - 1.7kb Packed and Gzipped\n\n\n## In the Browser\n\nSo far its been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [forEach](#forEach)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [waterfall](#waterfall)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n### forEach(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the forEach function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has completed.\n  If no error has occured, the callback should be run without arguments or \n  with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.forEach(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n### forEachSeries(arr, iterator, callback)\n\nThe same as forEach only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n### forEachLimit(arr, limit, iterator, callback)\n\nThe same as forEach only the iterator is applied to batches of items in the\narray, in series. The next batch of iterators is only called once the current\none has completed processing.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - How many items should be in each batch.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n  If no error has occured, the callback should be run without arguments or \n  with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.forEachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only the iterator is applied to batches of items in the\narray, in series. The next batch of iterators is only called once the current\none has completed processing.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - How many items should be in each batch.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n  If no error has occured, the callback should be run without arguments or \n  with an explicit null argument.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called with a boolean argument\n  once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then its probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback which accepts an optional error as its first argument, and the state\n  of the reduction as the second. If an error is passed to the callback, the\n  reduction is stopped and the main callback is immediately called with the\n  error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called with a boolean argument\n  once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a value to use as the sort criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called with a boolean argument\n  once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called with a boolean argument\n  once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed a\n  callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed a\n  callback it must call on completion.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback which must be called once it has completed with an optional\n  error as the first argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing queued\n  tasks.\n* payload - An optional integer for determining how many tasks should be\n  process per round, default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The\n  syntax is easier to understand by looking at the example.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. If all tasks complete\n  successfully, it will receive an object containing their results.\n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. Its also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
334 silly resolved     readmeFilename: 'README.md',
334 silly resolved     _id: 'async@0.2.1',
334 silly resolved     _from: 'async@0.2.1' },
334 silly resolved   { name: 'redis',
334 silly resolved     version: '0.8.2',
334 silly resolved     description: 'Redis client library',
334 silly resolved     keywords: [ 'redis', 'database' ],
334 silly resolved     author: { name: 'Matt Ranney', email: 'mjr@ranney.com' },
334 silly resolved     main: './index.js',
334 silly resolved     scripts: { test: 'node ./test.js' },
334 silly resolved     devDependencies: { metrics: '>=0.1.5' },
334 silly resolved     repository: { type: 'git', url: 'git://github.com/mranney/node_redis.git' },
334 silly resolved     readme: 'redis - a node.js redis client\n===========================\n\nThis is a complete Redis client for node.js.  It supports all Redis commands, including many recently added commands like EVAL from\nexperimental Redis server branches.\n\n\nInstall with:\n\n    npm install redis\n\nPieter Noordhuis has provided a binding to the official `hiredis` C library, which is non-blocking and fast.  To use `hiredis`, do:\n\n    npm install hiredis redis\n\nIf `hiredis` is installed, `node_redis` will use it by default.  Otherwise, a pure JavaScript parser will be used.\n\nIf you use `hiredis`, be sure to rebuild it whenever you upgrade your version of node.  There are mysterious failures that can\nhappen between node and native code modules after a node upgrade.\n\n\n## Usage\n\nSimple example, included as `examples/simple.js`:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    // if you\'d like to select database 3, instead of 0 (default), call\n    // client.select(3, function() { /* ... */ });\n\n    client.on("error", function (err) {\n        console.log("Error " + err);\n    });\n\n    client.set("string key", "string val", redis.print);\n    client.hset("hash key", "hashtest 1", "some value", redis.print);\n    client.hset(["hash key", "hashtest 2", "some other value"], redis.print);\n    client.hkeys("hash key", function (err, replies) {\n        console.log(replies.length + " replies:");\n        replies.forEach(function (reply, i) {\n            console.log("    " + i + ": " + reply);\n        });\n        client.quit();\n    });\n```\n\nThis will display:\n\n    mjr:~/work/node_redis (master)$ node example.js\n    Reply: OK\n    Reply: 0\n    Reply: 0\n    2 replies:\n        0: hashtest 1\n        1: hashtest 2\n    mjr:~/work/node_redis (master)$\n\n\n## Performance\n\nHere are typical results of `multi_bench.js` which is similar to `redis-benchmark` from the Redis distribution.\nIt uses 50 concurrent connections with no pipelining.\n\nJavaScript parser:\n\n    PING: 20000 ops 42283.30 ops/sec 0/5/1.182\n    SET: 20000 ops 32948.93 ops/sec 1/7/1.515\n    GET: 20000 ops 28694.40 ops/sec 0/9/1.740\n    INCR: 20000 ops 39370.08 ops/sec 0/8/1.269\n    LPUSH: 20000 ops 36429.87 ops/sec 0/8/1.370\n    LRANGE (10 elements): 20000 ops 9891.20 ops/sec 1/9/5.048\n    LRANGE (100 elements): 20000 ops 1384.56 ops/sec 10/91/36.072\n\nhiredis parser:\n\n    PING: 20000 ops 46189.38 ops/sec 1/4/1.082\n    SET: 20000 ops 41237.11 ops/sec 0/6/1.210\n    GET: 20000 ops 39682.54 ops/sec 1/7/1.257\n    INCR: 20000 ops 40080.16 ops/sec 0/8/1.242\n    LPUSH: 20000 ops 41152.26 ops/sec 0/3/1.212\n    LRANGE (10 elements): 20000 ops 36563.07 ops/sec 1/8/1.363\n    LRANGE (100 elements): 20000 ops 21834.06 ops/sec 0/9/2.287\n\nThe performance of `node_redis` improves dramatically with pipelining, which happens automatically in most normal programs.\n\n\n### Sending Commands\n\nEach Redis command is exposed as a function on the `client` object.\nAll functions take either an `args` Array plus optional `callback` Function or\na variable number of individual arguments followed by an optional callback.\nHere is an example of passing an array of arguments and a callback:\n\n    client.mset(["test keys 1", "test val 1", "test keys 2", "test val 2"], function (err, res) {});\n\nHere is that same call in the second style:\n\n    client.mset("test keys 1", "test val 1", "test keys 2", "test val 2", function (err, res) {});\n\nNote that in either form the `callback` is optional:\n\n    client.set("some key", "some val");\n    client.set(["some other key", "some val"]);\n\nIf the key is missing, reply will be null (probably):\n\n    client.get("missingkey", function(err, reply) {\n        // reply is null when the key is missing\n        console.log(reply);\n    });\n\nFor a list of Redis commands, see [Redis Command Reference](http://redis.io/commands)\n\nThe commands can be specified in uppercase or lowercase for convenience.  `client.get()` is the same as `client.GET()`.\n\nMinimal parsing is done on the replies.  Commands that return a single line reply return JavaScript Strings,\ninteger replies return JavaScript Numbers, "bulk" replies return node Buffers, and "multi bulk" replies return a\nJavaScript Array of node Buffers.  `HGETALL` returns an Object with Buffers keyed by the hash keys.\n\n# API\n\n## Connection Events\n\n`client` will emit some events about the state of the connection to the Redis server.\n\n### "ready"\n\n`client` will emit `ready` a connection is established to the Redis server and the server reports\nthat it is ready to receive commands.  Commands issued before the `ready` event are queued,\nthen replayed just before this event is emitted.\n\n### "connect"\n\n`client` will emit `connect` at the same time as it emits `ready` unless `client.options.no_ready_check`\nis set.  If this options is set, `connect` will be emitted when the stream is connected, and then\nyou are free to try to send commands.\n\n### "error"\n\n`client` will emit `error` when encountering an error connecting to the Redis server.\n\nNote that "error" is a special event type in node.  If there are no listeners for an\n"error" event, node will exit.  This is usually what you want, but it can lead to some\ncryptic error messages like this:\n\n    mjr:~/work/node_redis (master)$ node example.js\n\n    node.js:50\n        throw e;\n        ^\n    Error: ECONNREFUSED, Connection refused\n        at IOWatcher.callback (net:870:22)\n        at node.js:607:9\n\nNot very useful in diagnosing the problem, but if your program isn\'t ready to handle this,\nit is probably the right thing to just exit.\n\n`client` will also emit `error` if an exception is thrown inside of `node_redis` for whatever reason.\nIt would be nice to distinguish these two cases.\n\n### "end"\n\n`client` will emit `end` when an established Redis server connection has closed.\n\n### "drain"\n\n`client` will emit `drain` when the TCP connection to the Redis server has been buffering, but is now\nwritable.  This event can be used to stream commands in to Redis and adapt to backpressure.  Right now,\nyou need to check `client.command_queue.length` to decide when to reduce your send rate.  Then you can\nresume sending when you get `drain`.\n\n### "idle"\n\n`client` will emit `idle` when there are no outstanding commands that are awaiting a response.\n\n## redis.createClient(port, host, options)\n\nCreate a new client connection.  `port` defaults to `6379` and `host` defaults\nto `127.0.0.1`.  If you have `redis-server` running on the same computer as node, then the defaults for\nport and host are probably fine.  `options` in an object with the following possible properties:\n\n* `parser`: which Redis protocol reply parser to use.  Defaults to `hiredis` if that module is installed.\nThis may also be set to `javascript`.\n* `return_buffers`: defaults to `false`.  If set to `true`, then all replies will be sent to callbacks as node Buffer\nobjects instead of JavaScript Strings.\n* `detect_buffers`: default to `false`. If set to `true`, then replies will be sent to callbacks as node Buffer objects\nif any of the input arguments to the original command were Buffer objects.\nThis option lets you switch between Buffers and Strings on a per-command basis, whereas `return_buffers` applies to\nevery command on a client.\n* `socket_nodelay`: defaults to `true`. Whether to call setNoDelay() on the TCP stream, which disables the\nNagle algorithm on the underlying socket.  Setting this option to `false` can result in additional throughput at the\ncost of more latency.  Most applications will want this set to `true`.\n* `no_ready_check`: defaults to `false`. When a connection is established to the Redis server, the server might still\nbe loading the database from disk.  While loading, the server not respond to any commands.  To work around this,\n`node_redis` has a "ready check" which sends the `INFO` command to the server.  The response from the `INFO` command\nindicates whether the server is ready for more commands.  When ready, `node_redis` emits a `ready` event.\nSetting `no_ready_check` to `true` will inhibit this check.\n* `enable_offline_queue`: defaults to `true`. By default, if there is no active\nconnection to the redis server, commands are added to a queue and are executed\nonce the connection has been established. Setting `enable_offline_queue` to\n`false` will disable this feature and the callback will be execute immediately\nwith an error, or an error will be thrown if no callback is specified.\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient(null, null, {detect_buffers: true});\n\n    client.set("foo_rand000000000000", "OK");\n\n    // This will return a JavaScript String\n    client.get("foo_rand000000000000", function (err, reply) {\n        console.log(reply.toString()); // Will print `OK`\n    });\n\n    // This will return a Buffer since original key is specified as a Buffer\n    client.get(new Buffer("foo_rand000000000000"), function (err, reply) {\n        console.log(reply.toString()); // Will print `<Buffer 4f 4b>`\n    });\n    client.end();\n```\n\n`createClient()` returns a `RedisClient` object that is named `client` in all of the examples here.\n\n## client.auth(password, callback)\n\nWhen connecting to Redis servers that require authentication, the `AUTH` command must be sent as the\nfirst command after connecting.  This can be tricky to coordinate with reconnections, the ready check,\netc.  To make this easier, `client.auth()` stashes `password` and will send it after each connection,\nincluding reconnections.  `callback` is invoked only once, after the response to the very first\n`AUTH` command sent.\nNOTE: Your call to `client.auth()` should not be inside the ready handler. If\nyou are doing this wrong, `client` will emit an error that looks\nsomething like this `Error: Ready check failed: ERR operation not permitted`.\n\n## client.end()\n\nForcibly close the connection to the Redis server.  Note that this does not wait until all replies have been parsed.\nIf you want to exit cleanly, call `client.quit()` to send the `QUIT` command after you have handled all replies.\n\nThis example closes the connection to the Redis server before the replies have been read.  You probably don\'t\nwant to do this:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    client.set("foo_rand000000000000", "some fantastic value");\n    client.get("foo_rand000000000000", function (err, reply) {\n        console.log(reply.toString());\n    });\n    client.end();\n```\n\n`client.end()` is useful for timeout cases where something is stuck or taking too long and you want\nto start over.\n\n## Friendlier hash commands\n\nMost Redis commands take a single String or an Array of Strings as arguments, and replies are sent back as a single String or an Array of Strings.\nWhen dealing with hash values, there are a couple of useful exceptions to this.\n\n### client.hgetall(hash)\n\nThe reply from an HGETALL command will be converted into a JavaScript Object by `node_redis`.  That way you can interact\nwith the responses using JavaScript syntax.\n\nExample:\n\n    client.hmset("hosts", "mjr", "1", "another", "23", "home", "1234");\n    client.hgetall("hosts", function (err, obj) {\n        console.dir(obj);\n    });\n\nOutput:\n\n    { mjr: \'1\', another: \'23\', home: \'1234\' }\n\n### client.hmset(hash, obj, [callback])\n\nMultiple values in a hash can be set by supplying an object:\n\n    client.HMSET(key2, {\n        "0123456789": "abcdefghij", // NOTE: the key and value must both be strings\n        "some manner of key": "a type of value"\n    });\n\nThe properties and values of this Object will be set as keys and values in the Redis hash.\n\n### client.hmset(hash, key1, val1, ... keyn, valn, [callback])\n\nMultiple values may also be set by supplying a list:\n\n    client.HMSET(key1, "0123456789", "abcdefghij", "some manner of key", "a type of value");\n\n\n## Publish / Subscribe\n\nHere is a simple example of the API for publish / subscribe.  This program opens two\nclient connections, subscribes to a channel on one of them, and publishes to that\nchannel on the other:\n\n```js\n    var redis = require("redis"),\n        client1 = redis.createClient(), client2 = redis.createClient(),\n        msg_count = 0;\n\n    client1.on("subscribe", function (channel, count) {\n        client2.publish("a nice channel", "I am sending a message.");\n        client2.publish("a nice channel", "I am sending a second message.");\n        client2.publish("a nice channel", "I am sending my last message.");\n    });\n\n    client1.on("message", function (channel, message) {\n        console.log("client1 channel " + channel + ": " + message);\n        msg_count += 1;\n        if (msg_count === 3) {\n            client1.unsubscribe();\n            client1.end();\n            client2.end();\n        }\n    });\n\n    client1.incr("did a thing");\n    client1.subscribe("a nice channel");\n```\n\nWhen a client issues a `SUBSCRIBE` or `PSUBSCRIBE`, that connection is put into "pub/sub" mode.\nAt that point, only commands that modify the subscription set are valid.  When the subscription\nset is empty, the connection is put back into regular mode.\n\nIf you need to send regular commands to Redis while in pub/sub mode, just open another connection.\n\n## Pub / Sub Events\n\nIf a client has subscriptions active, it may emit these events:\n\n### "message" (channel, message)\n\nClient will emit `message` for every message received that matches an active subscription.\nListeners are passed the channel name as `channel` and the message Buffer as `message`.\n\n### "pmessage" (pattern, channel, message)\n\nClient will emit `pmessage` for every message received that matches an active subscription pattern.\nListeners are passed the original pattern used with `PSUBSCRIBE` as `pattern`, the sending channel\nname as `channel`, and the message Buffer as `message`.\n\n### "subscribe" (channel, count)\n\nClient will emit `subscribe` in response to a `SUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.\n\n### "psubscribe" (pattern, count)\n\nClient will emit `psubscribe` in response to a `PSUBSCRIBE` command.  Listeners are passed the\noriginal pattern as `pattern`, and the new count of subscriptions for this client as `count`.\n\n### "unsubscribe" (channel, count)\n\nClient will emit `unsubscribe` in response to a `UNSUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.  When\n`count` is 0, this client has left pub/sub mode and no more pub/sub events will be emitted.\n\n### "punsubscribe" (pattern, count)\n\nClient will emit `punsubscribe` in response to a `PUNSUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.  When\n`count` is 0, this client has left pub/sub mode and no more pub/sub events will be emitted.\n\n## client.multi([commands])\n\n`MULTI` commands are queued up until an `EXEC` is issued, and then all commands are run atomically by\nRedis.  The interface in `node_redis` is to return an individual `Multi` object by calling `client.multi()`.\n\n```js\n    var redis  = require("./index"),\n        client = redis.createClient(), set_size = 20;\n\n    client.sadd("bigset", "a member");\n    client.sadd("bigset", "another member");\n\n    while (set_size > 0) {\n        client.sadd("bigset", "member " + set_size);\n        set_size -= 1;\n    }\n\n    // multi chain with an individual callback\n    client.multi()\n        .scard("bigset")\n        .smembers("bigset")\n        .keys("*", function (err, replies) {\n            // NOTE: code in this callback is NOT atomic\n            // this only happens after the the .exec call finishes.\n            client.mget(replies, redis.print);\n        })\n        .dbsize()\n        .exec(function (err, replies) {\n            console.log("MULTI got " + replies.length + " replies");\n            replies.forEach(function (reply, index) {\n                console.log("Reply " + index + ": " + reply.toString());\n            });\n        });\n```\n\n`client.multi()` is a constructor that returns a `Multi` object.  `Multi` objects share all of the\nsame command methods as `client` objects do.  Commands are queued up inside the `Multi` object\nuntil `Multi.exec()` is invoked.\n\nYou can either chain together `MULTI` commands as in the above example, or you can queue individual\ncommands while still sending regular client command as in this example:\n\n```js\n    var redis  = require("redis"),\n        client = redis.createClient(), multi;\n\n    // start a separate multi command queue\n    multi = client.multi();\n    multi.incr("incr thing", redis.print);\n    multi.incr("incr other thing", redis.print);\n\n    // runs immediately\n    client.mset("incr thing", 100, "incr other thing", 1, redis.print);\n\n    // drains multi queue and runs atomically\n    multi.exec(function (err, replies) {\n        console.log(replies); // 101, 2\n    });\n\n    // you can re-run the same transaction if you like\n    multi.exec(function (err, replies) {\n        console.log(replies); // 102, 3\n        client.quit();\n    });\n```\n\nIn addition to adding commands to the `MULTI` queue individually, you can also pass an array\nof commands and arguments to the constructor:\n\n```js\n    var redis  = require("redis"),\n        client = redis.createClient(), multi;\n\n    client.multi([\n        ["mget", "multifoo", "multibar", redis.print],\n        ["incr", "multifoo"],\n        ["incr", "multibar"]\n    ]).exec(function (err, replies) {\n        console.log(replies);\n    });\n```\n\n\n## Monitor mode\n\nRedis supports the `MONITOR` command, which lets you see all commands received by the Redis server\nacross all client connections, including from other client libraries and other computers.\n\nAfter you send the `MONITOR` command, no other commands are valid on that connection.  `node_redis`\nwill emit a `monitor` event for every new monitor message that comes across.  The callback for the\n`monitor` event takes a timestamp from the Redis server and an array of command arguments.\n\nHere is a simple example:\n\n```js\n    var client  = require("redis").createClient(),\n        util = require("util");\n\n    client.monitor(function (err, res) {\n        console.log("Entering monitoring mode.");\n    });\n\n    client.on("monitor", function (time, args) {\n        console.log(time + ": " + util.inspect(args));\n    });\n```\n\n# Extras\n\nSome other things you might like to know about.\n\n## client.server_info\n\nAfter the ready probe completes, the results from the INFO command are saved in the `client.server_info`\nobject.\n\nThe `versions` key contains an array of the elements of the version string for easy comparison.\n\n    > client.server_info.redis_version\n    \'2.3.0\'\n    > client.server_info.versions\n    [ 2, 3, 0 ]\n\n## redis.print()\n\nA handy callback function for displaying return values when testing.  Example:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    client.on("connect", function () {\n        client.set("foo_rand000000000000", "some fantastic value", redis.print);\n        client.get("foo_rand000000000000", redis.print);\n    });\n```\n\nThis will print:\n\n    Reply: OK\n    Reply: some fantastic value\n\nNote that this program will not exit cleanly because the client is still connected.\n\n## redis.debug_mode\n\nBoolean to enable debug mode and protocol tracing.\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    redis.debug_mode = true;\n\n    client.on("connect", function () {\n        client.set("foo_rand000000000000", "some fantastic value");\n    });\n```\n\nThis will display:\n\n    mjr:~/work/node_redis (master)$ node ~/example.js\n    send command: *3\n    $3\n    SET\n    $20\n    foo_rand000000000000\n    $20\n    some fantastic value\n\n    on_data: +OK\n\n`send command` is data sent into Redis and `on_data` is data received from Redis.\n\n## client.send_command(command_name, args, callback)\n\nUsed internally to send commands to Redis.  For convenience, nearly all commands that are published on the Redis\nWiki have been added to the `client` object.  However, if I missed any, or if new commands are introduced before\nthis library is updated, you can use `send_command()` to send arbitrary commands to Redis.\n\nAll commands are sent as multi-bulk commands.  `args` can either be an Array of arguments, or omitted.\n\n## client.connected\n\nBoolean tracking the state of the connection to the Redis server.\n\n## client.command_queue.length\n\nThe number of commands that have been sent to the Redis server but not yet replied to.  You can use this to\nenforce some kind of maximum queue depth for commands while connected.\n\nDon\'t mess with `client.command_queue` though unless you really know what you are doing.\n\n## client.offline_queue.length\n\nThe number of commands that have been queued up for a future connection.  You can use this to enforce\nsome kind of maximum queue depth for pre-connection commands.\n\n## client.retry_delay\n\nCurrent delay in milliseconds before a connection retry will be attempted.  This starts at `250`.\n\n## client.retry_backoff\n\nMultiplier for future retry timeouts.  This should be larger than 1 to add more time between retries.\nDefaults to 1.7.  The default initial connection retry is 250, so the second retry will be 425, followed by 723.5, etc.\n\n### Commands with Optional and Keyword arguments\n\nThis applies to anything that uses an optional `[WITHSCORES]` or `[LIMIT offset count]` in the [redis.io/commands](http://redis.io/commands) documentation.\n\nExample:\n```js\nvar args = [ \'myzset\', 1, \'one\', 2, \'two\', 3, \'three\', 99, \'ninety-nine\' ];\nclient.zadd(args, function (err, response) {\n    if (err) throw err;\n    console.log(\'added \'+response+\' items.\');\n\n    // -Infinity and +Infinity also work\n    var args1 = [ \'myzset\', \'+inf\', \'-inf\' ];\n    client.zrevrangebyscore(args1, function (err, response) {\n        if (err) throw err;\n        console.log(\'example1\', response);\n        // write your code here\n    });\n\n    var max = 3, min = 1, offset = 1, count = 2;\n    var args2 = [ \'myzset\', max, min, \'WITHSCORES\', \'LIMIT\', offset, count ];\n    client.zrevrangebyscore(args2, function (err, response) {\n        if (err) throw err;\n        console.log(\'example2\', response);\n        // write your code here\n    });\n});\n```\n\n## TODO\n\nBetter tests for auth, disconnect/reconnect, and all combinations thereof.\n\nStream large set/get values into and out of Redis.  Otherwise the entire value must be in node\'s memory.\n\nPerformance can be better for very large values.\n\nI think there are more performance improvements left in there for smaller values, especially for large lists of small values.\n\n## How to Contribute\n- open a pull request and then wait for feedback (if\n  [DTrejo](http://github.com/dtrejo) does not get back to you within 2 days,\n  comment again with indignation!)\n\n## Contributors\nSome people have have added features and fixed bugs in `node_redis` other than me.\n\nOrdered by date of first contribution.\n[Auto-generated](http://github.com/dtrejo/node-authors) on Wed Jul 25 2012 19:14:59 GMT-0700 (PDT).\n\n- [Matt Ranney aka `mranney`](https://github.com/mranney)\n- [Tim-Smart aka `tim-smart`](https://github.com/tim-smart)\n- [Tj Holowaychuk aka `visionmedia`](https://github.com/visionmedia)\n- [rick aka `technoweenie`](https://github.com/technoweenie)\n- [Orion Henry aka `orionz`](https://github.com/orionz)\n- [Aivo Paas aka `aivopaas`](https://github.com/aivopaas)\n- [Hank Sims aka `hanksims`](https://github.com/hanksims)\n- [Paul Carey aka `paulcarey`](https://github.com/paulcarey)\n- [Pieter Noordhuis aka `pietern`](https://github.com/pietern)\n- [nithesh aka `nithesh`](https://github.com/nithesh)\n- [Andy Ray aka `andy2ray`](https://github.com/andy2ray)\n- [unknown aka `unknowdna`](https://github.com/unknowdna)\n- [Dave Hoover aka `redsquirrel`](https://github.com/redsquirrel)\n- [Vladimir Dronnikov aka `dvv`](https://github.com/dvv)\n- [Umair Siddique aka `umairsiddique`](https://github.com/umairsiddique)\n- [Louis-Philippe Perron aka `lp`](https://github.com/lp)\n- [Mark Dawson aka `markdaws`](https://github.com/markdaws)\n- [Ian Babrou aka `bobrik`](https://github.com/bobrik)\n- [Felix Geisendörfer aka `felixge`](https://github.com/felixge)\n- [Jean-Hugues Pinson aka `undefined`](https://github.com/undefined)\n- [Maksim Lin aka `maks`](https://github.com/maks)\n- [Owen Smith aka `orls`](https://github.com/orls)\n- [Zachary Scott aka `zzak`](https://github.com/zzak)\n- [TEHEK Firefox aka `TEHEK`](https://github.com/TEHEK)\n- [Isaac Z. Schlueter aka `isaacs`](https://github.com/isaacs)\n- [David Trejo aka `DTrejo`](https://github.com/DTrejo)\n- [Brian Noguchi aka `bnoguchi`](https://github.com/bnoguchi)\n- [Philip Tellis aka `bluesmoon`](https://github.com/bluesmoon)\n- [Marcus Westin aka `marcuswestin2`](https://github.com/marcuswestin2)\n- [Jed Schmidt aka `jed`](https://github.com/jed)\n- [Dave Peticolas aka `jdavisp3`](https://github.com/jdavisp3)\n- [Trae Robrock aka `trobrock`](https://github.com/trobrock)\n- [Shankar Karuppiah aka `shankar0306`](https://github.com/shankar0306)\n- [Ignacio Burgueño aka `ignacio`](https://github.com/ignacio)\n\nThanks.\n\n## LICENSE - "MIT License"\n\nCopyright (c) 2010 Matthew Ranney, http://ranney.com/\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the "Software"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n![spacer](http://ranney.com/1px.gif)\n',
334 silly resolved     readmeFilename: 'README.md',
334 silly resolved     bugs: { url: 'https://github.com/mranney/node_redis/issues' },
334 silly resolved     _id: 'redis@0.8.2',
334 silly resolved     _from: 'redis@0.8.2' },
334 silly resolved   { name: 'fh-statsc',
334 silly resolved     description: 'FeedHenry Stats Client',
334 silly resolved     version: '0.2.1',
334 silly resolved     author: { name: 'Martin Murphy', email: 'martin.murphy@feedhenry.com' },
334 silly resolved     main: 'lib/stats.js',
334 silly resolved     directories: { lib: 'bin' },
334 silly resolved     scripts: { test: 'rm -rf lib-cov && node-jscoverage lib lib-cov && NODE_PATH=$PWD/lib-cov expresso ' },
334 silly resolved     engines: { node: '*' },
334 silly resolved     bin: { 'fh-statsc': './bin/fh-statsc.js' },
334 silly resolved     dependencies: { async: '0.2.9' },
334 silly resolved     devDependencies: { proxyquire: '0.4.1' },
334 silly resolved     man: [ './man/fh-statsc.1' ],
334 silly resolved     preferGlobal: 'true',
334 silly resolved     readme: 'ERROR: No README data found!',
334 silly resolved     _id: 'fh-statsc@0.2.1',
334 silly resolved     _from: 'fh-statsc@*' },
334 silly resolved   { name: 'winston',
334 silly resolved     description: 'A multi-transport async logging library for Node.js',
334 silly resolved     version: '0.6.2',
334 silly resolved     author: { name: 'Nodejitsu Inc.', email: 'info@nodejitsu.com' },
334 silly resolved     maintainers: [ [Object] ],
334 silly resolved     repository: { type: 'git', url: 'https://github.com/flatiron/winston.git' },
334 silly resolved     keywords: [ 'logging', 'sysadmin', 'tools' ],
334 silly resolved     dependencies:
334 silly resolved      { async: '0.1.x',
334 silly resolved        colors: '0.x.x',
334 silly resolved        cycle: '1.0.x',
334 silly resolved        eyes: '0.1.x',
334 silly resolved        pkginfo: '0.2.x',
334 silly resolved        request: '2.9.x',
334 silly resolved        'stack-trace': '0.0.x' },
334 silly resolved     devDependencies: { vows: '0.6.x' },
334 silly resolved     main: './lib/winston',
334 silly resolved     scripts: { test: 'vows --spec --isolate' },
334 silly resolved     engines: { node: '>= 0.4.0' },
334 silly resolved     readme: '# winston [![Build Status](https://secure.travis-ci.org/flatiron/winston.png)](http://travis-ci.org/flatiron/winston)\n\nA multi-transport async logging library for node.js. <span style="font-size:28px; font-weight:bold;">&quot;CHILL WINSTON! ... I put it in the logs.&quot;</span>\n\n## Motivation\nWinston is designed to be a simple and universal logging library with support for multiple transports. A transport is essentially a storage device for your logs. Each instance of a winston logger can have multiple transports configured at different levels. For example, one may want error logs to be stored in a persistent remote location (like a database), but all logs output to the console or a local file.\n\nThere also seemed to be a lot of logging libraries out there that coupled their implementation of logging (i.e. how the logs are stored / indexed) to the API that they exposed to the programmer. This library aims to decouple those parts of the process to make it more flexible and extensible.\n\n## Usage\nThere are two different ways to use winston: directly via the default logger, or by instantiating your own Logger. The former is merely intended to be a convenient shared logger to use throughout your application if you so choose.\n\n* [Logging](#logging)\n  * [Using the Default Logger](#using-the-default-logger)\n  * [Instantiating your own Logger](#instantiating-your-own-logger)\n  * [Logging with Metadata](#logging-with-metadata)\n* [Transports](https://github.com/flatiron/winston/blob/master/docs/transports.md)\n* [Profiling](#profiling)\n* [Streaming Logs](#streaming-logs)\n* [Querying Logs](#querying-logs)  \n* [Exceptions](#exceptions)\n  * [Handling Uncaught Exceptions with winston](#handling-uncaught-exceptions-with-winston)\n  * [To Exit or Not to Exit](#to-exit-or-not-to-exit)\n* [Logging Levels](#logging-levels)\n  * [Using Logging Levels](#using-logging-levels)\n  * [Using Custom Logging Levels](#using-custom-logging-levels)\n* [Further Reading](#further-reading)\n  * [Events and Callbacks in Winston](#events-and-callbacks-in-winston)\n  * [Working with multiple Loggers in winston](#working-with-multiple-loggers-in-winston)\n  * [Using winston in a CLI tool](#using-winston-in-a-cli-tool)\n  * [Extending another object with Logging](#extending-another-object-with-logging)\n  * [Adding Custom Transports](#adding-custom-transports)\n\n## Logging\n\n### Using the Default Logger\nThe default logger is accessible through the winston module directly. Any method that you could call on an instance of a logger is available on the default logger:\n\n``` js\n  var winston = require(\'winston\');\n\n  winston.log(\'info\', \'Hello distributed log files!\');\n  winston.info(\'Hello again distributed logs\');\n```\n\nBy default, only the Console transport is set on the default logger. You can add or remove transports via the add() and remove() methods:\n\n``` js\n  winston.add(winston.transports.File, { filename: \'somefile.log\' });\n  winston.remove(winston.transports.Console);\n```\n\nFor more documenation about working with each individual transport supported by Winston see the "Working with Transports" section below.\n\n### Instantiating your own Logger\nIf you would prefer to manage the object lifetime of loggers you are free to instantiate them yourself:\n\n``` js\n  var logger = new (winston.Logger)({\n    transports: [\n      new (winston.transports.Console)(),\n      new (winston.transports.File)({ filename: \'somefile.log\' })\n    ]\n  });\n```\n\nYou can work with this logger in the same way that you work with the default logger:\n\n``` js\n  //\n  // Logging\n  //\n  logger.log(\'info\', \'Hello distributed log files!\');\n  logger.info(\'Hello again distributed logs\');\n\n  //\n  // Adding / Removing Transports\n  //   (Yes It\'s chainable)\n  //\n  logger.add(winston.transports.File)\n        .remove(winston.transports.Console);\n```\n\n### Logging with Metadata\nIn addition to logging string messages, winston will also optionally log additional JSON metadata objects. Adding metadata is simple:\n\n``` js\n  winston.log(\'info\', \'Test Log Message\', { anything: \'This is metadata\' });\n```\n\nThe way these objects is stored varies from transport to transport (to best support the storage mechanisms offered). Here\'s a quick summary of how each transports handles metadata:\n\n1. __Console:__ Logged via util.inspect(meta)\n2. __File:__ Logged via util.inspect(meta)\n\n## Profiling\nIn addition to logging messages and metadata, winston also has a simple profiling mechanism implemented for any logger:\n\n``` js\n  //\n  // Start profile of \'test\'\n  // Remark: Consider using Date.now() with async operations\n  //\n  winston.profile(\'test\');\n\n  setTimeout(function () {\n    //\n    // Stop profile of \'test\'. Logging will now take place:\n    //   "17 Jan 21:00:00 - info: test duration=1000ms"\n    //\n    winston.profile(\'test\');\n  }, 1000);\n```\n\nAll profile messages are set to the \'info\' by default and both message and metadata are optional There are no plans in the Roadmap to make this configurable, but I\'m open to suggestions / issues.\n\n\n## Querying Logs\nWinston supports querying of logs with Loggly-like options.\nSpecifically: `File`, `Couchdb`, `Redis`, `Loggly`, `Nssocket`, and `Http`.\n\n``` js\n  var options = {\n    from: new Date - 24 * 60 * 60 * 1000,\n    until: new Date\n  };\n\n  //\n  // Find items logged between today and yesterday.\n  //\n  winston.query(options, function (err, results) {\n    if (err) {\n      throw err;\n    }\n    \n    console.log(results);\n  });\n```\n\n## Streaming Logs\nStreaming allows you to stream your logs back from your chosen transport.\n\n``` js\n  //\n  // Start at the end.\n  //\n  winston.stream({ start: -1 }).on(\'log\', function(log) {\n    console.log(log);\n  });\n```\n\n## Exceptions\n\n### Handling Uncaught Exceptions with winston\n\nWith `winston`, it is possible to catch and log `uncaughtException` events from your process. There are two distinct ways of enabling this functionality either through the default winston logger or your own logger instance.\n\nIf you want to use this feature with the default logger simply call `.handleExceptions()` with a transport instance.\n\n``` js\n  //\n  // You can add a separate exception logger by passing it to `.handleExceptions`\n  //\n  winston.handleExceptions(new winston.transports.File({ filename: \'path/to/exceptions.log\' }))\n\n  //\n  // Alternatively you can set `.handleExceptions` to true when adding transports to winston\n  //\n  winston.add(winston.transports.File, {\n    filename: \'path/to/all-logs.log\',\n    handleExceptions: true\n  });\n```\n\n### To Exit or Not to Exit\n\nby default, winston will exit after logging an uncaughtException. if this is not the behavior you want,\nset `exitOnError = false`\n\n``` js\n  var logger = new (winston.Logger)({ exitOnError: false });\n\n  //\n  // or, like this:\n  //\n  logger.exitOnError = false;\n```\n\nWhen working with custom logger instances, you can pass in separate transports to the `exceptionHandlers` property or set `.handleExceptions` on any transport.\n\nExample 1\n\n``` js\n  var logger = new (winston.Logger)({\n    transports: [\n      new winston.transports.File({ filename: \'path/to/all-logs.log\' })\n    ]\n    exceptionHandlers: [\n      new winston.transports.File({ filename: \'path/to/exceptions.log\' })\n    ]\n  });\n```\n\nExample 2\n\n```\nvar logger = new winston.Logger({\n  transports: [\n    new winston.transports.Console({\n      handleExceptions: true,\n      json: true\n    })\n  ],\n  exitOnError: false\n});\n```\n\nThe `exitOnError` option can also be a function to prevent exit on only certain types of errors:\n\n``` js\n  function ignoreEpipe(err) {\n    return err.code !== \'EPIPE\';\n  }\n\n  var logger = new (winston.Logger)({ exitOnError: ignoreEpipe });\n\n  //\n  // or, like this:\n  //\n  logger.exitOnError = ignoreEpipe;\n```\n\n## Logging Levels\n\n### Using Logging Levels\nSetting the level for your logging message can be accomplished in one of two ways. You can pass a string representing the logging level to the log() method or use the level specified methods defined on every winston Logger.\n\n``` js\n  //\n  // Any logger instance\n  //\n  logger.log(\'info\', "127.0.0.1 - there\'s no place like home");\n  logger.log(\'warn\', "127.0.0.1 - there\'s no place like home");\n  logger.log(\'error\', "127.0.0.1 - there\'s no place like home");\n  logger.info("127.0.0.1 - there\'s no place like home");\n  logger.warn("127.0.0.1 - there\'s no place like home");\n  logger.error("127.0.0.1 - there\'s no place like home");\n\n  //\n  // Default logger\n  //\n  winston.log(\'info\', "127.0.0.1 - there\'s no place like home");\n  winston.info("127.0.0.1 - there\'s no place like home");\n```\n\nWinston allows you to set a `level` on each transport that specifies the level of messages this transport should log. For example, you could log only errors to the console, with the full logs in a file:\n\n``` js\n  var logger = new (winston.Logger)({\n    transports: [\n      new (winston.transports.Console)({ level: \'error\' }),\n      new (winston.transports.File)({ filename: \'somefile.log\' })\n    ]\n  });\n```\n\nAs of 0.2.0, winston supports customizable logging levels, defaulting to [npm][0] style logging levels. Changing logging levels is easy:\n\n``` js\n  //\n  // Change levels on the default winston logger\n  //\n  winston.setLevels(winston.config.syslog.levels);\n\n  //\n  // Change levels on an instance of a logger\n  //\n  logger.setLevels(winston.config.syslog.levels);\n```\n\nCalling `.setLevels` on a logger will remove all of the previous helper methods for the old levels and define helper methods for the new levels. Thus, you should be careful about the logging statements you use when changing levels. For example, if you ran this code after changing to the syslog levels:\n\n``` js\n  //\n  // Logger does not have \'silly\' defined since that level is not in the syslog levels\n  //\n  logger.silly(\'some silly message\');\n```\n\n### Using Custom Logging Levels\nIn addition to the predefined `npm` and `syslog` levels available in Winston, you can also choose to define your own:\n\n``` js\n  var myCustomLevels = {\n    levels: {\n      foo: 0,\n      bar: 1,\n      baz: 2,\n      foobar: 3\n    },\n    colors: {\n      foo: \'blue\',\n      bar: \'green\',\n      baz: \'yellow\',\n      foobar: \'red\'\n    }\n  };\n\n  var customLevelLogger = new (winston.Logger)({ levels: myCustomLevels.levels });\n  customLevelLogger.foobar(\'some foobar level-ed message\');\n```\n\nAlthough there is slight repetition in this data structure, it enables simple encapsulation if you not to have colors. If you do wish to have colors, in addition to passing the levels to the Logger itself, you must make winston aware of them:\n\n``` js\n  //\n  // Make winston aware of these colors\n  //\n  winston.addColors(myCustomLevels.colors);\n```\n\nThis enables transports with the \'colorize\' option set to appropriately color the output of custom levels.\n\n## Further Reading\n\n### Events and Callbacks in Winston\nEach instance of winston.Logger is also an instance of an [EventEmitter][1]. A log event will be raised each time a transport successfully logs a message:\n\n``` js\n  logger.on(\'logging\', function (transport, level, msg, meta) {\n    // [msg] and [meta] have now been logged at [level] to [transport]\n  });\n\n  logger.info(\'CHILL WINSTON!\', { seriously: true });\n```\n\nIt is also worth mentioning that the logger also emits an \'error\' event which you should handle or suppress if you don\'t want unhandled exceptions:\n\n``` js\n  //\n  // Handle errors\n  //\n  logger.on(\'error\', function (err) { /* Do Something */ });\n\n  //\n  // Or just suppress them.\n  //\n  logger.emitErrs = false;\n```\n\nEvery logging method described in the previous section also takes an optional callback which will be called only when all of the transports have logged the specified message.\n\n``` js\n  logger.info(\'CHILL WINSTON!\', { seriously: true }, function (err, level, msg, meta) {\n    // [msg] and [meta] have now been logged at [level] to **every** transport.\n  });\n```\n\n### Working with multiple Loggers in winston\n\nOften in larger, more complex applications it is necessary to have multiple logger instances with different settings. Each logger is responsible for a different feature area (or category). This is exposed in `winston` in two ways: through `winston.loggers` and instances of `winston.Container`. In fact, `winston.loggers` is just a predefined instance of `winston.Container`:\n\n``` js\n  var winston = require(\'winston\');\n\n  //\n  // Configure the logger for `category1`\n  //\n  winston.loggers.add(\'category1\', {\n    console: {\n      level: \'silly\',\n      colorize: \'true\'\n    },\n    file: {\n      filename: \'/path/to/some/file\'\n    }\n  });\n\n  //\n  // Configure the logger for `category2`\n  //\n  winston.loggers.add(\'category2\', {\n    couchdb: {\n      host: \'127.0.0.1\',\n      port: 5984\n    }\n  });\n```\n\nNow that your loggers are setup you can require winston _in any file in your application_ and access these pre-configured loggers:\n\n``` js\n  var winston = require(\'winston\');\n\n  //\n  // Grab your preconfigured logger\n  //\n  var category1 = winston.loggers.get(\'category1\');\n\n  category1.info(\'logging from your IoC container-based logger\');\n```\n\nIf you prefer to manage the `Container` yourself you can simply instantiate one:\n\n``` js\n  var winston = require(\'winston\'),\n      container = new winston.Container();\n\n  container.add(\'category1\', {\n    console: {\n      level: \'silly\',\n      colorize: \'true\'\n    },\n    file: {\n      filename: \'/path/to/some/file\'\n    }\n  });\n```\n\n### Sharing transports between Loggers in winston\n\n``` js\n  var winston = require(\'winston\');\n\n  //\n  // Setup transports to be shared across all loggers\n  // in three ways:\n  //\n  // 1. By setting it on the default Container\n  // 2. By passing `transports` into the constructor function of winston.Container\n  // 3. By passing `transports` into the `.get()` or `.add()` methods\n  //\n\n  //\n  // 1. By setting it on the default Container\n  //\n  winston.loggers.options.transports = [\n    // Setup your shared transports here\n  ];\n\n  //\n  // 2. By passing `transports` into the constructor function of winston.Container\n  //\n  var container = new winston.Container({\n    transports: [\n      // Setup your shared transports here\n    ]\n  });\n\n  //\n  // 3. By passing `transports` into the `.get()` or `.add()` methods\n  //\n  winston.loggers.add(\'some-category\', {\n    transports: [\n      // Setup your shared transports here\n    ]\n  });\n\n  container.add(\'some-category\', {\n    transports: [\n      // Setup your shared transports here\n    ]\n  });\n```\n\n### Using winston in a CLI tool\nA common use-case for logging is output to a CLI tool. Winston has a special helper method which will pretty print output from your CLI tool. Here\'s an example from the [require-analyzer][2] written by [Nodejitsu][3]:\n\n```\n  info:   require-analyzer starting in /Users/Charlie/Nodejitsu/require-analyzer\n  info:   Found existing dependencies\n  data:   {\n  data:     colors: \'0.x.x\',\n  data:     eyes: \'0.1.x\',\n  data:     findit: \'0.0.x\',\n  data:     npm: \'1.0.x\',\n  data:     optimist: \'0.2.x\',\n  data:     semver: \'1.0.x\',\n  data:     winston: \'0.2.x\'\n  data:   }\n  info:   Analyzing dependencies...\n  info:   Done analyzing raw dependencies\n  info:   Retrieved packages from npm\n  warn:   No additional dependencies found\n```\n\nConfiguring output for this style is easy, just use the `.cli()` method on `winston` or an instance of `winston.Logger`:\n\n``` js\n  var winston = require(\'winston\');\n\n  //\n  // Configure CLI output on the default logger\n  //\n  winston.cli();\n\n  //\n  // Configure CLI on an instance of winston.Logger\n  //\n  var logger = new winston.Logger({\n    transports: [\n      new (winston.transports.Console)()\n    ]\n  });\n\n  logger.cli();\n```\n\n### Extending another object with Logging\nOften in a given code base with lots of Loggers it is useful to add logging methods a different object so that these methods can be called with less syntax. Winston exposes this functionality via the \'extend\' method:\n\n``` js\n  var myObject = {};\n\n  logger.extend(myObject);\n\n  //\n  // You can now call logger methods on \'myObject\'\n  //\n  myObject.info(\'127.0.0.1 - there\'s no place like home\');\n```\n\n## Working with Transports\nRight now there are four transports supported by winston core. If you have a transport you would like to add either open an issue or fork and submit a pull request. Commits are welcome, but I\'ll give you extra street cred if you __add tests too :D__\n   \n1. __Console:__ Output to the terminal\n2. __Files:__ Append to a file\n3. __Loggly:__ Log to Logging-as-a-Service platform Loggly\n\n### Console Transport\n``` js\n  winston.add(winston.transports.Console, options)\n```\n\nThe Console transport takes two simple options:\n\n* __level:__ Level of messages that this transport should log (default \'info\').\n* __silent:__ Boolean flag indicating whether to suppress output (default false).\n* __colorize:__ Boolean flag indicating if we should colorize output (default false).\n* __timestamp:__ Boolean flag indicating if we should prepend output with timestamps (default false). If function is specified, its return value will be used instead of timestamps.\n\n*Metadata:* Logged via util.inspect(meta);\n\n### File Transport\n``` js\n  winston.add(winston.transports.File, options)\n```\n\nThe File transport should really be the \'Stream\' transport since it will accept any [WritableStream][14]. It is named such because it will also accept filenames via the \'filename\' option:\n\n* __level:__ Level of messages that this transport should log.\n* __silent:__ Boolean flag indicating whether to suppress output.\n* __colorize:__ Boolean flag indicating if we should colorize output.\n* __timestamp:__ Boolean flag indicating if we should prepend output with timestamps (default true). If function is specified, its return value will be used instead of timestamps.\n* __filename:__ The filename of the logfile to write output to.\n* __maxsize:__ Max size in bytes of the logfile, if the size is exceeded then a new file is created.\n* __maxFiles:__ Limit the number of files created when the size of the logfile is exceeded.\n* __stream:__ The WriteableStream to write output to.\n* __json:__ If true, messages will be logged as JSON (default true).\n\n*Metadata:* Logged via util.inspect(meta);\n\n### Loggly Transport\n``` js\n  var Loggly = require(\'winston-loggly\').Loggly\n  winston.add(Loggly, options);\n```\n\nThe Loggly transport is based on [Nodejitsu\'s][5] [node-loggly][6] implementation of the [Loggly][7] API. If you haven\'t heard of Loggly before, you should probably read their [value proposition][8]. The Loggly transport takes the following options. Either \'inputToken\' or \'inputName\' is required:\n\n* __level:__ Level of messages that this transport should log. \n* __subdomain:__ The subdomain of your Loggly account. *[required]*\n* __auth__: The authentication information for your Loggly account. *[required with inputName]*\n* __inputName:__ The name of the input this instance should log to.\n* __inputToken:__ The input token of the input this instance should log to.\n* __json:__ If true, messages will be sent to Loggly as JSON.\n\n*Metadata:* Logged in suggested [Loggly format][2]\n\n### Riak Transport\nAs of `0.3.0` the Riak transport has been broken out into a new module: [winston-riak][17]. Using it is just as easy:\n\n``` js\n  var Riak = require(\'winston-riak\').Riak;\n  winston.add(Riak, options);\n```\n\nIn addition to the options accepted by the [riak-js][3] [client][4], the Riak transport also accepts the following options. It is worth noting that the riak-js debug option is set to *false* by default:\n\n* __level:__ Level of messages that this transport should log.\n* __bucket:__ The name of the Riak bucket you wish your logs to be in or a function to generate bucket names dynamically.\n\n``` js\n  // Use a single bucket for all your logs\n  var singleBucketTransport = new (Riak)({ bucket: \'some-logs-go-here\' });\n  \n  // Generate a dynamic bucket based on the date and level\n  var dynamicBucketTransport = new (Riak)({\n    bucket: function (level, msg, meta, now) {\n      var d = new Date(now);\n      return level + [d.getDate(), d.getMonth(), d.getFullYear()].join(\'-\');\n    }\n  });\n```\n\n*Metadata:* Logged as JSON literal in Riak\n\n### MongoDB Transport\nAs of `0.3.0` the MongoDB transport has been broken out into a new module: [winston-mongodb][16]. Using it is just as easy:\n\n``` js\n  var MongoDB = require(\'winston-mongodb\').MongoDB;\n  winston.add(MongoDB, options);\n```\n\nThe MongoDB transport takes the following options. \'db\' is required:\n\n* __level:__ Level of messages that this transport should log. \n* __silent:__ Boolean flag indicating whether to suppress output.\n* __db:__ The name of the database you want to log to. *[required]*\n* __collection__: The name of the collection you want to store log messages in, defaults to \'log\'.\n* __safe:__ Boolean indicating if you want eventual consistency on your log messages, if set to true it requires an extra round trip to the server to ensure the write was committed, defaults to true.\n* __host:__ The host running MongoDB, defaults to localhost.\n* __port:__ The port on the host that MongoDB is running on, defaults to MongoDB\'s default port.\n\n*Metadata:* Logged as a native JSON object.\n\n### SimpleDB Transport\n\nThe [winston-simpledb][18] transport is just as easy:\n\n``` js\n  var SimpleDB = require(\'winston-simpledb\').SimpleDB;\n  winston.add(SimpleDB, options);\n```\n\nThe SimpleDB transport takes the following options. All items marked with an asterisk are required:\n\n* __awsAccessKey__:* your AWS Access Key\n* __secretAccessKey__:* your AWS Secret Access Key\n* __awsAccountId__:* your AWS Account Id\n* __domainName__:* a string or function that returns the domain name to log to\n* __region__:* the region your domain resides in\n* __itemName__: a string (\'uuid\', \'epoch\', \'timestamp\') or function that returns the item name to log\n\n*Metadata:* Logged as a native JSON object to the \'meta\' attribute of the item.\n\n### Mail Transport\n\nThe [winston-mail][19] is an email transport:\n\n``` js\n  var Mail = require(\'winston-mail\').Mail;\n  winston.add(Mail, options);\n```\n\nThe Mail transport uses [emailjs](https://github.com/eleith/emailjs) behind the scenes.  Options are the following:\n\n* __to:__ The address(es) you want to send to. *[required]*\n* __from:__ The address you want to send from. (default: `winston@[server-host-name]`)\n* __host:__ SMTP server hostname (default: localhost)\n* __port:__ SMTP port (default: 587 or 25)\n* __username__ User for server auth\n* __password__ Password for server auth\n* __ssl:__ Use SSL (boolean or object { key, ca, cert })\n* __tls:__ Boolean (if true, use starttls)\n* __level:__ Level of messages that this transport should log. \n* __silent:__ Boolean flag indicating whether to suppress output.\n\n*Metadata:* Stringified as JSON in email.\n\n### Amazon SNS (Simple Notification System) Transport\n\nThe [winston-sns][21] transport uses amazon SNS to send emails, texts, or a bunch of other notifications.\n\n``` js\n  require(\'winston-sns\').SNS;\n  winston.add(winston.transports.SNS, options);\n```\n\nOptions:\n\n* __aws_key:__ Your Amazon Web Services Key. *[required]*\n* __aws_secret:__ Your Amazon Web Services Secret. *[required]*\n* __subscriber:__ Subscriber number - found in your SNS AWS Console, after clicking on a topic. Same as AWS Account ID. *[required]*\n* __topic_arn:__ Also found in SNS AWS Console - listed under a topic as Topic ARN. *[required]*\n* __region:__ AWS Region to use. Can be one of: `us-east-1`,`us-west-1`,`eu-west-1`,`ap-southeast-1`,`ap-northeast-1`,`us-gov-west-1`,`sa-east-1`. (default: `us-east-1`)\n* __subject:__ Subject for notifications. (default: "Winston Error Report")\n* __message:__ Message of notifications. Uses placeholders for level (%l), error message (%e), and metadata (%m). (default: "Level \'%l\' Error:\\n%e\\n\\nMetadata:\\n%m")\n* __level:__ lowest level this transport will log. (default: `info`)\n\n### Graylog2 Transport\n\n[winston-graylog2][22] is a Graylog2 transport:\n\n``` js\n  var Graylog2 = require(\'winston-graylog2\').Graylog2;\n  winston.add(Graylog2, options);\n```\n\nThe Graylog2 transport connects to a Graylog2 server over UDP using the following options:\n\n* __level:__ Level of messages this transport should log. (default: info)\n* __silent:__ Boolean flag indicating whether to suppress output. (default: false)\n\n* __graylogHost:__ IP address or hostname of the graylog2 server. (default: localhost)\n* __graylogPort:__ Port to send messages to on the graylog2 server. (default: 12201)\n* __graylogHostname:__ The hostname associated with graylog2 messages. (default: require(\'os\').hostname())\n* __graylogFacility:__ The graylog2 facility to send log messages.. (default: nodejs)\n\n*Metadata:* Stringified as JSON in the full message GELF field.\n\n### Adding Custom Transports\nAdding a custom transport (say for one of the datastore on the Roadmap) is actually pretty easy. All you need to do is accept a couple of options, set a name, implement a log() method, and add it to the set of transports exposed by winston.\n\n``` js\n  var util = require(\'util\'),\n      winston = require(\'winston\');\n\n  var CustomLogger = winston.transports.CustomerLogger = function (options) {\n    //\n    // Name this logger\n    //\n    this.name = \'customLogger\';\n\n    //\n    // Set the level from your options\n    //\n    this.level = options.level || \'info\';\n\n    //\n    // Configure your storage backing as you see fit\n    //\n  };\n\n  //\n  // Inherit from `winston.Transport` so you can take advantage\n  // of the base functionality and `.handleExceptions()`.\n  //\n  util.inherits(CustomLogger, winston.Transport);\n\n  CustomLogger.prototype.log = function (level, msg, meta, callback) {\n    //\n    // Store this message and metadata, maybe use some custom logic\n    // then callback indicating success.\n    //\n    callback(null, true);\n  };\n```\n\n### Inspirations\n1. [npm][0]\n2. [log.js][4]\n3. [socket.io][5]\n4. [node-rlog][6]\n5. [BigBrother][7]\n6. [Loggly][8]\n\n## Installation\n\n### Installing npm (node package manager)\n```\n  curl http://npmjs.org/install.sh | sh\n```\n\n### Installing winston\n```\n  [sudo] npm install winston\n```\n\n## Run Tests\nAll of the winston tests are written in [vows][9], and designed to be run with npm. \n\n``` bash\n  $ npm test\n```\n\n#### Author: [Charlie Robbins](http://twitter.com/indexzero)\n#### Contributors: [Matthew Bergman](http://github.com/fotoverite), [Marak Squires](http://github.com/marak)\n\n[0]: https://github.com/isaacs/npm/blob/master/lib/utils/log.js\n[1]: http://nodejs.org/docs/v0.3.5/api/events.html#events.EventEmitter\n[2]: http://github.com/nodejitsu/require-analyzer\n[3]: http://nodejitsu.com\n[4]: https://github.com/visionmedia/log.js\n[5]: http://socket.io\n[6]: https://github.com/jbrisbin/node-rlog\n[7]: https://github.com/feisty/BigBrother\n[8]: http://loggly.com\n[9]: http://vowsjs.org\n',
334 silly resolved     readmeFilename: 'README.md',
334 silly resolved     bugs: { url: 'https://github.com/flatiron/winston/issues' },
334 silly resolved     _id: 'winston@0.6.2',
334 silly resolved     _from: 'winston@0.6.2' },
334 silly resolved   { author: { name: 'Martin Murphy', email: 'martin.murphy@feedhenry.com' },
334 silly resolved     name: 'fh-reportingclient',
334 silly resolved     keywords: [ 'fh-reporting', 'feedhenry' ],
334 silly resolved     description: 'FH Reporting Client',
334 silly resolved     version: '0.2.2',
334 silly resolved     directories: { lib: './lib' },
334 silly resolved     main: './lib/fh-reporting.js',
334 silly resolved     scripts: { test: 'expresso -I lib' },
334 silly resolved     engines: { node: '>=0.4.12' },
334 silly resolved     dependencies: { async: '0.1.16', request: '2.9.100' },
334 silly resolved     man: [ './man/fh-reportingclient.1' ],
334 silly resolved     readme: 'ERROR: No README data found!',
334 silly resolved     _id: 'fh-reportingclient@0.2.2',
334 silly resolved     _from: 'fh-reportingclient@*' },
334 silly resolved   { name: 'fh-amqp-js',
334 silly resolved     version: '0.2.1',
334 silly resolved     description: 'FeedHenry AMQP Client',
334 silly resolved     main: './lib/amqpjs.js',
334 silly resolved     bin: { 'fh-amqp-js': './fh-amqp-js.js' },
334 silly resolved     directories: { lib: './lib' },
334 silly resolved     dependencies: { async: '0.2.7', amqp: '0.1.6', rc: '0.1.1' },
334 silly resolved     devDependencies: { whiskey: '0.6.13', proxyquire: '0.4.0' },
334 silly resolved     private: false,
334 silly resolved     scripts: { test: 'make test' },
334 silly resolved     readme: 'fh-amqp-js\n==========\n\nFeedHenry AMQP client wrapper for communication with a Rabbit cluster. \n\nOverview\n--------\n\nThe FeedHenry Platform includes a RabbitMQ cluster, which is set up to have highly available [Mirrored Queues](http://www.rabbitmq.com/ha.html). The messaging pattern that best suits our development requirements is the \'Topic\' pattern, described in the RabbitMQ [documentation](http://www.rabbitmq.com/tutorials/tutorial-five-python.html). \n\nThis client library helps with the following:\n\n* Automatic detection of Rabbit node failure and reconnecting to another node in the Rabbit Cluster.\n\n* \'publishTopic\' and \'subscribeToTopic\' type functions that set up correct Exchange and Q configuration behind the scenes.\n\nYou probably won\'t, but if you think you need to use a different Q type or Message Q Pattern, you will need to either extend this library, or use the [AMQP driver](https://github.com/postwait/node-amqp) directly.\n\nThis module can also be used from the command line, to quick publish a message to the FeedHenry Rabbit Cluster, or also as a handy way to quickly subscribe to FeedHenry messages.\n\nModule Usage\n------------\n\nSample [sub.js](https://github.com/fheng/fh-amqp-js/blob/master/examples/sub.js):\n\n```javascript\nvar fhamqpjs = require(\'fh-amqp-js\');\nvar cfg = {\n  clusterNodes: ["amqp://guest:guest@dummy.feedhenry.me:5672/fh-events", "amqp://guest:guest@dummy.feedhenry.me:5673/fh-events"],\n  maxReconnectAttempts: 10  // specifies how may connection failures to attempt before giving up.\n};\n \nvar amqpManager = new fhamqpjs.AMQPManager(cfg);\namqpManager.connectToCluster();\n \n// Note that the \'connection\' event will fire every time a connection is made to a different Rabbit Node in the cluster (i.e. if the first node we\'re connected to fails, this connection event will fire when we get connected to the next node in the cluster. Somewhat suboptimal but can\'t do much about it currently.\namqpManager.on("connection", function(){\n  amqpManager.subscribeToTopic("fh-event-exchange", "my-event-q", "my-topic-filter.#", subscribeFunc, function(err){\n    if(err) console.error("Fatal error setting up subscriber: ", err); \n...\n  });\n});\n \n// error handler: something fatal (like can\'t connect to any nodes in a cluster) needs to happen for this to fire.\namqpManager.on("error", function(err){\n  console.error("Fatal error: ", err);\n});\n \n// the function that gets called each time a message is recieved\nfunction subscribeFunc (json, headers, deliveryInfo) {\n  console.log("GOT MESSAGE: ", json);\n};\n```\n\nSample [pub.js](https://github.com/fheng/fh-amqp-js/blob/master/examples/pub.js):\n\n```javascript\nvar fhamqpjs = require(\'fh-amqp-js\');\nvar cfg = {\n  clusterNodes: ["amqp://guest:guest@dummy.feedhenry.me:5672/fh-events", "amqp://guest:guest@dummy.feedhenry.me:5673/fh-events"],\n  maxReconnectAttempts: 10\n};\n \nvar amqpManager = new fhamqpjs.AMQPManager(cfg);\namqpManager.connectToCluster();\n \n// note we clear the timer on each (re)connection\nvar t; var count=0;\namqpManager.on("connection", function(){\n  if (t) clearInterval(t);\n  t = setInterval(function(){\n    amqpManager.publishTopic("fh-event-exchange", "topic", {count: count++}, function(err){\n      if (err) console.error("Fatal publishing error: ", err);\n    });\n  }, 1000);\n});\n \namqpManager.on("error", function(err){\n  console.error("Fatal error: ", err);\n});\n\n```\n\nNote that the vhosts, Exchange names and Topics used internally in FeedHenry are documented here: TODO.\n\nCLI Usage\n---------\n\n    Usage: fh-amqp-js pub <exchange> <topic> <message> --clusterNodes=[<amqp-url>,*]\n    fh-amqp-js sub <exchange> <topic> --clusterNodes=[<amqp-url>,*]\n\n\nThe Command Line Interface can be used to quickly publish messages, e.g.\n\n    $ fh-amqp-js pub "fh-topic2" "fh.event.count" \'{"count": 1}\' --clusterNodes=\'["amqp://guest:guest@dummy.feedhenry.me:5672"]\'\n\nThere is also a \'sub\' command, for quickly subscribing to messages:\n\n    $ fh-amqp-js sub "fh-topic2" "fh.event.count" --clusterNodes=\'["amqp://guest:guest@dummy.feedhenry.me:5672"]\'\n\nConfiguration:\n\nThe CLI uses the [RC](https://github.com/dominictarr/rc) node module for incredibly flexible config finding (see its documentation). Config options currently are:\n\n```javascript\n{\n  clusterNodes: ["amqp://guest:guest@dummy.feedhenry.me:5672/fh-events", "amqp://guest:guest@dummy.feedhenry.me:5673/fh-events"],\n  maxReconnectAttempts: 10  // specifies how may connection failures to attempt before giving up.\n}\n```\n\nDevelopment\n-----------\n\nTo run the tests:\n\n    make test\n\nor:\n\n    make test-coverage-cli\n\nor: \n\n    make test-coverage-html\n\nBuild artifacts are located on Denzil here: http://denzil.henora.net:8080/view/common/job/fh-amqp-js/',
334 silly resolved     readmeFilename: 'README.md',
334 silly resolved     _id: 'fh-amqp-js@0.2.1',
334 silly resolved     _from: 'fh-amqp-js@*' },
334 silly resolved   { name: 'moment',
334 silly resolved     version: '2.0.0',
334 silly resolved     description: 'Parse, manipulate, and display dates.',
334 silly resolved     homepage: 'http://momentjs.com',
334 silly resolved     author:
334 silly resolved      { name: 'Tim Wood',
334 silly resolved        email: 'washwithcare@gmail.com',
334 silly resolved        url: 'http://timwoodcreates.com/' },
334 silly resolved     contributors: [ [Object], [Object] ],
334 silly resolved     keywords:
334 silly resolved      [ 'moment',
334 silly resolved        'date',
334 silly resolved        'time',
334 silly resolved        'parse',
334 silly resolved        'format',
334 silly resolved        'validate',
334 silly resolved        'i18n',
334 silly resolved        'l10n',
334 silly resolved        'ender' ],
334 silly resolved     main: './moment.js',
334 silly resolved     engines: { node: '*' },
334 silly resolved     repository: { type: 'git', url: 'https://github.com/timrwood/moment.git' },
334 silly resolved     bugs: { url: 'https://github.com/timrwood/moment/issues' },
334 silly resolved     licenses: [ [Object] ],
334 silly resolved     devDependencies: { 'uglify-js': 'latest', nodeunit: 'latest', grunt: 'latest' },
334 silly resolved     scripts: { test: 'grunt' },
334 silly resolved     ender: './ender.js',
334 silly resolved     dojoBuild: 'package.js',
334 silly resolved     readme: 'A lightweight javascript date library for parsing, validating, manipulating, and formatting dates.\n\n# [Documentation](http://momentjs.com/docs/)\n\nUpgrading to 2.0.0\n==================\n\nThere are a number of small backwards incompatible changes with version 2.0.0.\n\n[See them and their descriptions here](https://gist.github.com/timrwood/e72f2eef320ed9e37c51#backwards-incompatible-changes)\n\nChanged language ordinal method to return the number + ordinal instead of just the ordinal.\n\nChanged two digit year parsing cutoff to match strptime.\n\nRemoved `moment#sod` and `moment#eod` in favor of `moment#startOf` and `moment#endOf`.\n\nRemoved `moment.humanizeDuration()` in favor of `moment.duration().humanize()`.\n\nRemoved the lang data objects from the top level namespace.\n\nDuplicate `Date` passed to `moment()` instead of referencing it.\n\n\nUpgrading to 1.6.0\n==================\n\nThere are a few things being deprecated in the 1.6.0 release.\n\n1. The format tokens `z` and `zz` (timezone abbreviations like EST CST MST etc) will no longer be supported. Due to inconsistent browser support, we are unable to consistently produce this value. See [this issue](https://github.com/timrwood/moment/issues/162) for more background.\n\n2. The method `moment.fn.native` is deprecated in favor of `moment.fn.toDate`. There continue to be issues with Google Closure Compiler throwing errors when using `native`, even in valid instances.\n\n3. The way to customize am/pm strings is being changed. This would only affect you if you created a custom language file. For more information, see [this issue](https://github.com/timrwood/moment/pull/222).\n\n\nChangelog\n=========\n\n\n### 2.0.0 [See changelog](https://gist.github.com/timrwood/e72f2eef320ed9e37c51)\n\nAdded short form localized tokens.\n\nAdded ability to define language a string should be parsed in.\n\nAdded support for reversed add/subtract arguments.\n\nAdded support for `endOf(\'week\')` and `startOf(\'week\')`.\n\nFixed the logic for `moment#diff(Moment, \'months\')` and `moment#diff(Moment, \'years\')`\n\n`moment#diff` now floors instead of rounds.\n\nNormalized `moment#toString`.\n\nAdded `isSame`, `isAfter`, and `isBefore` methods.\n\nAdded better week support.\n\nAdded `moment#toJSON`\n\nBugfix: Fixed parsing of first century dates\n\nBugfix: Parsing 10Sep2001 should work as expected\n\nBugfix: Fixed wierdness with `moment.utc()` parsing.\n\nChanged language ordinal method to return the number + ordinal instead of just the ordinal.\n\nChanged two digit year parsing cutoff to match strptime.\n\nRemoved `moment#sod` and `moment#eod` in favor of `moment#startOf` and `moment#endOf`.\n\nRemoved `moment.humanizeDuration()` in favor of `moment.duration().humanize()`.\n\nRemoved the lang data objects from the top level namespace.\n\nDuplicate `Date` passed to `moment()` instead of referencing it.\n\n### 1.7.2 [See discussion](https://github.com/timrwood/moment/issues/456)\n\nBugfixes\n\n### 1.7.1 [See discussion](https://github.com/timrwood/moment/issues/384)\n\nBugfixes\n\n### 1.7.0 [See discussion](https://github.com/timrwood/moment/issues/288)\n\nAdded `moment.fn.endOf()` and `moment.fn.startOf()`.\n\nAdded validation via `moment.fn.isValid()`.\n\nMade formatting method 3x faster. http://jsperf.com/momentjs-cached-format-functions\n\nAdd support for month/weekday callbacks in `moment.fn.format()`\n\nAdded instance specific languages.\n\nAdded two letter weekday abbreviations with the formatting token `dd`.\n\nVarious language updates.\n\nVarious bugfixes.\n\n### 1.6.0 [See discussion](https://github.com/timrwood/moment/pull/268)\n\nAdded Durations.\n\nRevamped parser to support parsing non-separated strings (YYYYMMDD vs YYYY-MM-DD).\n\nAdded support for millisecond parsing and formatting tokens (S SS SSS)\n\nAdded a getter for `moment.lang()`\n\nVarious bugfixes.\n\n### 1.5.0 [See milestone](https://github.com/timrwood/moment/issues?milestone=10&page=1&state=closed)\n\nAdded UTC mode.\n\nAdded automatic ISO8601 parsing.\n\nVarious bugfixes.\n\n### 1.4.0 [See milestone](https://github.com/timrwood/moment/issues?milestone=8&state=closed)\n\nAdded `moment.fn.toDate` as a replacement for `moment.fn.native`.\n\nAdded `moment.fn.sod` and `moment.fn.eod` to get the start and end of day.\n\nVarious bugfixes.\n\n### 1.3.0 [See milestone](https://github.com/timrwood/moment/issues?milestone=7&state=closed)\n\nAdded support for parsing month names in the current language.\n\nAdded escape blocks for parsing tokens.\n\nAdded `moment.fn.calendar` to format strings like \'Today 2:30 PM\', \'Tomorrow 1:25 AM\', and \'Last Sunday 4:30 AM\'.\n\nAdded `moment.fn.day` as a setter.\n\nVarious bugfixes\n\n### 1.2.0 [See milestone](https://github.com/timrwood/moment/issues?milestone=4&state=closed)\n\nAdded timezones to parser and formatter.\n\nAdded `moment.fn.isDST`.\n\nAdded `moment.fn.zone` to get the timezone offset in minutes.\n\n### 1.1.2 [See milestone](https://github.com/timrwood/moment/issues?milestone=6&state=closed)\n\nVarious bugfixes\n\n### 1.1.1 [See milestone](https://github.com/timrwood/moment/issues?milestone=5&state=closed)\n\nAdded time specific diffs (months, days, hours, etc)\n\n### 1.1.0\n\nAdded `moment.fn.format` localized masks. \'L LL LLL LLLL\' [issue 29](https://github.com/timrwood/moment/pull/29)\n\nFixed [issue 31](https://github.com/timrwood/moment/pull/31).\n\n### 1.0.1\n\nAdded `moment.version` to get the current version.\n\nRemoved `window !== undefined` when checking if module exists to support browserify. [issue 25](https://github.com/timrwood/moment/pull/25)\n\n### 1.0.0\n\nAdded convenience methods for getting and setting date parts.\n\nAdded better support for `moment.add()`.\n\nAdded better lang support in NodeJS.\n\nRenamed library from underscore.date to Moment.js\n\n### 0.6.1\n\nAdded Portuguese, Italian, and French language support\n\n### 0.6.0\n\nAdded _date.lang() support.\nAdded support for passing multiple formats to try to parse a date. _date("07-10-1986", ["MM-DD-YYYY", "YYYY-MM-DD"]);\nMade parse from string and single format 25% faster.\n\n### 0.5.2\n\nBugfix for [issue 8](https://github.com/timrwood/underscore.date/pull/8) and [issue 9](https://github.com/timrwood/underscore.date/pull/9).\n\n### 0.5.1\n\nBugfix for [issue 5](https://github.com/timrwood/underscore.date/pull/5).\n\n### 0.5.0\n\nDropped the redundant `_date.date()` in favor of `_date()`.\nRemoved `_date.now()`, as it is a duplicate of `_date()` with no parameters.\nRemoved `_date.isLeapYear(yearNumber)`. Use `_date([yearNumber]).isLeapYear()` instead.\nExposed customization options through the `_date.relativeTime`, `_date.weekdays`, `_date.weekdaysShort`, `_date.months`, `_date.monthsShort`, and `_date.ordinal` variables instead of the `_date.customize()` function.\n\n### 0.4.1\n\nAdded date input formats for input strings.\n\n### 0.4.0\n\nAdded underscore.date to npm. Removed dependencies on underscore.\n\n### 0.3.2\n\nAdded `\'z\'` and `\'zz\'` to `_.date().format()`. Cleaned up some redundant code to trim off some bytes.\n\n### 0.3.1\n\nCleaned up the namespace. Moved all date manipulation and display functions to the _.date() object.\n\n### 0.3.0\n\nSwitched to the Underscore methodology of not mucking with the native objects\' prototypes.\nMade chaining possible.\n\n### 0.2.1\n\nChanged date names to be a more pseudo standardized \'dddd, MMMM Do YYYY, h:mm:ss a\'.\nAdded `Date.prototype` functions `add`, `subtract`, `isdst`, and `isleapyear`.\n\n### 0.2.0\n\nChanged function names to be more concise.\nChanged date format from php date format to custom format.\n\n### 0.1.0\n\nInitial release\n\nLicense\n=======\n\nMoment.js is freely distributable under the terms of the MIT license.\n\nCopyright (c) 2011-2012 Tim Wood\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\nfiles (the "Software"), to deal in the Software without restriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
334 silly resolved     readmeFilename: 'readme.md',
334 silly resolved     _id: 'moment@2.0.0',
334 silly resolved     _from: 'moment@2.0.0' },
334 silly resolved   { name: 'fh-security',
334 silly resolved     description: 'FeedHenry Security Library',
334 silly resolved     version: '0.1.2-3',
334 silly resolved     repository: { type: 'git', url: 'git@github.com:fheng/fh-security.git' },
334 silly resolved     author: { name: 'Wei Li', email: 'wei.li@feedhenry.com' },
334 silly resolved     main: './lib/security.js',
334 silly resolved     directories: { lib: './lib/' },
334 silly resolved     scripts: { test: 'expresso -I lib' },
334 silly resolved     engines: { node: '*' },
334 silly resolved     optionalDependencies: { ursa: '*' },
334 silly resolved     bugs: { url: 'https://github.com/fheng/fh-security/issues' },
334 silly resolved     readme: 'ERROR: No README data found!',
334 silly resolved     dependencies: { ursa: '*' },
334 silly resolved     _id: 'fh-security@0.1.2-3',
334 silly resolved     _from: 'fh-security@*' } ]
335 info install fh-connect@1.8.6 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
336 info install request@2.12.0 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
337 info install async@0.2.1 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
338 info install redis@0.8.2 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
339 info install fh-statsc@0.2.1 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
340 info install winston@0.6.2 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
341 info install fh-reportingclient@0.2.2 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
342 info install fh-amqp-js@0.2.1 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
343 info install moment@2.0.0 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
344 info install fh-security@0.1.2-3 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
345 info installOne fh-connect@1.8.6
346 warn engine fh-connect@1.8.6: wanted: {"node":">= 0.6.0 < 0.9.0"} (current: {"node":"v0.10.11","npm":"1.2.30"})
347 info installOne request@2.12.0
348 info installOne async@0.2.1
349 info installOne redis@0.8.2
350 info installOne fh-statsc@0.2.1
351 info installOne winston@0.6.2
352 info installOne fh-reportingclient@0.2.2
353 info installOne fh-amqp-js@0.2.1
354 info installOne moment@2.0.0
355 info installOne fh-security@0.1.2-3
356 verbose from cache /Users/bmackey/.npm/fh-connect/1.8.6/package/package.json
357 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect unbuild
358 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/package.json
359 verbose from cache /Users/bmackey/.npm/request/2.12.0/package/package.json
360 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/request unbuild
361 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/request/package.json
362 verbose from cache /Users/bmackey/.npm/async/0.2.1/package/package.json
363 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async unbuild
364 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async/package.json
365 verbose from cache /Users/bmackey/.npm/redis/0.8.2/package/package.json
366 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis unbuild
367 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis/package.json
368 verbose from cache /Users/bmackey/.npm/fh-statsc/0.2.1/package/package.json
369 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc unbuild
370 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/package.json
371 verbose from cache /Users/bmackey/.npm/winston/0.6.2/package/package.json
372 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston unbuild
373 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/package.json
374 verbose from cache /Users/bmackey/.npm/fh-reportingclient/0.2.2/package/package.json
375 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient unbuild
376 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/package.json
377 verbose from cache /Users/bmackey/.npm/fh-amqp-js/0.2.1/package/package.json
378 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js unbuild
379 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/package.json
380 verbose from cache /Users/bmackey/.npm/moment/2.0.0/package/package.json
381 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment unbuild
382 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment/package.json
383 verbose from cache /Users/bmackey/.npm/fh-security/0.1.2-3/package/package.json
384 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security unbuild
385 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/package.json
386 verbose tar unpack /Users/bmackey/.npm/fh-connect/1.8.6/package.tgz
387 silly lockFile 6ba771ee--nodeapp-node-modules-fh-connect tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
388 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect /Users/bmackey/.npm/6ba771ee--nodeapp-node-modules-fh-connect.lock
389 silly lockFile 82617ff2-npm-fh-connect-1-8-6-package-tgz tar:///Users/bmackey/.npm/fh-connect/1.8.6/package.tgz
390 verbose lock tar:///Users/bmackey/.npm/fh-connect/1.8.6/package.tgz /Users/bmackey/.npm/82617ff2-npm-fh-connect-1-8-6-package-tgz.lock
391 verbose tar unpack /Users/bmackey/.npm/request/2.12.0/package.tgz
392 silly lockFile d21ec71e--fh-nodeapp-node-modules-request tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/request
393 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/request /Users/bmackey/.npm/d21ec71e--fh-nodeapp-node-modules-request.lock
394 silly lockFile dace1ac6-y-npm-request-2-12-0-package-tgz tar:///Users/bmackey/.npm/request/2.12.0/package.tgz
395 verbose lock tar:///Users/bmackey/.npm/request/2.12.0/package.tgz /Users/bmackey/.npm/dace1ac6-y-npm-request-2-12-0-package-tgz.lock
396 verbose tar unpack /Users/bmackey/.npm/async/0.2.1/package.tgz
397 silly lockFile 79321267-es-fh-nodeapp-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async
398 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async /Users/bmackey/.npm/79321267-es-fh-nodeapp-node-modules-async.lock
399 silly lockFile c37f89a4-ckey-npm-async-0-2-1-package-tgz tar:///Users/bmackey/.npm/async/0.2.1/package.tgz
400 verbose lock tar:///Users/bmackey/.npm/async/0.2.1/package.tgz /Users/bmackey/.npm/c37f89a4-ckey-npm-async-0-2-1-package-tgz.lock
401 verbose tar unpack /Users/bmackey/.npm/redis/0.8.2/package.tgz
402 silly lockFile 3cfc7fba-es-fh-nodeapp-node-modules-redis tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis
403 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis /Users/bmackey/.npm/3cfc7fba-es-fh-nodeapp-node-modules-redis.lock
404 silly lockFile 48bff734-ckey-npm-redis-0-8-2-package-tgz tar:///Users/bmackey/.npm/redis/0.8.2/package.tgz
405 verbose lock tar:///Users/bmackey/.npm/redis/0.8.2/package.tgz /Users/bmackey/.npm/48bff734-ckey-npm-redis-0-8-2-package-tgz.lock
406 verbose tar unpack /Users/bmackey/.npm/fh-statsc/0.2.1/package.tgz
407 silly lockFile 21d1f4f8-h-nodeapp-node-modules-fh-statsc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
408 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc /Users/bmackey/.npm/21d1f4f8-h-nodeapp-node-modules-fh-statsc.lock
409 silly lockFile d47320fe--npm-fh-statsc-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-statsc/0.2.1/package.tgz
410 verbose lock tar:///Users/bmackey/.npm/fh-statsc/0.2.1/package.tgz /Users/bmackey/.npm/d47320fe--npm-fh-statsc-0-2-1-package-tgz.lock
411 verbose tar unpack /Users/bmackey/.npm/winston/0.6.2/package.tgz
412 silly lockFile 9e7c30cc--fh-nodeapp-node-modules-winston tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
413 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston /Users/bmackey/.npm/9e7c30cc--fh-nodeapp-node-modules-winston.lock
414 silly lockFile bf707e49-ey-npm-winston-0-6-2-package-tgz tar:///Users/bmackey/.npm/winston/0.6.2/package.tgz
415 verbose lock tar:///Users/bmackey/.npm/winston/0.6.2/package.tgz /Users/bmackey/.npm/bf707e49-ey-npm-winston-0-6-2-package-tgz.lock
416 verbose tar unpack /Users/bmackey/.npm/fh-reportingclient/0.2.2/package.tgz
417 silly lockFile 03189c61--node-modules-fh-reportingclient tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
418 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient /Users/bmackey/.npm/03189c61--node-modules-fh-reportingclient.lock
419 silly lockFile 4cef1e07-eportingclient-0-2-2-package-tgz tar:///Users/bmackey/.npm/fh-reportingclient/0.2.2/package.tgz
420 verbose lock tar:///Users/bmackey/.npm/fh-reportingclient/0.2.2/package.tgz /Users/bmackey/.npm/4cef1e07-eportingclient-0-2-2-package-tgz.lock
421 verbose tar unpack /Users/bmackey/.npm/fh-amqp-js/0.2.1/package.tgz
422 silly lockFile 730b588c--nodeapp-node-modules-fh-amqp-js tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
423 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js /Users/bmackey/.npm/730b588c--nodeapp-node-modules-fh-amqp-js.lock
424 silly lockFile de0c74e0-npm-fh-amqp-js-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-amqp-js/0.2.1/package.tgz
425 verbose lock tar:///Users/bmackey/.npm/fh-amqp-js/0.2.1/package.tgz /Users/bmackey/.npm/de0c74e0-npm-fh-amqp-js-0-2-1-package-tgz.lock
426 verbose tar unpack /Users/bmackey/.npm/moment/2.0.0/package.tgz
427 silly lockFile cee45a8a-s-fh-nodeapp-node-modules-moment tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment
428 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment /Users/bmackey/.npm/cee45a8a-s-fh-nodeapp-node-modules-moment.lock
429 silly lockFile f0da5709-key-npm-moment-2-0-0-package-tgz tar:///Users/bmackey/.npm/moment/2.0.0/package.tgz
430 verbose lock tar:///Users/bmackey/.npm/moment/2.0.0/package.tgz /Users/bmackey/.npm/f0da5709-key-npm-moment-2-0-0-package-tgz.lock
431 verbose tar unpack /Users/bmackey/.npm/fh-security/0.1.2-3/package.tgz
432 silly lockFile 9ddf865e-nodeapp-node-modules-fh-security tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security
433 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security /Users/bmackey/.npm/9ddf865e-nodeapp-node-modules-fh-security.lock
434 silly lockFile c87c8948--fh-security-0-1-2-3-package-tgz tar:///Users/bmackey/.npm/fh-security/0.1.2-3/package.tgz
435 verbose lock tar:///Users/bmackey/.npm/fh-security/0.1.2-3/package.tgz /Users/bmackey/.npm/c87c8948--fh-security-0-1-2-3-package-tgz.lock
436 silly gunzTarPerm modes [ '755', '644' ]
437 silly gunzTarPerm modes [ '755', '644' ]
438 silly gunzTarPerm modes [ '755', '644' ]
439 silly gunzTarPerm modes [ '755', '644' ]
440 silly gunzTarPerm modes [ '755', '644' ]
441 silly gunzTarPerm modes [ '755', '644' ]
442 silly gunzTarPerm modes [ '755', '644' ]
443 silly gunzTarPerm modes [ '755', '644' ]
444 silly gunzTarPerm modes [ '755', '644' ]
445 silly gunzTarPerm modes [ '755', '644' ]
446 silly gunzTarPerm extractEntry package.json
447 silly gunzTarPerm extractEntry package.json
448 silly gunzTarPerm extractEntry package.json
449 silly gunzTarPerm extractEntry package.json
450 silly gunzTarPerm extractEntry package.json
451 silly gunzTarPerm extractEntry package.json
452 silly gunzTarPerm extractEntry package.json
453 silly gunzTarPerm extractEntry package.json
454 silly gunzTarPerm extractEntry package.json
455 silly gunzTarPerm extractEntry .npmignore
456 silly gunzTarPerm extractEntry LICENSE
457 silly gunzTarPerm extractEntry package.json
458 silly gunzTarPerm extractEntry README.md
459 silly gunzTarPerm extractEntry LICENSE
460 silly gunzTarPerm extractEntry lib/async.js
461 silly gunzTarPerm extractEntry .npmignore
462 silly gunzTarPerm extractEntry README.md
463 silly gunzTarPerm extractEntry .npmignore
464 silly gunzTarPerm extractEntry README.md
465 silly gunzTarPerm extractEntry CHANGELOG.txt
466 silly gunzTarPerm extractEntry VERSION.txt
467 silly gunzTarPerm extractEntry CHANGELOG.txt
468 silly gunzTarPerm extractEntry VERSION.txt
469 silly gunzTarPerm extractEntry VERSION.txt
470 silly gunzTarPerm extractEntry lib/security.js
471 silly gunzTarPerm extractEntry .npmignore
472 silly gunzTarPerm extractEntry README.md
473 silly gunzTarPerm extractEntry .npmignore
474 silly gunzTarPerm extractEntry LICENSE
475 silly gunzTarPerm extractEntry README.md
476 silly gunzTarPerm extractEntry LICENSE
477 silly gunzTarPerm extractEntry index.js
478 silly gunzTarPerm extractEntry Readme.md
479 silly gunzTarPerm extractEntry test.js
480 silly gunzTarPerm extractEntry example/package.json
481 silly gunzTarPerm extractEntry example/bin/fh-reptest.js
482 silly gunzTarPerm extractEntry man/fh-security.1
483 silly gunzTarPerm extractEntry LICENSE
484 silly gunzTarPerm extractEntry bin/fh-statsc.js
485 silly gunzTarPerm extractEntry lib/stats.js
486 silly gunzTarPerm extractEntry fh-amqp-js.js
487 silly gunzTarPerm extractEntry LICENSE.txt
488 silly gunzTarPerm extractEntry ender.js
489 silly gunzTarPerm extractEntry grunt.js
490 silly gunzTarPerm extractEntry aws.js
491 silly gunzTarPerm extractEntry lib/cache.js
492 silly gunzTarPerm extractEntry lib/connect.js
493 silly gunzTarPerm extractEntry diff_multi_bench_output.js
494 silly gunzTarPerm extractEntry multi_bench.js
495 silly gunzTarPerm extractEntry lib/fh-reporting.js
496 silly gunzTarPerm extractEntry man/fh-reportingclient.1
497 silly gunzTarPerm extractEntry .travis.yml
498 silly gunzTarPerm extractEntry docs/transports.md
499 silly gunzTarPerm extractEntry Makefile
500 silly gunzTarPerm extractEntry dfc-debug.log
501 silly gunzTarPerm extractEntry dist/fh-amqp-js-0.1.0-DEV-VERSION.tar.gz
502 silly gunzTarPerm extractEntry lib/amqpjs.js
503 silly gunzTarPerm extractEntry lib/fhevents.js
504 silly gunzTarPerm extractEntry output/fh-amqp-js-0.1.0-DEV-VERSION/package.json
505 silly gunzTarPerm extractEntry output/fh-amqp-js-0.1.0-DEV-VERSION/fh-amqp-js.js
506 silly gunzTarPerm extractEntry output/fh-amqp-js-0.1.0-DEV-VERSION/VERSION.txt
507 silly gunzTarPerm extractEntry output/fh-amqp-js-0.1.0-DEV-VERSION/lib/amqpjs.js
508 silly gunzTarPerm extractEntry man/fh-statsc.1
509 silly gunzTarPerm extractEntry package.json.bak
510 silly gunzTarPerm extractEntry moment.js
511 silly gunzTarPerm extractEntry package.js
512 silly gunzTarPerm extractEntry package.json.bak
513 silly gunzTarPerm extractEntry lib/http.js
514 silly gunzTarPerm extractEntry lib/https.js
515 silly gunzTarPerm extractEntry .travis.yml
516 silly gunzTarPerm extractEntry CONTRIBUTING.md
517 silly gunzTarPerm extractEntry lib/index.js
518 silly gunzTarPerm extractEntry lib/patch.js
519 silly gunzTarPerm extractEntry test/lang/ar-ma.js
520 silly gunzTarPerm extractEntry test/lang/gl.js
521 silly gunzTarPerm extractEntry forever.js
522 silly gunzTarPerm extractEntry main.js
523 silly gunzTarPerm extractEntry lib/utils.js
524 silly gunzTarPerm extractEntry lib/middleware/basicAuth.js
525 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/package.json
526 silly gunzTarPerm extractEntry test/lang/he.js
527 silly gunzTarPerm extractEntry test/lang/hu.js
528 silly lockFile 9ddf865e-nodeapp-node-modules-fh-security tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security
529 silly lockFile 9ddf865e-nodeapp-node-modules-fh-security tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security
530 silly lockFile c87c8948--fh-security-0-1-2-3-package-tgz tar:///Users/bmackey/.npm/fh-security/0.1.2-3/package.tgz
531 silly lockFile c87c8948--fh-security-0-1-2-3-package-tgz tar:///Users/bmackey/.npm/fh-security/0.1.2-3/package.tgz
532 silly gunzTarPerm extractEntry lib/middleware/errorHandler.js
533 silly gunzTarPerm extractEntry lib/middleware/favicon.js
534 info preinstall fh-security@0.1.2-3
535 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/package.json
536 verbose readDependencies using package.json deps
537 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/package.json
538 verbose readDependencies using package.json deps
539 verbose cache add [ 'ursa@*', null ]
540 verbose cache add name=undefined spec="ursa@*" args=["ursa@*",null]
541 verbose parsed url { protocol: null,
541 verbose parsed url   slashes: null,
541 verbose parsed url   auth: null,
541 verbose parsed url   host: null,
541 verbose parsed url   port: null,
541 verbose parsed url   hostname: null,
541 verbose parsed url   hash: null,
541 verbose parsed url   search: null,
541 verbose parsed url   query: null,
541 verbose parsed url   pathname: 'ursa@*',
541 verbose parsed url   path: 'ursa@*',
541 verbose parsed url   href: 'ursa@*' }
542 verbose cache add name="ursa" spec="*" args=["ursa","*"]
543 verbose parsed url { protocol: null,
543 verbose parsed url   slashes: null,
543 verbose parsed url   auth: null,
543 verbose parsed url   host: null,
543 verbose parsed url   port: null,
543 verbose parsed url   hostname: null,
543 verbose parsed url   hash: null,
543 verbose parsed url   search: null,
543 verbose parsed url   query: null,
543 verbose parsed url   pathname: '*',
543 verbose parsed url   path: '*',
543 verbose parsed url   href: '*' }
544 verbose addNamed [ 'ursa', '*' ]
545 verbose addNamed [ null, '' ]
546 silly lockFile 537bca9f-ursa ursa@*
547 verbose lock ursa@* /Users/bmackey/.npm/537bca9f-ursa.lock
548 silly gunzTarPerm extractEntry uuid.js
549 silly gunzTarPerm extractEntry tunnel.js
550 silly addNameRange { name: 'ursa', range: '', hasData: false }
551 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/package.json
552 silly gunzTarPerm extractEntry lib/middleware/limit.js
553 silly gunzTarPerm extractEntry lib/middleware/directory.js
554 verbose url raw ursa
555 verbose url resolving [ 'https://registry.npmjs.org/', './ursa' ]
556 verbose url resolved https://registry.npmjs.org/ursa
557 info trying registry request attempt 1 at 14:17:56
558 verbose etag "8SPUXMWUFSZPAVPZ7TQUZ7ZP6"
559 http GET https://registry.npmjs.org/ursa
560 silly lockFile 21d1f4f8-h-nodeapp-node-modules-fh-statsc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
561 silly lockFile 21d1f4f8-h-nodeapp-node-modules-fh-statsc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
562 silly lockFile d47320fe--npm-fh-statsc-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-statsc/0.2.1/package.tgz
563 silly lockFile d47320fe--npm-fh-statsc-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-statsc/0.2.1/package.tgz
564 silly gunzTarPerm extractEntry index.js
565 silly gunzTarPerm extractEntry test3.js
566 silly gunzTarPerm extractEntry examples/couchdb.js
567 silly gunzTarPerm extractEntry examples/exception.js
568 silly gunzTarPerm extractEntry oauth.js
569 silly gunzTarPerm extractEntry tests/test-https-strict.js
570 info preinstall fh-statsc@0.2.1
571 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/package.json
572 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/package.json
573 verbose readDependencies using package.json deps
574 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/package.json
575 verbose readDependencies using package.json deps
576 silly gunzTarPerm extractEntry lib/middleware/bodyParser.js
577 silly gunzTarPerm extractEntry lib/middleware/profiler.js
578 verbose cache add [ 'async@0.2.9', null ]
579 verbose cache add name=undefined spec="async@0.2.9" args=["async@0.2.9",null]
580 verbose parsed url { protocol: null,
580 verbose parsed url   slashes: null,
580 verbose parsed url   auth: null,
580 verbose parsed url   host: null,
580 verbose parsed url   port: null,
580 verbose parsed url   hostname: null,
580 verbose parsed url   hash: null,
580 verbose parsed url   search: null,
580 verbose parsed url   query: null,
580 verbose parsed url   pathname: 'async@0.2.9',
580 verbose parsed url   path: 'async@0.2.9',
580 verbose parsed url   href: 'async@0.2.9' }
581 verbose cache add name="async" spec="0.2.9" args=["async","0.2.9"]
582 verbose parsed url { protocol: null,
582 verbose parsed url   slashes: null,
582 verbose parsed url   auth: null,
582 verbose parsed url   host: null,
582 verbose parsed url   port: null,
582 verbose parsed url   hostname: null,
582 verbose parsed url   hash: null,
582 verbose parsed url   search: null,
582 verbose parsed url   query: null,
582 verbose parsed url   pathname: '0.2.9',
582 verbose parsed url   path: '0.2.9',
582 verbose parsed url   href: '0.2.9' }
583 verbose addNamed [ 'async', '0.2.9' ]
584 verbose addNamed [ '0.2.9', '0.2.9' ]
585 silly lockFile be62480b-async-0-2-9 async@0.2.9
586 verbose lock async@0.2.9 /Users/bmackey/.npm/be62480b-async-0-2-9.lock
587 silly gunzTarPerm extractEntry examples/raw-mode.js
588 silly gunzTarPerm extractEntry examples/webhook-post.js
589 silly lockFile 03189c61--node-modules-fh-reportingclient tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
590 silly lockFile 03189c61--node-modules-fh-reportingclient tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
591 silly lockFile 4cef1e07-eportingclient-0-2-2-package-tgz tar:///Users/bmackey/.npm/fh-reportingclient/0.2.2/package.tgz
592 silly lockFile 4cef1e07-eportingclient-0-2-2-package-tgz tar:///Users/bmackey/.npm/fh-reportingclient/0.2.2/package.tgz
593 verbose url raw async/0.2.9
594 verbose url resolving [ 'https://registry.npmjs.org/', './async/0.2.9' ]
595 verbose url resolved https://registry.npmjs.org/async/0.2.9
596 info trying registry request attempt 1 at 14:17:56
597 verbose etag "EMEUTIIMHACQUJENNNGQCRBQT"
598 http GET https://registry.npmjs.org/async/0.2.9
599 silly gunzTarPerm extractEntry tests/test-headers.js
600 silly gunzTarPerm extractEntry tests/test-httpModule.js
601 silly gunzTarPerm extractEntry lib/winston.js
602 silly gunzTarPerm extractEntry lib/winston/common.js
603 info preinstall fh-reportingclient@0.2.2
604 silly gunzTarPerm extractEntry lib/middleware/query.js
605 silly gunzTarPerm extractEntry lib/middleware/responseTime.js
606 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/package.json
607 verbose readDependencies using package.json deps
608 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/package.json
609 verbose readDependencies using package.json deps
610 verbose cache add [ 'async@0.1.16', null ]
611 verbose cache add name=undefined spec="async@0.1.16" args=["async@0.1.16",null]
612 verbose parsed url { protocol: null,
612 verbose parsed url   slashes: null,
612 verbose parsed url   auth: null,
612 verbose parsed url   host: null,
612 verbose parsed url   port: null,
612 verbose parsed url   hostname: null,
612 verbose parsed url   hash: null,
612 verbose parsed url   search: null,
612 verbose parsed url   query: null,
612 verbose parsed url   pathname: 'async@0.1.16',
612 verbose parsed url   path: 'async@0.1.16',
612 verbose parsed url   href: 'async@0.1.16' }
613 verbose cache add name="async" spec="0.1.16" args=["async","0.1.16"]
614 verbose parsed url { protocol: null,
614 verbose parsed url   slashes: null,
614 verbose parsed url   auth: null,
614 verbose parsed url   host: null,
614 verbose parsed url   port: null,
614 verbose parsed url   hostname: null,
614 verbose parsed url   hash: null,
614 verbose parsed url   search: null,
614 verbose parsed url   query: null,
614 verbose parsed url   pathname: '0.1.16',
614 verbose parsed url   path: '0.1.16',
614 verbose parsed url   href: '0.1.16' }
615 verbose addNamed [ 'async', '0.1.16' ]
616 verbose addNamed [ '0.1.16', '0.1.16' ]
617 silly lockFile a5ad263c-async-0-1-16 async@0.1.16
618 verbose lock async@0.1.16 /Users/bmackey/.npm/a5ad263c-async-0-1-16.lock
619 verbose cache add [ 'request@2.9.100', null ]
620 verbose cache add name=undefined spec="request@2.9.100" args=["request@2.9.100",null]
621 verbose parsed url { protocol: null,
621 verbose parsed url   slashes: null,
621 verbose parsed url   auth: null,
621 verbose parsed url   host: null,
621 verbose parsed url   port: null,
621 verbose parsed url   hostname: null,
621 verbose parsed url   hash: null,
621 verbose parsed url   search: null,
621 verbose parsed url   query: null,
621 verbose parsed url   pathname: 'request@2.9.100',
621 verbose parsed url   path: 'request@2.9.100',
621 verbose parsed url   href: 'request@2.9.100' }
622 verbose cache add name="request" spec="2.9.100" args=["request","2.9.100"]
623 verbose parsed url { protocol: null,
623 verbose parsed url   slashes: null,
623 verbose parsed url   auth: null,
623 verbose parsed url   host: null,
623 verbose parsed url   port: null,
623 verbose parsed url   hostname: null,
623 verbose parsed url   hash: null,
623 verbose parsed url   search: null,
623 verbose parsed url   query: null,
623 verbose parsed url   pathname: '2.9.100',
623 verbose parsed url   path: '2.9.100',
623 verbose parsed url   href: '2.9.100' }
624 verbose addNamed [ 'request', '2.9.100' ]
625 verbose addNamed [ '2.9.100', '2.9.100' ]
626 silly lockFile 66486f29-request-2-9-100 request@2.9.100
627 verbose lock request@2.9.100 /Users/bmackey/.npm/66486f29-request-2-9-100.lock
628 silly gunzTarPerm extractEntry lib/middleware/router.js
629 silly gunzTarPerm extractEntry lib/middleware/csrf.js
630 verbose url raw async/0.1.16
631 verbose url resolving [ 'https://registry.npmjs.org/', './async/0.1.16' ]
632 verbose url resolved https://registry.npmjs.org/async/0.1.16
633 info trying registry request attempt 1 at 14:17:56
634 verbose etag "EMEUTIIMHACQUJENNNGQCRBQT"
635 http GET https://registry.npmjs.org/async/0.1.16
636 verbose url raw request/2.9.100
637 verbose url resolving [ 'https://registry.npmjs.org/', './request/2.9.100' ]
638 verbose url resolved https://registry.npmjs.org/request/2.9.100
639 info trying registry request attempt 1 at 14:17:56
640 verbose etag "62LTKXVVVKKXRACOXLH7QME9A"
641 http GET https://registry.npmjs.org/request/2.9.100
642 silly gunzTarPerm extractEntry lib/middleware/staticCache.js
643 silly gunzTarPerm extractEntry lib/middleware/cookieParser.js
644 silly gunzTarPerm extractEntry lib/winston/config.js
645 silly gunzTarPerm extractEntry lib/winston/container.js
646 silly gunzTarPerm extractEntry lib/middleware/session.js
647 silly gunzTarPerm extractEntry lib/middleware/compiler.js
648 silly gunzTarPerm extractEntry test/lang/id.js
649 silly gunzTarPerm extractEntry test/lang/fr.js
650 silly gunzTarPerm extractEntry lib/winston/exception.js
651 silly gunzTarPerm extractEntry lib/winston/logger.js
652 silly gunzTarPerm extractEntry test/lang/it.js
653 silly gunzTarPerm extractEntry test/lang/ja.js
654 silly gunzTarPerm extractEntry lib/winston/transports.js
655 silly gunzTarPerm extractEntry lib/winston/config/cli-config.js
656 silly gunzTarPerm extractEntry lib/middleware/static.js
657 silly gunzTarPerm extractEntry lib/middleware/logger.js
658 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async/package.json
659 silly gunzTarPerm extractEntry test/lang/ko.js
660 silly gunzTarPerm extractEntry test/lang/lv.js
661 silly gunzTarPerm extractEntry lib/winston/config/npm-config.js
662 silly gunzTarPerm extractEntry lib/winston/config/syslog-config.js
663 silly gunzTarPerm extractEntry tests/run.js
664 silly gunzTarPerm extractEntry tests/test-form.js
665 silly lockFile 79321267-es-fh-nodeapp-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async
666 silly lockFile 79321267-es-fh-nodeapp-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async
667 silly gunzTarPerm extractEntry lib/middleware/vhost.js
668 silly gunzTarPerm extractEntry lib/middleware/methodOverride.js
669 silly gunzTarPerm extractEntry lib/winston/transports/console.js
670 silly gunzTarPerm extractEntry lib/winston/transports/file.js
671 silly lockFile c37f89a4-ckey-npm-async-0-2-1-package-tgz tar:///Users/bmackey/.npm/async/0.2.1/package.tgz
672 silly lockFile c37f89a4-ckey-npm-async-0-2-1-package-tgz tar:///Users/bmackey/.npm/async/0.2.1/package.tgz
673 silly gunzTarPerm extractEntry test/lang/nb.js
674 silly gunzTarPerm extractEntry test/lang/fr-ca.js
675 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/package.json
676 silly gunzTarPerm extractEntry tests/test-oauth.js
677 silly gunzTarPerm extractEntry tests/test-params.js
678 info preinstall async@0.2.1
679 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async/package.json
680 verbose readDependencies using package.json deps
681 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async/package.json
682 verbose readDependencies using package.json deps
683 silly resolved []
684 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async
685 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async
686 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async/package.json
687 verbose linkStuff [ false,
687 verbose linkStuff   false,
687 verbose linkStuff   false,
687 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules' ]
688 info linkStuff async@0.2.1
689 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
690 verbose linkBins async@0.2.1
691 verbose linkMans async@0.2.1
692 verbose rebuildBundles async@0.2.1
693 silly gunzTarPerm extractEntry lib/middleware/session/cookie.js
694 silly gunzTarPerm extractEntry lib/middleware/session/memory.js
695 info install async@0.2.1
696 info postinstall async@0.2.1
697 silly lockFile 730b588c--nodeapp-node-modules-fh-amqp-js tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
698 silly lockFile 730b588c--nodeapp-node-modules-fh-amqp-js tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
699 silly gunzTarPerm extractEntry lib/winston/transports/http.js
700 silly gunzTarPerm extractEntry lib/winston/transports/transport.js
701 silly lockFile de0c74e0-npm-fh-amqp-js-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-amqp-js/0.2.1/package.tgz
702 silly lockFile de0c74e0-npm-fh-amqp-js-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-amqp-js/0.2.1/package.tgz
703 silly gunzTarPerm extractEntry lib/middleware/session/session.js
704 silly gunzTarPerm extractEntry lib/middleware/session/store.js
705 info preinstall fh-amqp-js@0.2.1
706 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/package.json
707 silly gunzTarPerm extractEntry generate_commands.js
708 silly gunzTarPerm extractEntry lib/commands.js
709 verbose readDependencies using package.json deps
710 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/package.json
711 silly gunzTarPerm extractEntry tests/test-piped-redirect.js
712 silly gunzTarPerm extractEntry tests/test-pipes.js
713 verbose readDependencies using package.json deps
714 verbose cache add [ 'async@0.2.7', null ]
715 verbose cache add name=undefined spec="async@0.2.7" args=["async@0.2.7",null]
716 verbose parsed url { protocol: null,
716 verbose parsed url   slashes: null,
716 verbose parsed url   auth: null,
716 verbose parsed url   host: null,
716 verbose parsed url   port: null,
716 verbose parsed url   hostname: null,
716 verbose parsed url   hash: null,
716 verbose parsed url   search: null,
716 verbose parsed url   query: null,
716 verbose parsed url   pathname: 'async@0.2.7',
716 verbose parsed url   path: 'async@0.2.7',
716 verbose parsed url   href: 'async@0.2.7' }
717 verbose cache add name="async" spec="0.2.7" args=["async","0.2.7"]
718 verbose parsed url { protocol: null,
718 verbose parsed url   slashes: null,
718 verbose parsed url   auth: null,
718 verbose parsed url   host: null,
718 verbose parsed url   port: null,
718 verbose parsed url   hostname: null,
718 verbose parsed url   hash: null,
718 verbose parsed url   search: null,
718 verbose parsed url   query: null,
718 verbose parsed url   pathname: '0.2.7',
718 verbose parsed url   path: '0.2.7',
718 verbose parsed url   href: '0.2.7' }
719 verbose addNamed [ 'async', '0.2.7' ]
720 verbose addNamed [ '0.2.7', '0.2.7' ]
721 silly lockFile 046e7838-async-0-2-7 async@0.2.7
722 verbose lock async@0.2.7 /Users/bmackey/.npm/046e7838-async-0-2-7.lock
723 verbose cache add [ 'amqp@0.1.6', null ]
724 verbose cache add name=undefined spec="amqp@0.1.6" args=["amqp@0.1.6",null]
725 verbose parsed url { protocol: null,
725 verbose parsed url   slashes: null,
725 verbose parsed url   auth: null,
725 verbose parsed url   host: null,
725 verbose parsed url   port: null,
725 verbose parsed url   hostname: null,
725 verbose parsed url   hash: null,
725 verbose parsed url   search: null,
725 verbose parsed url   query: null,
725 verbose parsed url   pathname: 'amqp@0.1.6',
725 verbose parsed url   path: 'amqp@0.1.6',
725 verbose parsed url   href: 'amqp@0.1.6' }
726 verbose cache add name="amqp" spec="0.1.6" args=["amqp","0.1.6"]
727 verbose parsed url { protocol: null,
727 verbose parsed url   slashes: null,
727 verbose parsed url   auth: null,
727 verbose parsed url   host: null,
727 verbose parsed url   port: null,
727 verbose parsed url   hostname: null,
727 verbose parsed url   hash: null,
727 verbose parsed url   search: null,
727 verbose parsed url   query: null,
727 verbose parsed url   pathname: '0.1.6',
727 verbose parsed url   path: '0.1.6',
727 verbose parsed url   href: '0.1.6' }
728 verbose addNamed [ 'amqp', '0.1.6' ]
729 verbose addNamed [ '0.1.6', '0.1.6' ]
730 silly lockFile aa0e0118-amqp-0-1-6 amqp@0.1.6
731 verbose lock amqp@0.1.6 /Users/bmackey/.npm/aa0e0118-amqp-0-1-6.lock
732 verbose cache add [ 'rc@0.1.1', null ]
733 verbose cache add name=undefined spec="rc@0.1.1" args=["rc@0.1.1",null]
734 verbose parsed url { protocol: null,
734 verbose parsed url   slashes: null,
734 verbose parsed url   auth: null,
734 verbose parsed url   host: null,
734 verbose parsed url   port: null,
734 verbose parsed url   hostname: null,
734 verbose parsed url   hash: null,
734 verbose parsed url   search: null,
734 verbose parsed url   query: null,
734 verbose parsed url   pathname: 'rc@0.1.1',
734 verbose parsed url   path: 'rc@0.1.1',
734 verbose parsed url   href: 'rc@0.1.1' }
735 verbose cache add name="rc" spec="0.1.1" args=["rc","0.1.1"]
736 verbose parsed url { protocol: null,
736 verbose parsed url   slashes: null,
736 verbose parsed url   auth: null,
736 verbose parsed url   host: null,
736 verbose parsed url   port: null,
736 verbose parsed url   hostname: null,
736 verbose parsed url   hash: null,
736 verbose parsed url   search: null,
736 verbose parsed url   query: null,
736 verbose parsed url   pathname: '0.1.1',
736 verbose parsed url   path: '0.1.1',
736 verbose parsed url   href: '0.1.1' }
737 verbose addNamed [ 'rc', '0.1.1' ]
738 verbose addNamed [ '0.1.1', '0.1.1' ]
739 silly lockFile 51b3509a-rc-0-1-1 rc@0.1.1
740 verbose lock rc@0.1.1 /Users/bmackey/.npm/51b3509a-rc-0-1-1.lock
741 verbose url raw async/0.2.7
742 verbose url resolving [ 'https://registry.npmjs.org/', './async/0.2.7' ]
743 verbose url resolved https://registry.npmjs.org/async/0.2.7
744 info trying registry request attempt 1 at 14:17:56
745 verbose etag "EMEUTIIMHACQUJENNNGQCRBQT"
746 http GET https://registry.npmjs.org/async/0.2.7
747 silly gunzTarPerm extractEntry tests/test-pool.js
748 silly gunzTarPerm extractEntry tests/test-follow-all.js
749 verbose url raw amqp/0.1.6
750 verbose url resolving [ 'https://registry.npmjs.org/', './amqp/0.1.6' ]
751 verbose url resolved https://registry.npmjs.org/amqp/0.1.6
752 info trying registry request attempt 1 at 14:17:56
753 verbose etag "76W6DVEDOUMD6NKQ190ULVZWB"
754 http GET https://registry.npmjs.org/amqp/0.1.6
755 verbose url raw rc/0.1.1
756 verbose url resolving [ 'https://registry.npmjs.org/', './rc/0.1.1' ]
757 verbose url resolved https://registry.npmjs.org/rc/0.1.1
758 info trying registry request attempt 1 at 14:17:56
759 verbose etag "9C9VWY5YESXEMPFYOAJ42W5T9"
760 http GET https://registry.npmjs.org/rc/0.1.1
761 silly gunzTarPerm extractEntry lib/queue.js
762 silly gunzTarPerm extractEntry lib/to_array.js
763 silly gunzTarPerm extractEntry lib/winston/transports/webhook.js
764 silly gunzTarPerm extractEntry test/cli-test.js
765 silly gunzTarPerm extractEntry lib/public/directory.html
766 silly gunzTarPerm extractEntry lib/public/error.html
767 silly gunzTarPerm extractEntry test/lang/ne.js
768 silly gunzTarPerm extractEntry test/lang/fi.js
769 silly gunzTarPerm extractEntry test/custom-timestamp-test.js
770 silly gunzTarPerm extractEntry test/exception-test.js
771 silly gunzTarPerm extractEntry tests/test-protocol-changing-redirect.js
772 silly gunzTarPerm extractEntry tests/test-follow-all-303.js
773 silly gunzTarPerm extractEntry lib/public/favicon.ico
774 silly gunzTarPerm extractEntry lib/public/icons/page_white_edit.png
775 silly gunzTarPerm extractEntry tests/test-proxy.js
776 silly gunzTarPerm extractEntry tests/test-errors.js
777 silly gunzTarPerm extractEntry test/logger-test.js
778 silly gunzTarPerm extractEntry test/container-test.js
779 silly gunzTarPerm extractEntry lib/util.js
780 silly gunzTarPerm extractEntry lib/parser/hiredis.js
781 silly gunzTarPerm extractEntry lib/public/icons/page.png
782 silly gunzTarPerm extractEntry lib/public/icons/page_attach.png
783 silly gunzTarPerm extractEntry test/log-exception-test.js
784 silly gunzTarPerm extractEntry test/log-rewriter-test.js
785 silly gunzTarPerm extractEntry tests/test-qs.js
786 silly gunzTarPerm extractEntry tests/test-defaults.js
787 silly gunzTarPerm extractEntry lib/public/icons/page_code.png
788 silly gunzTarPerm extractEntry lib/public/icons/page_copy.png
789 silly gunzTarPerm extractEntry tests/test-redirect.js
790 silly gunzTarPerm extractEntry tests/test-cookiejar.js
791 silly gunzTarPerm extractEntry lib/public/icons/page_delete.png
792 silly gunzTarPerm extractEntry lib/public/icons/page_edit.png
793 silly gunzTarPerm extractEntry test/lang/nl.js
794 silly gunzTarPerm extractEntry test/lang/eu.js
795 silly gunzTarPerm extractEntry tests/test-s3.js
796 silly gunzTarPerm extractEntry tests/test-cookie.js
797 silly gunzTarPerm extractEntry tests/test-timeout.js
798 silly gunzTarPerm extractEntry tests/test-body.js
799 silly gunzTarPerm extractEntry lib/public/icons/page_error.png
800 silly gunzTarPerm extractEntry lib/public/icons/page_excel.png
801 silly gunzTarPerm extractEntry test/winston-test.js
802 silly gunzTarPerm extractEntry test/helpers.js
803 silly gunzTarPerm extractEntry tests/test-toJSON.js
804 silly gunzTarPerm extractEntry tests/server.js
805 silly gunzTarPerm extractEntry test/fixtures/.gitkeep
806 silly gunzTarPerm extractEntry test/fixtures/keys/agent2-cert.pem
807 silly gunzTarPerm extractEntry lib/public/icons/page_find.png
808 silly gunzTarPerm extractEntry lib/public/icons/page_gear.png
809 silly gunzTarPerm extractEntry test/lang/pl.js
810 silly gunzTarPerm extractEntry test/lang/et.js
811 silly gunzTarPerm extractEntry tests/test-tunnel.js
812 silly gunzTarPerm extractEntry tests/test-https.js
813 silly gunzTarPerm extractEntry test/fixtures/keys/agent2-key.pem
814 silly gunzTarPerm extractEntry test/fixtures/logs/.gitkeep
815 silly gunzTarPerm extractEntry lib/public/icons/page_go.png
816 silly gunzTarPerm extractEntry lib/public/icons/page_green.png
817 silly gunzTarPerm extractEntry test/fixtures/scripts/default-exceptions.js
818 silly gunzTarPerm extractEntry test/fixtures/scripts/exit-on-error.js
819 silly gunzTarPerm extractEntry lib/parser/javascript.js
820 silly gunzTarPerm extractEntry examples/auth.js
821 silly gunzTarPerm extractEntry test/fixtures/scripts/log-exceptions.js
822 silly gunzTarPerm extractEntry test/fixtures/scripts/unhandle-exceptions.js
823 silly gunzTarPerm extractEntry lib/public/icons/page_key.png
824 silly gunzTarPerm extractEntry lib/public/icons/page_lightning.png
825 silly gunzTarPerm extractEntry tests/squid.conf
826 silly gunzTarPerm extractEntry tests/ssl/ca/server.js
827 silly gunzTarPerm extractEntry examples/mget.js
828 silly gunzTarPerm extractEntry examples/monitor.js
829 silly gunzTarPerm extractEntry tests/ssl/ca/ca.srl
830 silly gunzTarPerm extractEntry tests/ssl/ca/ca.crt
831 silly gunzTarPerm extractEntry test/transports/console-test.js
832 silly gunzTarPerm extractEntry test/transports/file-maxfiles-test.js
833 silly gunzTarPerm extractEntry examples/multi.js
834 silly gunzTarPerm extractEntry examples/file.js
835 silly gunzTarPerm extractEntry tests/ssl/ca/ca.csr
836 silly gunzTarPerm extractEntry tests/ssl/ca/ca.key
837 silly gunzTarPerm extractEntry test/lang/pt-br.js
838 silly gunzTarPerm extractEntry test/lang/es.js
839 silly gunzTarPerm extractEntry lib/public/icons/page_link.png
840 silly gunzTarPerm extractEntry lib/public/icons/page_paintbrush.png
841 silly gunzTarPerm extractEntry tests/ssl/ca/ca.crl
842 silly gunzTarPerm extractEntry tests/ssl/ca/server.cnf
843 silly gunzTarPerm extractEntry examples/psubscribe.js
844 silly gunzTarPerm extractEntry examples/pub_sub.js
845 silly gunzTarPerm extractEntry tests/ssl/ca/server.crt
846 silly gunzTarPerm extractEntry tests/ssl/ca/server.csr
847 silly gunzTarPerm extractEntry examples/simple.js
848 silly gunzTarPerm extractEntry examples/sort.js
849 silly gunzTarPerm extractEntry lib/public/icons/page_paste.png
850 silly gunzTarPerm extractEntry lib/public/icons/page_red.png
851 silly gunzTarPerm extractEntry test/transports/file-maxsize-test.js
852 silly gunzTarPerm extractEntry test/transports/file-test.js
853 silly gunzTarPerm extractEntry tests/ssl/ca/ca.cnf
854 silly gunzTarPerm extractEntry tests/ssl/ca/server.key
855 silly gunzTarPerm extractEntry examples/subqueries.js
856 silly gunzTarPerm extractEntry examples/extend.js
857 silly gunzTarPerm extractEntry examples/subquery.js
858 silly gunzTarPerm extractEntry examples/eval.js
859 silly gunzTarPerm extractEntry tests/ssl/npm-ca.crt
860 silly gunzTarPerm extractEntry tests/ssl/test.crt
861 silly gunzTarPerm extractEntry lib/public/icons/page_refresh.png
862 silly gunzTarPerm extractEntry lib/public/icons/page_save.png
863 silly gunzTarPerm extractEntry test/lang/pt.js
864 silly gunzTarPerm extractEntry test/lang/eo.js
865 silly gunzTarPerm extractEntry test/transports/transport.js
866 silly gunzTarPerm extractEntry test/transports/webhook-test.js
867 silly gunzTarPerm extractEntry tests/ssl/test.key
868 silly gunzTarPerm extractEntry tests/googledoodle.png
869 silly gunzTarPerm extractEntry examples/unix_socket.js
870 silly gunzTarPerm extractEntry examples/backpressure_drain.js
871 silly gunzTarPerm extractEntry tests/unicycle.jpg
872 silly gunzTarPerm extractEntry lib/public/icons/page_white.png
873 silly gunzTarPerm extractEntry lib/public/icons/page_white_acrobat.png
874 silly gunzTarPerm extractEntry vendor/cookie/index.js
875 silly gunzTarPerm extractEntry examples/web_server.js
876 silly gunzTarPerm extractEntry examples/multi2.js
877 silly gunzTarPerm extractEntry lib/public/icons/page_white_actionscript.png
878 silly gunzTarPerm extractEntry lib/public/icons/page_white_add.png
879 silly gunzTarPerm extractEntry vendor/cookie/jar.js
880 silly gunzTarPerm extractEntry node_modules/form-data/package.json
881 silly gunzTarPerm extractEntry lib/public/icons/page_white_c.png
882 silly gunzTarPerm extractEntry lib/public/icons/page_white_camera.png
883 silly gunzTarPerm extractEntry changelog.md
884 silly gunzTarPerm extractEntry benches/buffer_bench.js
885 silly gunzTarPerm extractEntry test/lang/ro.js
886 silly gunzTarPerm extractEntry test/lang/en.js
887 silly gunzTarPerm extractEntry benches/hiredis_parser.js
888 silly gunzTarPerm extractEntry benches/re_sub_test.js
889 silly gunzTarPerm extractEntry node_modules/form-data/.npmignore
890 silly gunzTarPerm extractEntry node_modules/form-data/Makefile
891 silly gunzTarPerm extractEntry lib/public/icons/page_white_cd.png
892 silly gunzTarPerm extractEntry lib/public/icons/page_white_code.png
893 silly gunzTarPerm extractEntry benches/reconnect_test.js
894 silly gunzTarPerm extractEntry benches/sub_quit_test.js
895 silly gunzTarPerm extractEntry node_modules/form-data/Readme.md
896 silly gunzTarPerm extractEntry node_modules/form-data/lib/form_data.js
897 silly gunzTarPerm extractEntry lib/public/icons/page_white_code_red.png
898 silly gunzTarPerm extractEntry lib/public/icons/page_white_coldfusion.png
899 silly gunzTarPerm extractEntry benches/stress/codec.js
900 silly gunzTarPerm extractEntry benches/stress/pubsub/pub.js
901 silly gunzTarPerm extractEntry node_modules/form-data/node-form-data.sublime-project
902 silly gunzTarPerm extractEntry node_modules/form-data/node-form-data.sublime-workspace
903 silly gunzTarPerm extractEntry benches/stress/pubsub/server.js
904 silly gunzTarPerm extractEntry benches/stress/pubsub/run
905 silly gunzTarPerm extractEntry lib/public/icons/page_white_compressed.png
906 silly gunzTarPerm extractEntry lib/public/icons/page_white_copy.png
907 silly gunzTarPerm extractEntry node_modules/form-data/test/common.js
908 silly gunzTarPerm extractEntry node_modules/form-data/test/run.js
909 silly gunzTarPerm extractEntry test/lang/ru.js
910 silly gunzTarPerm extractEntry test/lang/en-gb.js
911 silly gunzTarPerm extractEntry benches/stress/rpushblpop/pub.js
912 silly gunzTarPerm extractEntry benches/stress/rpushblpop/server.js
913 silly gunzTarPerm extractEntry lib/public/icons/page_white_cplusplus.png
914 silly gunzTarPerm extractEntry lib/public/icons/page_white_csharp.png
915 silly gunzTarPerm extractEntry node_modules/form-data/test/fixture/bacon.txt
916 silly gunzTarPerm extractEntry node_modules/form-data/test/fixture/unicycle.jpg
917 silly gunzTarPerm extractEntry benches/stress/rpushblpop/run
918 silly gunzTarPerm extractEntry benches/stress/speed/speed.js
919 silly gunzTarPerm extractEntry node_modules/form-data/test/integration/test-form-get-length.js
920 silly gunzTarPerm extractEntry node_modules/form-data/test/integration/test-get-boundary.js
921 silly gunzTarPerm extractEntry lib/public/icons/page_white_cup.png
922 silly gunzTarPerm extractEntry lib/public/icons/page_white_database.png
923 silly gunzTarPerm extractEntry benches/stress/speed/00
924 silly gunzTarPerm extractEntry benches/stress/speed/plot
925 silly gunzTarPerm extractEntry lib/public/icons/page_white_delete.png
926 silly gunzTarPerm extractEntry lib/public/icons/page_white_dvd.png
927 silly gunzTarPerm extractEntry node_modules/form-data/test/integration/test-http-response.js
928 silly gunzTarPerm extractEntry node_modules/form-data/test/integration/test-pipe.js
929 silly gunzTarPerm extractEntry benches/stress/speed/size-rate.png
930 silly gunzTarPerm extractEntry lib/public/icons/page_add.png
931 silly gunzTarPerm extractEntry lib/public/icons/page_white_error.png
932 silly gunzTarPerm extractEntry test/lang/sl.js
933 silly gunzTarPerm extractEntry test/lang/en-ca.js
934 silly gunzTarPerm extractEntry node_modules/form-data/test/integration/test-submit.js
935 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/package.json
936 silly gunzTarPerm extractEntry lib/public/icons/page_white_excel.png
937 silly gunzTarPerm extractEntry lib/public/icons/page_white_find.png
938 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/README.md
939 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/LICENSE
940 silly gunzTarPerm extractEntry lib/public/icons/page_white_flash.png
941 silly gunzTarPerm extractEntry lib/public/icons/page_white_freehand.png
942 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/index.js
943 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/dist/async.min.js
944 silly gunzTarPerm extractEntry lib/public/icons/page_white_gear.png
945 silly gunzTarPerm extractEntry lib/public/icons/page_white_get.png
946 silly gunzTarPerm extractEntry lib/public/icons/page_white_go.png
947 silly gunzTarPerm extractEntry lib/public/icons/page_white_h.png
948 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/deps/nodeunit.js
949 silly gunzTarPerm extractEntry test/lang/sv.js
950 silly gunzTarPerm extractEntry test/lang/de.js
951 silly gunzTarPerm extractEntry lib/public/icons/page_white_horizontal.png
952 silly gunzTarPerm extractEntry lib/public/icons/page_white_key.png
953 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/deps/nodeunit.css
954 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/Makefile
955 silly gunzTarPerm extractEntry lib/public/icons/page_white_lightning.png
956 silly gunzTarPerm extractEntry lib/public/icons/page_white_link.png
957 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/.gitmodules
958 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/lib/async.js
959 silly gunzTarPerm extractEntry lib/public/icons/page_white_magnify.png
960 silly gunzTarPerm extractEntry lib/public/icons/page_white_medal.png
961 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/nodelint.cfg
962 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/async.min.js.gzip
963 silly gunzTarPerm extractEntry lib/public/icons/page_white_office.png
964 silly gunzTarPerm extractEntry lib/public/icons/page_white_paint.png
965 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/test/test-async.js
966 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/test/.swp
967 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/test/test.html
968 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/package.json
969 silly gunzTarPerm extractEntry lib/public/icons/page_white_paintbrush.png
970 silly gunzTarPerm extractEntry lib/public/icons/page_white_paste.png
971 silly gunzTarPerm extractEntry test/lang/th.js
972 silly gunzTarPerm extractEntry test/lang/da.js
973 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/.npmignore
974 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/License
975 silly gunzTarPerm extractEntry lib/public/icons/page_white_php.png
976 silly gunzTarPerm extractEntry lib/public/icons/page_white_picture.png
977 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/Makefile
978 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/Readme.md
979 silly gunzTarPerm extractEntry lib/public/icons/page_white_powerpoint.png
980 silly gunzTarPerm extractEntry lib/public/icons/page_white_put.png
981 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/lib/combined_stream.js
982 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/common.js
983 silly gunzTarPerm extractEntry lib/public/icons/page_white_ruby.png
984 silly gunzTarPerm extractEntry lib/public/icons/page_white_stack.png
985 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/run.js
986 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/fixture/file1.txt
987 silly gunzTarPerm extractEntry lib/public/icons/page_white_star.png
988 silly gunzTarPerm extractEntry lib/public/icons/page_white_swoosh.png
989 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/fixture/file2.txt
990 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-callback-streams.js
991 silly gunzTarPerm extractEntry test/lang/tr.js
992 silly gunzTarPerm extractEntry test/lang/cv.js
993 silly gunzTarPerm extractEntry lib/public/icons/page_white_text.png
994 silly gunzTarPerm extractEntry lib/public/icons/page_white_text_width.png
995 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-data-size.js
996 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams-and-buffers-and-strings.js
997 silly gunzTarPerm extractEntry lib/public/icons/page_white_tux.png
998 silly gunzTarPerm extractEntry lib/public/icons/page_white_vector.png
999 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams.js
1000 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-max-data-size.js
1001 silly gunzTarPerm extractEntry lib/public/icons/page_white_visualstudio.png
1002 silly gunzTarPerm extractEntry lib/public/icons/page_white_width.png
1003 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-unpaused-streams.js
1004 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/package.json
1005 silly gunzTarPerm extractEntry lib/public/icons/page_white_word.png
1006 silly gunzTarPerm extractEntry lib/public/icons/page_white_world.png
1007 silly gunzTarPerm extractEntry lib/public/icons/page_white_wrench.png
1008 silly gunzTarPerm extractEntry test/lang/tzm-la.js
1009 silly gunzTarPerm extractEntry test/lang/cs.js
1010 silly gunzTarPerm extractEntry lib/public/icons/page_white_zip.png
1011 silly gunzTarPerm extractEntry lib/public/icons/page_word.png
1012 silly gunzTarPerm extractEntry lib/public/icons/page_world.png
1013 silly gunzTarPerm extractEntry lib/public/style.css
1014 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/package.json
1015 silly lockFile 9e7c30cc--fh-nodeapp-node-modules-winston tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1016 silly lockFile 9e7c30cc--fh-nodeapp-node-modules-winston tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1017 silly lockFile bf707e49-ey-npm-winston-0-6-2-package-tgz tar:///Users/bmackey/.npm/winston/0.6.2/package.tgz
1018 silly lockFile bf707e49-ey-npm-winston-0-6-2-package-tgz tar:///Users/bmackey/.npm/winston/0.6.2/package.tgz
1019 info preinstall winston@0.6.2
1020 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/package.json
1021 verbose readDependencies using package.json deps
1022 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/package.json
1023 verbose readDependencies using package.json deps
1024 verbose cache add [ 'async@0.1.x', null ]
1025 verbose cache add name=undefined spec="async@0.1.x" args=["async@0.1.x",null]
1026 verbose parsed url { protocol: null,
1026 verbose parsed url   slashes: null,
1026 verbose parsed url   auth: null,
1026 verbose parsed url   host: null,
1026 verbose parsed url   port: null,
1026 verbose parsed url   hostname: null,
1026 verbose parsed url   hash: null,
1026 verbose parsed url   search: null,
1026 verbose parsed url   query: null,
1026 verbose parsed url   pathname: 'async@0.1.x',
1026 verbose parsed url   path: 'async@0.1.x',
1026 verbose parsed url   href: 'async@0.1.x' }
1027 verbose cache add name="async" spec="0.1.x" args=["async","0.1.x"]
1028 verbose parsed url { protocol: null,
1028 verbose parsed url   slashes: null,
1028 verbose parsed url   auth: null,
1028 verbose parsed url   host: null,
1028 verbose parsed url   port: null,
1028 verbose parsed url   hostname: null,
1028 verbose parsed url   hash: null,
1028 verbose parsed url   search: null,
1028 verbose parsed url   query: null,
1028 verbose parsed url   pathname: '0.1.x',
1028 verbose parsed url   path: '0.1.x',
1028 verbose parsed url   href: '0.1.x' }
1029 verbose addNamed [ 'async', '0.1.x' ]
1030 verbose addNamed [ null, '>=0.1.0- <0.2.0-' ]
1031 silly lockFile 463e1c03-async-0-1-x async@0.1.x
1032 verbose lock async@0.1.x /Users/bmackey/.npm/463e1c03-async-0-1-x.lock
1033 verbose cache add [ 'colors@0.x.x', null ]
1034 verbose cache add name=undefined spec="colors@0.x.x" args=["colors@0.x.x",null]
1035 verbose parsed url { protocol: null,
1035 verbose parsed url   slashes: null,
1035 verbose parsed url   auth: null,
1035 verbose parsed url   host: null,
1035 verbose parsed url   port: null,
1035 verbose parsed url   hostname: null,
1035 verbose parsed url   hash: null,
1035 verbose parsed url   search: null,
1035 verbose parsed url   query: null,
1035 verbose parsed url   pathname: 'colors@0.x.x',
1035 verbose parsed url   path: 'colors@0.x.x',
1035 verbose parsed url   href: 'colors@0.x.x' }
1036 verbose cache add name="colors" spec="0.x.x" args=["colors","0.x.x"]
1037 verbose parsed url { protocol: null,
1037 verbose parsed url   slashes: null,
1037 verbose parsed url   auth: null,
1037 verbose parsed url   host: null,
1037 verbose parsed url   port: null,
1037 verbose parsed url   hostname: null,
1037 verbose parsed url   hash: null,
1037 verbose parsed url   search: null,
1037 verbose parsed url   query: null,
1037 verbose parsed url   pathname: '0.x.x',
1037 verbose parsed url   path: '0.x.x',
1037 verbose parsed url   href: '0.x.x' }
1038 verbose addNamed [ 'colors', '0.x.x' ]
1039 verbose addNamed [ null, '>=0.0.0- <1.0.0-' ]
1040 silly lockFile 0b3af398-colors-0-x-x colors@0.x.x
1041 verbose lock colors@0.x.x /Users/bmackey/.npm/0b3af398-colors-0-x-x.lock
1042 silly addNameRange { name: 'async', range: '>=0.1.0- <0.2.0-', hasData: false }
1043 verbose cache add [ 'cycle@1.0.x', null ]
1044 verbose cache add name=undefined spec="cycle@1.0.x" args=["cycle@1.0.x",null]
1045 verbose parsed url { protocol: null,
1045 verbose parsed url   slashes: null,
1045 verbose parsed url   auth: null,
1045 verbose parsed url   host: null,
1045 verbose parsed url   port: null,
1045 verbose parsed url   hostname: null,
1045 verbose parsed url   hash: null,
1045 verbose parsed url   search: null,
1045 verbose parsed url   query: null,
1045 verbose parsed url   pathname: 'cycle@1.0.x',
1045 verbose parsed url   path: 'cycle@1.0.x',
1045 verbose parsed url   href: 'cycle@1.0.x' }
1046 verbose cache add name="cycle" spec="1.0.x" args=["cycle","1.0.x"]
1047 verbose parsed url { protocol: null,
1047 verbose parsed url   slashes: null,
1047 verbose parsed url   auth: null,
1047 verbose parsed url   host: null,
1047 verbose parsed url   port: null,
1047 verbose parsed url   hostname: null,
1047 verbose parsed url   hash: null,
1047 verbose parsed url   search: null,
1047 verbose parsed url   query: null,
1047 verbose parsed url   pathname: '1.0.x',
1047 verbose parsed url   path: '1.0.x',
1047 verbose parsed url   href: '1.0.x' }
1048 verbose addNamed [ 'cycle', '1.0.x' ]
1049 verbose addNamed [ null, '>=1.0.0- <1.1.0-' ]
1050 silly lockFile dfb63733-cycle-1-0-x cycle@1.0.x
1051 verbose lock cycle@1.0.x /Users/bmackey/.npm/dfb63733-cycle-1-0-x.lock
1052 verbose cache add [ 'eyes@0.1.x', null ]
1053 verbose cache add name=undefined spec="eyes@0.1.x" args=["eyes@0.1.x",null]
1054 verbose parsed url { protocol: null,
1054 verbose parsed url   slashes: null,
1054 verbose parsed url   auth: null,
1054 verbose parsed url   host: null,
1054 verbose parsed url   port: null,
1054 verbose parsed url   hostname: null,
1054 verbose parsed url   hash: null,
1054 verbose parsed url   search: null,
1054 verbose parsed url   query: null,
1054 verbose parsed url   pathname: 'eyes@0.1.x',
1054 verbose parsed url   path: 'eyes@0.1.x',
1054 verbose parsed url   href: 'eyes@0.1.x' }
1055 verbose cache add name="eyes" spec="0.1.x" args=["eyes","0.1.x"]
1056 verbose parsed url { protocol: null,
1056 verbose parsed url   slashes: null,
1056 verbose parsed url   auth: null,
1056 verbose parsed url   host: null,
1056 verbose parsed url   port: null,
1056 verbose parsed url   hostname: null,
1056 verbose parsed url   hash: null,
1056 verbose parsed url   search: null,
1056 verbose parsed url   query: null,
1056 verbose parsed url   pathname: '0.1.x',
1056 verbose parsed url   path: '0.1.x',
1056 verbose parsed url   href: '0.1.x' }
1057 verbose addNamed [ 'eyes', '0.1.x' ]
1058 verbose addNamed [ null, '>=0.1.0- <0.2.0-' ]
1059 silly lockFile 81039dce-eyes-0-1-x eyes@0.1.x
1060 verbose lock eyes@0.1.x /Users/bmackey/.npm/81039dce-eyes-0-1-x.lock
1061 verbose cache add [ 'pkginfo@0.2.x', null ]
1062 verbose cache add name=undefined spec="pkginfo@0.2.x" args=["pkginfo@0.2.x",null]
1063 verbose parsed url { protocol: null,
1063 verbose parsed url   slashes: null,
1063 verbose parsed url   auth: null,
1063 verbose parsed url   host: null,
1063 verbose parsed url   port: null,
1063 verbose parsed url   hostname: null,
1063 verbose parsed url   hash: null,
1063 verbose parsed url   search: null,
1063 verbose parsed url   query: null,
1063 verbose parsed url   pathname: 'pkginfo@0.2.x',
1063 verbose parsed url   path: 'pkginfo@0.2.x',
1063 verbose parsed url   href: 'pkginfo@0.2.x' }
1064 verbose cache add name="pkginfo" spec="0.2.x" args=["pkginfo","0.2.x"]
1065 verbose parsed url { protocol: null,
1065 verbose parsed url   slashes: null,
1065 verbose parsed url   auth: null,
1065 verbose parsed url   host: null,
1065 verbose parsed url   port: null,
1065 verbose parsed url   hostname: null,
1065 verbose parsed url   hash: null,
1065 verbose parsed url   search: null,
1065 verbose parsed url   query: null,
1065 verbose parsed url   pathname: '0.2.x',
1065 verbose parsed url   path: '0.2.x',
1065 verbose parsed url   href: '0.2.x' }
1066 verbose addNamed [ 'pkginfo', '0.2.x' ]
1067 verbose addNamed [ null, '>=0.2.0- <0.3.0-' ]
1068 silly lockFile f898f07d-pkginfo-0-2-x pkginfo@0.2.x
1069 verbose lock pkginfo@0.2.x /Users/bmackey/.npm/f898f07d-pkginfo-0-2-x.lock
1070 silly addNameRange { name: 'colors', range: '>=0.0.0- <1.0.0-', hasData: false }
1071 silly addNameRange { name: 'cycle', range: '>=1.0.0- <1.1.0-', hasData: false }
1072 silly addNameRange { name: 'eyes', range: '>=0.1.0- <0.2.0-', hasData: false }
1073 verbose cache add [ 'request@2.9.x', null ]
1074 verbose cache add name=undefined spec="request@2.9.x" args=["request@2.9.x",null]
1075 verbose parsed url { protocol: null,
1075 verbose parsed url   slashes: null,
1075 verbose parsed url   auth: null,
1075 verbose parsed url   host: null,
1075 verbose parsed url   port: null,
1075 verbose parsed url   hostname: null,
1075 verbose parsed url   hash: null,
1075 verbose parsed url   search: null,
1075 verbose parsed url   query: null,
1075 verbose parsed url   pathname: 'request@2.9.x',
1075 verbose parsed url   path: 'request@2.9.x',
1075 verbose parsed url   href: 'request@2.9.x' }
1076 verbose cache add name="request" spec="2.9.x" args=["request","2.9.x"]
1077 verbose parsed url { protocol: null,
1077 verbose parsed url   slashes: null,
1077 verbose parsed url   auth: null,
1077 verbose parsed url   host: null,
1077 verbose parsed url   port: null,
1077 verbose parsed url   hostname: null,
1077 verbose parsed url   hash: null,
1077 verbose parsed url   search: null,
1077 verbose parsed url   query: null,
1077 verbose parsed url   pathname: '2.9.x',
1077 verbose parsed url   path: '2.9.x',
1077 verbose parsed url   href: '2.9.x' }
1078 verbose addNamed [ 'request', '2.9.x' ]
1079 verbose addNamed [ null, '>=2.9.0- <2.10.0-' ]
1080 silly lockFile 0258777d-request-2-9-x request@2.9.x
1081 verbose lock request@2.9.x /Users/bmackey/.npm/0258777d-request-2-9-x.lock
1082 verbose cache add [ 'stack-trace@0.0.x', null ]
1083 verbose cache add name=undefined spec="stack-trace@0.0.x" args=["stack-trace@0.0.x",null]
1084 verbose parsed url { protocol: null,
1084 verbose parsed url   slashes: null,
1084 verbose parsed url   auth: null,
1084 verbose parsed url   host: null,
1084 verbose parsed url   port: null,
1084 verbose parsed url   hostname: null,
1084 verbose parsed url   hash: null,
1084 verbose parsed url   search: null,
1084 verbose parsed url   query: null,
1084 verbose parsed url   pathname: 'stack-trace@0.0.x',
1084 verbose parsed url   path: 'stack-trace@0.0.x',
1084 verbose parsed url   href: 'stack-trace@0.0.x' }
1085 verbose cache add name="stack-trace" spec="0.0.x" args=["stack-trace","0.0.x"]
1086 verbose parsed url { protocol: null,
1086 verbose parsed url   slashes: null,
1086 verbose parsed url   auth: null,
1086 verbose parsed url   host: null,
1086 verbose parsed url   port: null,
1086 verbose parsed url   hostname: null,
1086 verbose parsed url   hash: null,
1086 verbose parsed url   search: null,
1086 verbose parsed url   query: null,
1086 verbose parsed url   pathname: '0.0.x',
1086 verbose parsed url   path: '0.0.x',
1086 verbose parsed url   href: '0.0.x' }
1087 verbose addNamed [ 'stack-trace', '0.0.x' ]
1088 verbose addNamed [ null, '>=0.0.0- <0.1.0-' ]
1089 silly lockFile 00b1025d-stack-trace-0-0-x stack-trace@0.0.x
1090 verbose lock stack-trace@0.0.x /Users/bmackey/.npm/00b1025d-stack-trace-0-0-x.lock
1091 silly addNameRange { name: 'pkginfo', range: '>=0.2.0- <0.3.0-', hasData: false }
1092 silly addNameRange { name: 'request', range: '>=2.9.0- <2.10.0-', hasData: false }
1093 silly addNameRange { name: 'stack-trace',
1093 silly addNameRange   range: '>=0.0.0- <0.1.0-',
1093 silly addNameRange   hasData: false }
1094 verbose url raw async
1095 verbose url resolving [ 'https://registry.npmjs.org/', './async' ]
1096 verbose url resolved https://registry.npmjs.org/async
1097 info trying registry request attempt 1 at 14:17:57
1098 verbose etag "EMEUTIIMHACQUJENNNGQCRBQT"
1099 http GET https://registry.npmjs.org/async
1100 verbose url raw colors
1101 verbose url resolving [ 'https://registry.npmjs.org/', './colors' ]
1102 verbose url resolved https://registry.npmjs.org/colors
1103 info trying registry request attempt 1 at 14:17:57
1104 verbose etag "1IZCORCS4MY0BD3ODMOOC32KZ"
1105 http GET https://registry.npmjs.org/colors
1106 verbose url raw cycle
1107 verbose url resolving [ 'https://registry.npmjs.org/', './cycle' ]
1108 verbose url resolved https://registry.npmjs.org/cycle
1109 info trying registry request attempt 1 at 14:17:57
1110 verbose etag "2OMPFXOOMO3OWILJYYFHNDR74"
1111 http GET https://registry.npmjs.org/cycle
1112 verbose url raw eyes
1113 verbose url resolving [ 'https://registry.npmjs.org/', './eyes' ]
1114 verbose url resolved https://registry.npmjs.org/eyes
1115 info trying registry request attempt 1 at 14:17:57
1116 verbose etag "AQUUYRDPTBNAGAW2MX64V8ZCA"
1117 http GET https://registry.npmjs.org/eyes
1118 verbose url raw pkginfo
1119 verbose url resolving [ 'https://registry.npmjs.org/', './pkginfo' ]
1120 verbose url resolved https://registry.npmjs.org/pkginfo
1121 info trying registry request attempt 1 at 14:17:57
1122 verbose etag "2DF0Z53I1AMXBKU18Q7NSWUR0"
1123 http GET https://registry.npmjs.org/pkginfo
1124 verbose url raw request
1125 verbose url resolving [ 'https://registry.npmjs.org/', './request' ]
1126 verbose url resolved https://registry.npmjs.org/request
1127 info trying registry request attempt 1 at 14:17:57
1128 verbose etag "89MD75XPJGDD17MUWKOABKTUQ"
1129 http GET https://registry.npmjs.org/request
1130 verbose url raw stack-trace
1131 verbose url resolving [ 'https://registry.npmjs.org/', './stack-trace' ]
1132 verbose url resolved https://registry.npmjs.org/stack-trace
1133 info trying registry request attempt 1 at 14:17:57
1134 verbose etag "12C68OCWDIHI5CY6ZKGJ507UC"
1135 http GET https://registry.npmjs.org/stack-trace
1136 silly gunzTarPerm extractEntry test/lang/tzm.js
1137 silly gunzTarPerm extractEntry test/lang/ca.js
1138 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/.npmignore
1139 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/License
1140 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis/package.json
1141 silly lockFile 3cfc7fba-es-fh-nodeapp-node-modules-redis tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis
1142 silly lockFile 3cfc7fba-es-fh-nodeapp-node-modules-redis tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis
1143 silly lockFile 48bff734-ckey-npm-redis-0-8-2-package-tgz tar:///Users/bmackey/.npm/redis/0.8.2/package.tgz
1144 silly lockFile 48bff734-ckey-npm-redis-0-8-2-package-tgz tar:///Users/bmackey/.npm/redis/0.8.2/package.tgz
1145 info preinstall redis@0.8.2
1146 silly gunzTarPerm extractEntry test/lang/uk.js
1147 silly gunzTarPerm extractEntry test/lang/bg.js
1148 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis/package.json
1149 verbose readDependencies using package.json deps
1150 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis/package.json
1151 verbose readDependencies using package.json deps
1152 silly resolved []
1153 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis
1154 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis
1155 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis/package.json
1156 verbose linkStuff [ false,
1156 verbose linkStuff   false,
1156 verbose linkStuff   false,
1156 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules' ]
1157 info linkStuff redis@0.8.2
1158 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1159 verbose linkBins redis@0.8.2
1160 verbose linkMans redis@0.8.2
1161 verbose rebuildBundles redis@0.8.2
1162 info install redis@0.8.2
1163 info postinstall redis@0.8.2
1164 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/Makefile
1165 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/Readme.md
1166 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/lib/delayed_stream.js
1167 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/common.js
1168 silly gunzTarPerm extractEntry test/lang/zh-cn.js
1169 silly gunzTarPerm extractEntry test/lang/ar.js
1170 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/run.js
1171 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-http-upload.js
1172 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-stream-auto-pause.js
1173 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-stream-pause.js
1174 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-stream.js
1175 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-handle-source-errors.js
1176 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-max-data-size.js
1177 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-pipe-resumes.js
1178 silly gunzTarPerm extractEntry test/lang/zh-tw.js
1179 silly gunzTarPerm extractEntry test/lang/is.js
1180 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-proxy-readable.js
1181 silly gunzTarPerm extractEntry node_modules/mime/package.json
1182 silly gunzTarPerm extractEntry node_modules/mime/README.md
1183 silly gunzTarPerm extractEntry node_modules/mime/LICENSE
1184 silly gunzTarPerm extractEntry node_modules/mime/mime.js
1185 silly gunzTarPerm extractEntry node_modules/mime/test.js
1186 silly gunzTarPerm extractEntry test/moment/add_subtract.js
1187 silly gunzTarPerm extractEntry test/moment/getters_setters.js
1188 silly gunzTarPerm extractEntry node_modules/mime/types/mime.types
1189 silly gunzTarPerm extractEntry node_modules/mime/types/node.types
1190 silly gunzTarPerm extractEntry test/moment/is_after.js
1191 silly gunzTarPerm extractEntry test/moment/is_before.js
1192 http 304 https://registry.npmjs.org/ursa
1193 silly registry.get cb [ 304,
1193 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1193 silly registry.get     server: 'Apache',
1193 silly registry.get     via: '1.1 varnish',
1193 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1193 silly registry.get     'cache-control': 'max-age=1',
1193 silly registry.get     etag: '"8SPUXMWUFSZPAVPZ7TQUZ7ZP6"',
1193 silly registry.get     'x-served-by': 'cache-lcy1135-LCY',
1193 silly registry.get     'x-cache': 'MISS',
1193 silly registry.get     'x-cache-hits': '0',
1193 silly registry.get     'x-timer': 'S1394633875.482394218,VS0,VE145',
1193 silly registry.get     vary: 'Accept',
1193 silly registry.get     'content-length': '0',
1193 silly registry.get     'keep-alive': 'timeout=10, max=50',
1193 silly registry.get     connection: 'Keep-Alive' } ]
1194 verbose etag ursa from cache
1195 http 304 https://registry.npmjs.org/async/0.2.9
1196 silly registry.get cb [ 304,
1196 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1196 silly registry.get     server: 'Apache',
1196 silly registry.get     via: '1.1 varnish',
1196 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1196 silly registry.get     'cache-control': 'max-age=1',
1196 silly registry.get     etag: '"EMEUTIIMHACQUJENNNGQCRBQT"',
1196 silly registry.get     'x-served-by': 'cache-lcy1121-LCY',
1196 silly registry.get     'x-cache': 'HIT',
1196 silly registry.get     'x-cache-hits': '1',
1196 silly registry.get     'x-timer': 'S1394633875.555511475,VS0,VE78',
1196 silly registry.get     vary: 'Accept',
1196 silly registry.get     'content-length': '0',
1196 silly registry.get     'keep-alive': 'timeout=10, max=50',
1196 silly registry.get     connection: 'Keep-Alive' } ]
1197 verbose etag async/0.2.9 from cache
1198 silly addNameRange number 2 { name: 'ursa', range: '', hasData: true }
1199 silly addNameRange versions [ 'ursa',
1199 silly addNameRange   [ '0.4.10',
1199 silly addNameRange     '0.4.11',
1199 silly addNameRange     '0.4.12',
1199 silly addNameRange     '0.4.13',
1199 silly addNameRange     '0.6.0',
1199 silly addNameRange     '0.6.1',
1199 silly addNameRange     '0.6.2',
1199 silly addNameRange     '0.6.3',
1199 silly addNameRange     '0.6.4',
1199 silly addNameRange     '0.6.5',
1199 silly addNameRange     '0.6.6',
1199 silly addNameRange     '0.6.7',
1199 silly addNameRange     '0.6.8',
1199 silly addNameRange     '0.6.9',
1199 silly addNameRange     '0.7.0',
1199 silly addNameRange     '0.8.0' ] ]
1200 verbose addNamed [ 'ursa', '0.8.0' ]
1201 verbose addNamed [ '0.8.0', '0.8.0' ]
1202 silly lockFile ffd8e17f-ursa-0-8-0 ursa@0.8.0
1203 verbose lock ursa@0.8.0 /Users/bmackey/.npm/ffd8e17f-ursa-0-8-0.lock
1204 verbose read json /Users/bmackey/.npm/ursa/0.8.0/package/package.json
1205 verbose read json /Users/bmackey/.npm/async/0.2.9/package/package.json
1206 silly gunzTarPerm extractEntry test/moment/format.js
1207 silly gunzTarPerm extractEntry test/moment/is_same.js
1208 silly lockFile ffd8e17f-ursa-0-8-0 ursa@0.8.0
1209 silly lockFile ffd8e17f-ursa-0-8-0 ursa@0.8.0
1210 silly lockFile 537bca9f-ursa ursa@*
1211 silly lockFile 537bca9f-ursa ursa@*
1212 silly lockFile be62480b-async-0-2-9 async@0.2.9
1213 silly lockFile be62480b-async-0-2-9 async@0.2.9
1214 silly resolved [ { name: 'ursa',
1214 silly resolved     version: '0.8.0',
1214 silly resolved     keywords:
1214 silly resolved      [ 'crypto',
1214 silly resolved        'key',
1214 silly resolved        'openssl',
1214 silly resolved        'private',
1214 silly resolved        'public',
1214 silly resolved        'rsa',
1214 silly resolved        'sign',
1214 silly resolved        'signature',
1214 silly resolved        'verify',
1214 silly resolved        'verification',
1214 silly resolved        'hash',
1214 silly resolved        'digest' ],
1214 silly resolved     description: 'RSA public/private key crypto',
1214 silly resolved     homepage: 'https://github.com/Obvious/ursa',
1214 silly resolved     repository: { type: 'git', url: 'https://github.com/Obvious/ursa.git' },
1214 silly resolved     licenses: [ [Object] ],
1214 silly resolved     author:
1214 silly resolved      { name: 'Dan Bornstein',
1214 silly resolved        email: 'danfuzz@milk.com',
1214 silly resolved        url: 'http://www.milk.com/' },
1214 silly resolved     maintainers: [ [Object] ],
1214 silly resolved     main: 'lib/ursa.js',
1214 silly resolved     engine: { node: '>=0.6.0' },
1214 silly resolved     scripts:
1214 silly resolved      { install: 'node-gyp configure build && node install.js',
1214 silly resolved        test: 'node test/test.js' },
1214 silly resolved     readme: 'ursa\n====\n\nThis Node module provides a fairly complete set of wrappers for the\nRSA public/private key crypto functionality of OpenSSL.\n\nIt has been tested by the maintainer on both Node 0.6.* and Node 0.8.*,\non both Linux and OS X (the latter in several configurations, including\nNode built from source as well as installed via MacPorts and Homebrew).\nIf you find it doesn\'t work for you, please file a bug (see below).\n\nIt has been tested on Windows by [SLaks](https://github.com/SLaks).  (see additional installation requirements)\n\n\nBuilding and Installing\n-----------------------\n\n```shell\nnpm install ursa\n```\n\nOr grab the source and\n\n```shell\nnpm install\n```\n\nTesting\n-------\n\n```shell\nnpm test\n```\n\nOr\n\n```shell\nnode ./test/test.js\n```\n\nOn Windows, you\'ll need to install some dependencies first:\n - [node-gyp](https://github.com/TooTallNate/node-gyp/) (`npm install -g node-gyp`)\n   - [Python 2.7](http://www.python.org/download/releases/2.7.3#download) (not 3.3)\n   - Vistual Studio 2010 or higher (including Express editions)\n     - Windows XP/Vista/7:\n        - Microsoft Visual Studio C++ 2010 ([Express](http://go.microsoft.com/?linkid=9709949) version works well)\n        - For 64-bit builds of node and native modules you will _**also**_ need the [Windows 7 64-bit SDK](http://www.microsoft.com/en-us/download/details.aspx?id=8279)\n        - If you get errors that the 64-bit compilers are not installed you may also need the [compiler update for the Windows SDK 7.1](http://www.microsoft.com/en-us/download/details.aspx?id=4422)\n     - Windows 8:\n        - Microsoft Visual Studio C++ 2012 for Windows Desktop ([Express](http://go.microsoft.com/?linkid=9816758) version works well)\n - [OpenSSL](http://slproweb.com/products/Win32OpenSSL.html) (normal, not light)\nin the same bitness as your Node.js installation.\n  - The build script looks for OpenSSL in the default install directory  \n  (`C:\\OpenSSL-Win32` or `C:\\OpenSSL-Win64`)\n  - If you get `Error: The specified module could not be found.`, copy `libeay32.dll` from the OpenSSL bin directory to this module\'s bin directory, or to Windows\\System3.\n\nUsage\n-----\n\nThis library aims to be convenient to use, allowing one to pass in and\nget back regular string objects. However, it is also meant to be reasonably\neasy to use efficiently, allowing one to pass in and get back Buffer\nobjects. Using Buffers is always the more efficient option.\n\nAll methods that can deal with strings take one or more arguments indicating\nthe encoding to use when interpreting an argument or generating a result.\nThese are limited to the usual encoding names that are valid for use with\nBuffers: `base64` `binary` `hex` and `utf8`. If an encoding is left undefined\nand the argument is a string, then the encoding is *always* assumed to be\n`utf8`. If an argument is a Buffer, then the encoding (if defined at all)\nis ignored. An undefined output encoding is *always* interpreted as a request\nfor a Buffer result.\n\nThe library knows how to read and output PEM format files for both\npublic and private keys, and it can generate new private keys (aka\nkeypairs).\n\nThe usual public-encryption / private-decryption operations by default\nuse padding mode `RSA_PKCS1_OAEP_PADDING`, which is the recommended\nmode for all new applications (as of this writing). Note that this mode\nbuilds-in a random element into every encryption operation, making it\nunnecessary to waste time or effort adding randomness in at a higher layer.\nThis default may be overridden to use the older mode `RSA_PKCS1_PADDING`\nif needed.\n\nThe less well-understood private-encryption / public-decryption operations\n(used for building signature mechanisms) are always done using padding\nmode `RSA_PKCS1_PADDING`. This doesn\'t build in any randomness (but that\'s\nnot usually a problem for applications that use these operations).\n\nSee the doc comments and tests for the excruciating details, but here\'s\na quick rundown of the available top-level exports and instance methods:\n\nTop-Level Exports\n-----------------\n\n### ursa.createPrivateKey(pem, password, encoding)\n\nCreate and return a private key (aka a keypair) read in from the given\nPEM-format file.  If defined, the given password is used to decrypt\nthe PEM file.\n\nThe encoding, if specified, applies to both other arguments.\n\nSee "Public Key Methods" below for more details.\n\n### ursa.assertKey(obj)\n\nConvenient shorthand for `assert(ursa.isKey(obj))`.\n\n### ursa.assertPrivateKey(obj)\n\nConvenient shorthand for `assert(ursa.isPrivateKey(obj))`.\n\n### ursa.assertPublicKey(obj)\n\nConvenient shorthand for `assert(ursa.isPublicKey(obj))`.\n\n### ursa.coerceKey(orig)\n\nCoerce the given key value into a key object (either public or\nprivate), returning it. If given a private key object, this just\nreturns it as-is. If given a string or Buffer, it tries to parse it as\nPEM. Anything else will result in an error.\n\n### ursa.coercePrivateKey(orig)\n\nCoerce the given key value into a private key object, returning it. If\ngiven a private key object, this just returns it as-is. If given a\nstring or Buffer, it tries to parse it as PEM. Anything else will\nresult in an error.\n\n### ursa.coercePublicKey(orig)\n\nCoerce the given key value into a public key object, returning it. If\ngiven a private key object, this just returns it as-is. If given a\nstring or Buffer, it tries to parse it as PEM. Anything else will\nresult in an error.\n\n### ursa.createPublicKey(pem, encoding)\n\nCreate and return a public key read in from the given PEM-format file.\nSee "Public Key Methods" below for more details.\n\n### ursa.createSigner(algorithm)\n\nCreate and return a signer which can sign a hash generated with the named\nalgorithm (such as `"sha256"` or `"md5"`). See "Signer Methods" below\nfor more details.\n\nThis function is similar to `crypto.createSign()`, except this function\ntakes a hash algorithm name (e.g., `"sha256"`) and not a crypto+hash name\ncombination (e.g., `"RSA-SHA256"`).\n\n### ursa.createVerifier(algorithm)\n\nCreate and return a verifier which can verify a hash generated with the\nnamed algorithm (such as `"sha256"` or `"md5"`). See "Verifier Methods" below\nfor more details.\n\nThis function is similar to `crypto.createVerify()`, except this function\ntakes a hash algorithm name (e.g., `"sha256"`) and not a crypto+hash name\ncombination (e.g., `"RSA-SHA256"`).\n\n### ursa.equalKeys(key1, key2)\n\nThis returns `true` if and only if both arguments are key objects of\nthe same type (public or private) and their contents match.\n\n### ursa.generatePrivateKey(modulusBits, exponent)\n\nCreate and return a freshly-generated private key (aka a keypair).\nThe first argument indicates the number of bits in the modulus (1024\nor more is generally considered secure). The second argument indicates\nthe exponent value, which must be odd (65537 is the typical value; 3\nand 17 are also common).  Both arguments are optional and default to\n2048 and 65537 (respectively).\n\nThis method will throw if `modulusBits` is less than `512` (because\nit\'s pretty crazy to want a key with that few bits) or if `exponent`\nis even (because RSA only works for odd exponents).\n\nUsing the command-line `openssl` tool, this operation is\nequivalent to:\n\n```shell\nopenssl genrsa -out key-name.pem <modulusBits>\n```\n\nfor exponent 65537, or for exponent 3 with the additional option\n`-3`. (That tool doesn\'t support other exponents.)\n\n### ursa.isKey(obj)\n\nReturn `true` if the given object is a key object (public or private) that\nwas created by this module. Return `false` if not.\n\n### ursa.isPrivateKey(obj)\n\nReturn `true` if the given object is a private key object that\nwas created by this module. Return `false` if not.\n\n### ursa.isPublicKey(obj)\n\nReturn `true` if the given object is a public key object that\nwas created by this module. Return `false` if not.\n\nNote that, even though all the public key operations work on private\nkeys, this function only returns true if the given object is a\npublic key, per se.\n\n### ursa.matchingPublicKeys(key1, key2)\n\nThis returns `true` if and only if both arguments are key objects of\nsome sort (either can be public or private, and they don\'t have to\nbe the same) and their public aspects match each other.\n\n### ursa.sshFingerprint(sshKey, sshEncoding, outEncoding)\n\nReturn the SSH-style public key fingerprint of the given SSH-format\npublic key (which was, perhaps, the result of a call to\n`toPublicSsh()` on a key object).\n\nThis is no more and no less than an MD5 hash of the given SSH-format\npublic key. This function doesn\'t actually check to see if the given\nkey is valid (garbage in, garbage out).\n\nUsing the command-line `ssh-keygen` tool, this operation is\nequivalent to:\n\n```shell\nssh-keygen -l -f key-name.sshpub\n```\n\nThis operation is also equivalent to this:\n\n```shell\ncat key-name.sshpub | awk \'{print $2}\' | base64 --decode | md5\n```\n\nPublic Key Methods\n------------------\n\nThese are all the methods available on public keys. These methods are\n*also* available on private keys (since private keys have all the\nunderlying data necessary to perform the public-side operations).\n\n### encrypt(buf, bufEncoding, outEncoding, padding)\n\nThis performs the "public encrypt" operation on the given buffer. The\nresult is always a byte sequence that is the same size as the key\nassociated with the instance. (For example, if the key is 2048 bits,\nthen the result of this operation will be 2048 bits, aka 256 bytes.)\n\nThe input buffer is limited to be no larger than the key size\nminus 41 bytes.\n\nIf no padding mode is specified, the default, and recommended, mode\nis `ursa.RSA_PKCS1_OAEP_PADDING`. The mode\n`ursa.RSA_PKCS1_PADDING` is also supported.\n\n### getExponent(encoding)\n\nGet the public exponent as an unsigned big-endian byte sequence.\n\n### getModulus(encoding)\n\nGet the public modulus as an unsigned big-endian byte sequence.\n\n### hashAndVerify(algorithm, buf, sig, encoding)\n\nThis is a friendly wrapper for verifying signatures. The given buffer\nis hashed using the named algorithm, and the result is verified\nagainst the given signature. This returns `true` if the hash and\nsignature match and the signature was produced by the appropriate\nprivate key. This returns `false` if the signature is a valid signature\n(structurally) but doesn\'t match. This throws an exception in other\ncases.\n\nThe encoding, if specified, applies to both buffer-like arguments. The\nalgorithm must always be a string.\n\n### publicDecrypt(buf, bufEncoding, outEncoding)\n\nThis performs the "public decrypt" operation on the given buffer. The\nresult is always a byte sequence that is no more than the size of the\nkey associated with the instance. (For example, if the key is 2048\nbits, then the result of this operation will be no more than 2048\nbits, aka 256 bytes.)\n\nThis operation is always performed using padding mode\n`RSA_PKCS1_PADDING`.\n\n### toPublicPem(encoding)\n\nThis converts the public key data into a PEM-format file.\n\n### toPublicSsh(encoding)\n\nThis converts the public key data into an SSH-format file. This is the\nfile format one finds in SSH\'s `authorized_keys` and `known_hosts` files.\nWhen used in such files, the contents are base64-encoded and prefixed with\nthe label `ssh-rsa`. Depending on context, the line a key appears on may\nalso have a host name prefix (in `known_hosts`) or comment suffix\n(in `authorized_keys`).\n\nUsing the command-line `ssh-keygen` tool, this operation is equivalent to:\n\n```shell\nssh-keygen -y -f key-name.pem > key-name.sshpub\n```\n\n### toPublicSshFingerprint(encoding)\n\nReturn the SSH-style public key fingerprint of this key. See\n`ursa.sshFingerprint()`, above, for more details.\n\n### verify(algorithm, hash, sig, encoding)\n\nThis performs an RSA public-verify on the given hash buffer, which\nshould be the result of performing the hash operation named by\nthe algorithm (such as `"sha256"` or `"md5"`) on some data. The\nsignature buffer is checked to see if it contains a private-signed\nstatement of the algorithm and hash. The method returns `true` if\nthe signature and hash match, or `false` if the signature and hash\ndon\'t match but the signature is at least a valid signature of\nsome sort. In any other situation, this throws an exception.\n\nThe encoding, if specified, applies to both buffer-like arguments. The\nalgorithm must always be a string.\n\nThis method is the underlying one used as part of the implementation\nof the higher-level and much friendlier `ursa.createVerifier()` and\n`hashAndVerify()`.\n\n### ununseal(ununsealer)\n\nThis is an internal method that is used in the implementation of\n`ursa.isKey()` `ursa.isPrivateKey()` `ursa.isPublicKey()` and\nassociated assertion functions. When called externally, it will\nalways return `undefined`.\n\n\nPrivate Key Methods\n-------------------\n\nThese are the methods available on private keys, above and beyond\nwhat is available for public keys.\n\n### decrypt(buf, bufEncoding, outEncoding, padding)\n\nThis performs the "private decrypt" operation on the given buffer. The\nresult is always a byte sequence that is no more than the size of the\nkey associated with the instance. (For example, if the key is 2048\nbits, then the result of this operation will be no more than 2048\nbits, aka 256 bytes.)\n\nIf no padding mode is specified, the default, and recommended, mode\nis `ursa.RSA_PKCS1_OAEP_PADDING`. The mode\n`ursa.RSA_PKCS1_PADDING` is also supported.\n\n### hashAndSign(algorithm, buf, bufEncoding, outEncoding)\n\nThis is a friendly wrapper for producing signatures. The given buffer\nis hashed using the named algorithm, and the result is signed using\nthe private key held by this instance. The return value of this method\nis the signature.\n\n### privateEncrypt(buf, bufEncoding, outEncoding)\n\nThis performs the "private encrypt" operation on the given buffer. The\nresult is always a byte sequence that is the same size as the key\nassociated with the instance. (For example, if the key is 2048 bits,\nthen the result of this operation will be 2048 bits, aka 256 bytes.)\n\nThe input buffer is limited to be no larger than the key size\nminus 12 bytes.\n\nThis operation is always performed using padding mode\n`RSA_PKCS1_PADDING`.\n\n### sign(algorithm, hash, hashEncoding, outEncoding)\n\nThis performs an RSA private-sign on the given hash buffer, which\nshould be the result of performing the hash operation named by\nthe algorithm (such as `"sha256"` or `"md5"`) on some data. The\nresult of this operation may later be passed to `verify()` on the\ncorresponding public key.\n\nThis method is the underlying one used as part of the implementation\nof the higher-level and much friendlier `ursa.createSigner()` and\n`hashAndSign()`.\n\n### toPrivatePem(encoding)\n\nThis converts the private key data into a PEM-format file. The result\nis not encrypted, so it behooves the user of this method to take care\nwith the result if the key is sensitive from a security standpoint,\nwhich is often the case with such things. (YMMV of course.)\n\n\nSigner Methods\n--------------\n\nThese are the methods available on signer objects, which are returned\nby `ursa.createSigner()`. These are similar to the objects returned\nfrom `crypto.createSign()`.\n\n### update(buf, bufEncoding)\n\nUpdate the hash in-progress with the given data.\n\n### sign(privateKey, outEncoding)\n\nGet the final hash of the data, and sign it using the private key. The\nreturn value is the signature, suitable for later verification.\n\n\nVerifier Methods\n----------------\n\nThese are the methods available on verifier objects, which are returned\nby `ursa.createVerifier()`. These are similar to the objects returned\nfrom `crypto.createVerify()`.\n\n### update(buf, bufEncoding)\n\nUpdate the hash in-progress with the given data.\n\n### verify(publicKey, sig, sigEncoding)\n\nGet the final hash of the data, and verify that the given signature\nboth matches it and was produced by the private key corresponding to\nthe given public key.\n\nThis returns `true` if the signature and hash match appropriately,\nor `false` if the signature appears to be generally valid (e.g.\nstructurally) yet doesn\'t match. This throws an exception in all\nother cases.\n\n\nConstants\n---------\n\nAllowed padding modes for public encryption and\nprivate decryption:\n\n* `ursa.RSA_PKCS1_PADDING`\n* `ursa.RSA_PKCS1_OAEP_PADDING`\n\n\nContributing\n------------\n\nQuestions, comments, bug reports, and pull requests are all welcome.\nSubmit them at [the project on GitHub](https://github.com/Obvious/ursa/).\n\nBug reports that include steps-to-reproduce (including code) are the\nbest. Even better, make them in the form of pull requests that update\nthe test suite. Thanks!\n\n\nAuthors\n-------\n\n[Dan Bornstein](https://github.com/danfuzz)\n([personal website](http://www.milk.com/)), supported by\n[The Obvious Corporation](http://obvious.com/).\n\nWith contribution from:\n\n* [Tyler Neylon](https://github.com/tylerneylon)\n\nWith thanks to:\n\n* [node-rsa](https://github.com/chrisa/node-rsa) by Chris Andrews,\n  for inspiration\n\n\nLicense\n-------\n\nCopyright 2012 [The Obvious Corporation](http://obvious.com/).\n\nLicensed under the Apache License, Version 2.0. \nSee the top-level file `LICENSE.txt` and\n(http://www.apache.org/licenses/LICENSE-2.0).\n',
1214 silly resolved     readmeFilename: 'README.md',
1214 silly resolved     bugs: { url: 'https://github.com/Obvious/ursa/issues' },
1214 silly resolved     _id: 'ursa@0.8.0',
1214 silly resolved     _from: 'ursa@*' } ]
1215 info install ursa@0.8.0 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security
1216 info installOne ursa@0.8.0
1217 silly resolved [ { name: 'async',
1217 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1217 silly resolved     main: './lib/async',
1217 silly resolved     author: { name: 'Caolan McMahon' },
1217 silly resolved     version: '0.2.9',
1217 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
1217 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
1217 silly resolved     licenses: [ [Object] ],
1217 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1217 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
1217 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
1217 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\');\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1217 silly resolved     readmeFilename: 'README.md',
1217 silly resolved     _id: 'async@0.2.9',
1217 silly resolved     _from: 'async@0.2.9' } ]
1218 info install async@0.2.9 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
1219 info installOne async@0.2.9
1220 verbose from cache /Users/bmackey/.npm/ursa/0.8.0/package/package.json
1221 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa unbuild
1222 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa/package.json
1223 verbose from cache /Users/bmackey/.npm/async/0.2.9/package/package.json
1224 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async unbuild
1225 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async/package.json
1226 verbose tar unpack /Users/bmackey/.npm/ursa/0.8.0/package.tgz
1227 silly lockFile 57d070d2-es-fh-security-node-modules-ursa tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa
1228 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa /Users/bmackey/.npm/57d070d2-es-fh-security-node-modules-ursa.lock
1229 silly lockFile 2e1679f8-ackey-npm-ursa-0-8-0-package-tgz tar:///Users/bmackey/.npm/ursa/0.8.0/package.tgz
1230 verbose lock tar:///Users/bmackey/.npm/ursa/0.8.0/package.tgz /Users/bmackey/.npm/2e1679f8-ackey-npm-ursa-0-8-0-package-tgz.lock
1231 verbose tar unpack /Users/bmackey/.npm/async/0.2.9/package.tgz
1232 silly lockFile 4899ca41-les-fh-statsc-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async
1233 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async /Users/bmackey/.npm/4899ca41-les-fh-statsc-node-modules-async.lock
1234 silly lockFile 6661fedd-ckey-npm-async-0-2-9-package-tgz tar:///Users/bmackey/.npm/async/0.2.9/package.tgz
1235 verbose lock tar:///Users/bmackey/.npm/async/0.2.9/package.tgz /Users/bmackey/.npm/6661fedd-ckey-npm-async-0-2-9-package-tgz.lock
1236 silly gunzTarPerm modes [ '755', '644' ]
1237 silly gunzTarPerm modes [ '755', '644' ]
1238 silly gunzTarPerm extractEntry package.json
1239 silly gunzTarPerm extractEntry package.json
1240 silly gunzTarPerm extractEntry .npmignore
1241 silly gunzTarPerm extractEntry README.md
1242 silly gunzTarPerm extractEntry README.md
1243 silly gunzTarPerm extractEntry LICENSE
1244 silly gunzTarPerm extractEntry component.json
1245 silly gunzTarPerm extractEntry lib/async.js
1246 silly gunzTarPerm extractEntry install.js
1247 silly gunzTarPerm extractEntry test/moment/is_valid.js
1248 silly gunzTarPerm extractEntry test/moment/lang.js
1249 silly gunzTarPerm extractEntry LICENSE.txt
1250 silly gunzTarPerm extractEntry binding.gyp
1251 http 304 https://registry.npmjs.org/async/0.1.16
1252 silly registry.get cb [ 304,
1252 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1252 silly registry.get     server: 'Apache',
1252 silly registry.get     via: '1.1 varnish',
1252 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1252 silly registry.get     'cache-control': 'max-age=1',
1252 silly registry.get     etag: '"EMEUTIIMHACQUJENNNGQCRBQT"',
1252 silly registry.get     'x-served-by': 'cache-lcy1133-LCY',
1252 silly registry.get     'x-cache': 'MISS',
1252 silly registry.get     'x-cache-hits': '0',
1252 silly registry.get     'x-timer': 'S1394633875.578047752,VS0,VE96',
1252 silly registry.get     vary: 'Accept',
1252 silly registry.get     'content-length': '0',
1252 silly registry.get     'keep-alive': 'timeout=10, max=50',
1252 silly registry.get     connection: 'Keep-Alive' } ]
1253 verbose etag async/0.1.16 from cache
1254 verbose read json /Users/bmackey/.npm/async/0.1.16/package/package.json
1255 silly gunzTarPerm extractEntry test/moment/leapyear.js
1256 silly gunzTarPerm extractEntry test/moment/mutable.js
1257 silly gunzTarPerm extractEntry lib/ursa.js
1258 silly gunzTarPerm extractEntry src/asprintf.cc
1259 silly lockFile a5ad263c-async-0-1-16 async@0.1.16
1260 silly lockFile a5ad263c-async-0-1-16 async@0.1.16
1261 silly gunzTarPerm extractEntry src/asprintf.h
1262 silly gunzTarPerm extractEntry src/ursaNative.cc
1263 silly gunzTarPerm extractEntry src/ursaNative.h
1264 silly gunzTarPerm extractEntry test/fixture.js
1265 http 304 https://registry.npmjs.org/request/2.9.100
1266 silly registry.get cb [ 304,
1266 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1266 silly registry.get     server: 'Apache',
1266 silly registry.get     via: '1.1 varnish',
1266 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1266 silly registry.get     'cache-control': 'max-age=1',
1266 silly registry.get     etag: '"62LTKXVVVKKXRACOXLH7QME9A"',
1266 silly registry.get     'x-served-by': 'cache-lcy1123-LCY',
1266 silly registry.get     'x-cache': 'MISS',
1266 silly registry.get     'x-cache-hits': '0',
1266 silly registry.get     'x-timer': 'S1394633875.602110863,VS0,VE91',
1266 silly registry.get     vary: 'Accept',
1266 silly registry.get     'content-length': '0',
1266 silly registry.get     'keep-alive': 'timeout=10, max=50',
1266 silly registry.get     connection: 'Keep-Alive' } ]
1267 verbose etag request/2.9.100 from cache
1268 silly gunzTarPerm extractEntry test/moment/duration.js
1269 silly gunzTarPerm extractEntry test/moment/preparse_postformat.js
1270 silly gunzTarPerm extractEntry test/native.js
1271 silly gunzTarPerm extractEntry test/test.js
1272 verbose read json /Users/bmackey/.npm/request/2.9.100/package/package.json
1273 silly lockFile 66486f29-request-2-9-100 request@2.9.100
1274 silly lockFile 66486f29-request-2-9-100 request@2.9.100
1275 silly resolved [ { name: 'async',
1275 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1275 silly resolved     main: './index',
1275 silly resolved     author: { name: 'Caolan McMahon' },
1275 silly resolved     version: '0.1.16',
1275 silly resolved     repository: { type: 'git', url: 'http://github.com/caolan/async.git' },
1275 silly resolved     bugs: { url: 'http://github.com/caolan/async/issues' },
1275 silly resolved     licenses: [ [Object] ],
1275 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser.\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, forEach…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n    async.parallel([\n        function(){ ... },\n        function(){ ... }\n    ], callback);\n\n    async.series([\n        function(){ ... },\n        function(){ ... }\n    ]);\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n\n## Download\n\nReleases are available for download from\n[GitHub](http://github.com/caolan/async/downloads).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 17.5kb Uncompressed\n\n__Production:__ [async.min.js](https://github.com/caolan/async/raw/master/dist/async.min.js) - 1.7kb Packed and Gzipped\n\n\n## In the Browser\n\nSo far its been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n    <script type="text/javascript" src="async.js"></script>\n    <script type="text/javascript">\n\n        async.map(data, asyncProcess, function(err, results){\n            alert(results);\n        });\n\n    </script>\n\n\n## Documentation\n\n### Collections\n\n* [forEach](#forEach)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [until](#until)\n* [waterfall](#waterfall)\n* [queue](#queue)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n### forEach(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the forEach function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // assuming openFiles is an array of file names and saveFile is a function\n    // to save the modified contents of that file:\n\n    async.forEach(openFiles, saveFile, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n\n---------------------------------------\n\n<a name="forEachSeries" />\n### forEachSeries(arr, iterator, callback)\n\nThe same as forEach only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n### forEachLimit(arr, limit, iterator, callback)\n\nThe same as forEach only the iterator is applied to batches of items in the\narray, in series. The next batch of iterators is only called once the current\none has completed processing.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - How many items should be in each batch.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // Assume documents is an array of JSON objects and requestApi is a\n    // function that interacts with a rate-limited REST api.\n\n    async.forEachLimit(documents, 20, requestApi, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as filter, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then its probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback which accepts an optional error as its first argument, and the state\n  of the reduction as the second. If an error is passed to the callback, the\n  reduction is stopped and the main callback is immediately called with the\n  error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n    async.reduce([1,2,3], 0, function(memo, item, callback){\n        // pointless async:\n        process.nextTick(function(){\n            callback(null, memo + item)\n        });\n    }, function(err, result){\n        // result is now equal to the last value of memo, which is 6\n    });\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n    async.detect([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // result now equals the first file in the list that exists\n    });\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a value to use as the sort criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n    async.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n        fs.stat(file, function(err, stats){\n            callback(err, stats.mtime);\n        });\n    }, function(err, results){\n        // results is now the original array of files sorted by\n        // modified date\n    });\n\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n    async.some([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then at least one of the files exists\n    });\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n    async.every([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then every file exists\n    });\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n    async.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n        // files is now a list of filenames that exist in the 3 directories\n    });\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.series([\n        function(callback){\n            // do some stuff ...\n            callback(null, \'one\');\n        },\n        function(callback){\n            // do some more stuff ...\n            callback(null, \'two\');\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // results is now equal to [\'one\', \'two\']\n    });\n\n\n    // an example using an object instead of an array\n    async.series({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equal to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed a\n  callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.parallel([\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'one\');\n            }, 200);\n        },\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'two\');\n            }, 100);\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // in this case, the results array will equal [\'two\',\'one\']\n        // because the functions were run in parallel and the second\n        // function had a shorter timeout before calling the callback.\n    });\n\n\n    // an example using an object instead of an array\n    async.parallel({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equals to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback which must be called once it has completed with an optional\n  error as the first argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n    var count = 0;\n\n    async.whilst(\n        function () { return count < 5; },\n        function (callback) {\n            count++;\n            setTimeout(callback, 1000);\n        },\n        function (err) {\n            // 5 seconds have passed\n        }\n    );\n\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n    async.waterfall([\n        function(callback){\n            callback(null, \'one\', \'two\');\n        },\n        function(arg1, arg2, callback){\n            callback(null, \'three\');\n        },\n        function(arg1, callback){\n            // arg1 now equals \'three\'\n            callback(null, \'done\');\n        }\n    ], function (err, result) {\n       // result now equals \'done\'    \n    });\n\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n    // create a queue object with concurrency 2\n\n    var q = async.queue(function (task, callback) {\n        console.log(\'hello \' + task.name);\n        callback();\n    }, 2);\n\n\n    // assign a callback\n    q.drain = function() {\n        console.log(\'all items have been processed\');\n    }\n\n    // add some items to the queue\n\n    q.push({name: \'foo\'}, function (err) {\n        console.log(\'finished processing foo\');\n    });\n    q.push({name: \'bar\'}, function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n    // add some items to the queue (batch-wise)\n\n    q.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The\n  syntax is easier to understand by looking at the example.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. If all tasks complete\n  successfully, it will receive an object containing their results.\n\n__Example__\n\n    async.auto({\n        get_data: function(callback){\n            // async code to get some data\n        },\n        make_folder: function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        },\n        write_file: [\'get_data\', \'make_folder\', function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n            callback(null, filename);\n        }],\n        email_link: [\'write_file\', function(callback, results){\n            // once the file is written let\'s email a link to it...\n            // results.write_file contains the filename returned by write_file.\n        }]\n    });\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n    async.parallel([\n        function(callback){\n            // async code to get some data\n        },\n        function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        }\n    ],\n    function(results){\n        async.series([\n            function(callback){\n                // once there is some data and the directory exists,\n                // write the data to a file in the directory\n            },\n            email_link: function(callback){\n                // once the file is written let\'s email a link to it...\n            }\n        ]);\n    });\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. Its also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n\n__Example__\n\n    var iterator = async.iterator([\n        function(){ sys.p(\'one\'); },\n        function(){ sys.p(\'two\'); },\n        function(){ sys.p(\'three\'); }\n    ]);\n\n    node> var iterator2 = iterator();\n    \'one\'\n    node> var iterator3 = iterator2();\n    \'two\'\n    node> iterator3();\n    \'three\'\n    node> var nextfn = iterator2.next();\n    node> nextfn();\n    \'three\'\n\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n    // using apply\n\n    async.parallel([\n        async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n        async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n    ]);\n\n\n    // the same process without using apply\n\n    async.parallel([\n        function(callback){\n            fs.writeFile(\'testfile1\', \'test1\', callback);\n        },\n        function(callback){\n            fs.writeFile(\'testfile2\', \'test2\', callback);\n        },\n    ]);\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n    node> var fn = async.apply(sys.puts, \'one\');\n    node> fn(\'two\', \'three\');\n    one\n    two\n    three\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setTimeout(callback, 0),\nwhich means other higher priority events may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n    var call_order = [];\n    async.nextTick(function(){\n        call_order.push(\'two\');\n        // call_order now equals [\'one\',\'two]\n    });\n    call_order.push(\'one\')\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n    var slow_fn = function (name, callback) {\n        // do something\n        callback(null, result);\n    };\n    var fn = async.memoize(slow_fn);\n\n    // fn can now be used as if it were slow_fn\n    fn(\'some name\', function () {\n        // callback\n    });\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, \'hello \' + name);\n        }, 1000);\n    };\n\n    node> async.log(hello, \'world\');\n    \'hello world\'\n\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, {hello: name});\n        }, 1000);\n    };\n\n    node> async.dir(hello, \'world\');\n    {hello: \'world\'}\n\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1275 silly resolved     readmeFilename: 'README.md',
1275 silly resolved     _id: 'async@0.1.16',
1275 silly resolved     _from: 'async@0.1.16' },
1275 silly resolved   { name: 'request',
1275 silly resolved     description: 'Simplified HTTP request client.',
1275 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
1275 silly resolved     version: '2.9.100',
1275 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
1275 silly resolved     repository: { type: 'git', url: 'http://github.com/mikeal/request.git' },
1275 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
1275 silly resolved     engines: [ 'node >= 0.3.6' ],
1275 silly resolved     main: './main',
1275 silly resolved     scripts: { test: 'bash tests/run.sh' },
1275 silly resolved     readme: '# Request -- Simplified HTTP request method\n\n## Install\n\n<pre>\n  npm install request\n</pre>\n\nOr from source:\n\n<pre>\n  git clone git://github.com/mikeal/request.git \n  cd request\n  npm link\n</pre>\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It support HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types, in this case `application/json`, and use the proper content-type in the PUT request if one is not already provided in the headers.\n\n```javascript\nfs.readStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also pipe to itself. When doing so the content-type and content-length will be preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let\'s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    } \n  }\n})\n```\n\nYou can also pipe() from a http.ServerRequest instance and to a http.ServerResponse instance. The HTTP method and headers will be sent as well as the entity-body data. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since pipe() returns the destination stream in node 0.5.x you can do one line proxying :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Assume by some stretch of magic you aquired the verifier\n  var access_token = qs.parse(body)\n    , oauth = \n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: VERIFIER\n      , token_secret: access_token.oauth_token_secret\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth = \n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1/users/show.json?\'\n      , params = \n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n\n\n### request(options, callback)\n\nThe first argument can be either a url or an options object. The only required option is uri, all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from url.parse()\n* `method` - http method, defaults to GET\n* `headers` - http headers, defaults to {}\n* `body` - entity body for POST and PUT requests. Must be buffer or string.\n* `form` - sets `body` but to querystring representation of value and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects. defaults to true.\n* `maxRedirects` - the maximum number of redirects to follow, defaults to 10.\n* `onResponse` - If true the callback will be fired on the "response" event instead of "end". If a function it will be called on "response" and not effect the regular semantics of the main callback on "end".\n* `encoding` - Encoding to be used on `setEncoding` of response data. If set to `null`, the body is returned as a Buffer.\n* `pool` - A hash object containing the agents for these requests. If omitted this request will use the global pool which is set to node\'s default maxSockets.\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\t\n* `proxy` - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it\'s supported with the `url` parameter by embedding the auth info in the uri.\n* `oauth` - Options for OAuth HMAC-SHA1 signing, see documentation above.\n* `strictSSL` - Set to `true` to require that SSL certificates be valid. Note: to use your own certificate authority, you need to specify an agent that was created with that ca as an option.\n* `jar` - Set to `false` if you don\'t want cookies to be remembered for future use or define your custom cookie jar (see examples section)\n\n\nThe callback argument gets 3 arguments. The first is an error when applicable (usually from the http.Client option not the http.ClientRequest object). The second in an http.ClientResponse object. The third is the response body String or Buffer.\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)  \n  \nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as request() but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.post\n\nSame as request() but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as request() but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nAlias to normal request method for uniformity.\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart: \n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ] \n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\nCookies are enabled by default (so they can be used in subsequent requests). To disable cookies set jar to false (either in defaults or in the options sent).\n\n```javascript\nvar request = request.defaults({jar: false})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nIf you to use a custom cookie jar (instead of letting request use its own global cookie jar) you do so by setting the jar default or by specifying it as an option:\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.add(cookie)\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n',
1275 silly resolved     readmeFilename: 'README.md',
1275 silly resolved     _id: 'request@2.9.100',
1275 silly resolved     _from: 'request@2.9.100' } ]
1276 info install async@0.1.16 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
1277 info install request@2.9.100 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
1278 info installOne async@0.1.16
1279 info installOne request@2.9.100
1280 verbose from cache /Users/bmackey/.npm/async/0.1.16/package/package.json
1281 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async unbuild
1282 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async/package.json
1283 verbose from cache /Users/bmackey/.npm/request/2.9.100/package/package.json
1284 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request unbuild
1285 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request/package.json
1286 verbose tar unpack /Users/bmackey/.npm/async/0.1.16/package.tgz
1287 silly lockFile f4f0905d-portingclient-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async
1288 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async /Users/bmackey/.npm/f4f0905d-portingclient-node-modules-async.lock
1289 silly lockFile fd5f474c-key-npm-async-0-1-16-package-tgz tar:///Users/bmackey/.npm/async/0.1.16/package.tgz
1290 verbose lock tar:///Users/bmackey/.npm/async/0.1.16/package.tgz /Users/bmackey/.npm/fd5f474c-key-npm-async-0-1-16-package-tgz.lock
1291 verbose tar unpack /Users/bmackey/.npm/request/2.9.100/package.tgz
1292 silly lockFile 05f23e67-rtingclient-node-modules-request tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request
1293 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request /Users/bmackey/.npm/05f23e67-rtingclient-node-modules-request.lock
1294 silly lockFile cecfa175--npm-request-2-9-100-package-tgz tar:///Users/bmackey/.npm/request/2.9.100/package.tgz
1295 verbose lock tar:///Users/bmackey/.npm/request/2.9.100/package.tgz /Users/bmackey/.npm/cecfa175--npm-request-2-9-100-package-tgz.lock
1296 silly gunzTarPerm modes [ '755', '644' ]
1297 silly gunzTarPerm modes [ '755', '644' ]
1298 silly gunzTarPerm extractEntry package.json
1299 silly gunzTarPerm extractEntry package.json
1300 silly gunzTarPerm extractEntry README.md
1301 silly gunzTarPerm extractEntry LICENSE
1302 silly gunzTarPerm extractEntry README.md
1303 silly gunzTarPerm extractEntry LICENSE
1304 silly gunzTarPerm extractEntry index.js
1305 silly gunzTarPerm extractEntry dist/async.min.js
1306 silly gunzTarPerm extractEntry forever.js
1307 silly gunzTarPerm extractEntry test/blort-pass.pem
1308 silly gunzTarPerm extractEntry test/blort.pem
1309 silly gunzTarPerm extractEntry test/moment/diff.js
1310 silly gunzTarPerm extractEntry test/moment/sod_eod.js
1311 silly gunzTarPerm extractEntry test/blort.pub
1312 silly gunzTarPerm extractEntry test/blort.sshpub
1313 silly gunzTarPerm extractEntry main.js
1314 silly gunzTarPerm extractEntry mimetypes.js
1315 silly gunzTarPerm extractEntry test/zorch.pem
1316 silly gunzTarPerm extractEntry test/zorch.pub
1317 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async/package.json
1318 silly gunzTarPerm extractEntry test/moment/days_in_month.js
1319 silly gunzTarPerm extractEntry test/moment/utc.js
1320 silly gunzTarPerm extractEntry oauth.js
1321 silly gunzTarPerm extractEntry uuid.js
1322 silly gunzTarPerm extractEntry tests/test-timeout.js
1323 silly gunzTarPerm extractEntry tests/test-redirect.js
1324 silly gunzTarPerm extractEntry Makefile
1325 silly gunzTarPerm extractEntry .gitmodules
1326 silly gunzTarPerm extractEntry lib/async.js
1327 silly gunzTarPerm extractEntry nodelint.cfg
1328 silly gunzTarPerm extractEntry deps/nodeunit.js
1329 silly gunzTarPerm extractEntry deps/nodeunit.css
1330 silly gunzTarPerm extractEntry test/test-async.js
1331 silly gunzTarPerm extractEntry test/.swp
1332 silly gunzTarPerm extractEntry test/test.html
1333 silly gunzTarPerm extractEntry test/moment/create.js
1334 silly gunzTarPerm extractEntry test/moment/weeks.js
1335 silly gunzTarPerm extractEntry tests/test-body.js
1336 silly gunzTarPerm extractEntry tests/test-cookie.js
1337 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/package.json
1338 silly gunzTarPerm extractEntry tests/server.js
1339 silly gunzTarPerm extractEntry tests/test-proxy.js
1340 silly lockFile 6ba771ee--nodeapp-node-modules-fh-connect tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
1341 silly lockFile 6ba771ee--nodeapp-node-modules-fh-connect tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
1342 silly lockFile 82617ff2-npm-fh-connect-1-8-6-package-tgz tar:///Users/bmackey/.npm/fh-connect/1.8.6/package.tgz
1343 silly lockFile 82617ff2-npm-fh-connect-1-8-6-package-tgz tar:///Users/bmackey/.npm/fh-connect/1.8.6/package.tgz
1344 silly gunzTarPerm extractEntry tests/test-httpModule.js
1345 silly gunzTarPerm extractEntry tests/test-https.js
1346 info preinstall fh-connect@1.8.6
1347 silly gunzTarPerm extractEntry test/moment/is_moment.js
1348 silly gunzTarPerm extractEntry lang/ar-ma.js
1349 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/package.json
1350 verbose readDependencies using package.json deps
1351 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/package.json
1352 verbose readDependencies using package.json deps
1353 silly gunzTarPerm extractEntry tests/test-oauth.js
1354 silly gunzTarPerm extractEntry tests/test-pipes.js
1355 verbose cache add [ 'formidable@1.0.11', null ]
1356 verbose cache add name=undefined spec="formidable@1.0.11" args=["formidable@1.0.11",null]
1357 verbose parsed url { protocol: null,
1357 verbose parsed url   slashes: null,
1357 verbose parsed url   auth: null,
1357 verbose parsed url   host: null,
1357 verbose parsed url   port: null,
1357 verbose parsed url   hostname: null,
1357 verbose parsed url   hash: null,
1357 verbose parsed url   search: null,
1357 verbose parsed url   query: null,
1357 verbose parsed url   pathname: 'formidable@1.0.11',
1357 verbose parsed url   path: 'formidable@1.0.11',
1357 verbose parsed url   href: 'formidable@1.0.11' }
1358 verbose cache add name="formidable" spec="1.0.11" args=["formidable","1.0.11"]
1359 verbose parsed url { protocol: null,
1359 verbose parsed url   slashes: null,
1359 verbose parsed url   auth: null,
1359 verbose parsed url   host: null,
1359 verbose parsed url   port: null,
1359 verbose parsed url   hostname: null,
1359 verbose parsed url   hash: null,
1359 verbose parsed url   search: null,
1359 verbose parsed url   query: null,
1359 verbose parsed url   pathname: '1.0.11',
1359 verbose parsed url   path: '1.0.11',
1359 verbose parsed url   href: '1.0.11' }
1360 verbose addNamed [ 'formidable', '1.0.11' ]
1361 verbose addNamed [ '1.0.11', '1.0.11' ]
1362 silly lockFile 85cafced-formidable-1-0-11 formidable@1.0.11
1363 verbose lock formidable@1.0.11 /Users/bmackey/.npm/85cafced-formidable-1-0-11.lock
1364 verbose cache add [ 'qs@>= 0.4.0', null ]
1365 verbose cache add name=undefined spec="qs@>= 0.4.0" args=["qs@>= 0.4.0",null]
1366 verbose parsed url { protocol: null,
1366 verbose parsed url   slashes: null,
1366 verbose parsed url   auth: null,
1366 verbose parsed url   host: null,
1366 verbose parsed url   port: null,
1366 verbose parsed url   hostname: null,
1366 verbose parsed url   hash: null,
1366 verbose parsed url   search: null,
1366 verbose parsed url   query: null,
1366 verbose parsed url   pathname: 'qs@%3E=%200.4.0',
1366 verbose parsed url   path: 'qs@%3E=%200.4.0',
1366 verbose parsed url   href: 'qs@%3E=%200.4.0' }
1367 verbose cache add name="qs" spec=">= 0.4.0" args=["qs",">= 0.4.0"]
1368 verbose parsed url { protocol: null,
1368 verbose parsed url   slashes: null,
1368 verbose parsed url   auth: null,
1368 verbose parsed url   host: null,
1368 verbose parsed url   port: null,
1368 verbose parsed url   hostname: null,
1368 verbose parsed url   hash: null,
1368 verbose parsed url   search: null,
1368 verbose parsed url   query: null,
1368 verbose parsed url   pathname: '%3E=%200.4.0',
1368 verbose parsed url   path: '%3E=%200.4.0',
1368 verbose parsed url   href: '%3E=%200.4.0' }
1369 verbose addNamed [ 'qs', '>= 0.4.0' ]
1370 verbose addNamed [ null, '>=0.4.0' ]
1371 silly lockFile d8ffb163-qs-0-4-0 qs@>= 0.4.0
1372 verbose lock qs@>= 0.4.0 /Users/bmackey/.npm/d8ffb163-qs-0-4-0.lock
1373 verbose cache add [ 'mime@>= 0.0.1', null ]
1374 verbose cache add name=undefined spec="mime@>= 0.0.1" args=["mime@>= 0.0.1",null]
1375 verbose parsed url { protocol: null,
1375 verbose parsed url   slashes: null,
1375 verbose parsed url   auth: null,
1375 verbose parsed url   host: null,
1375 verbose parsed url   port: null,
1375 verbose parsed url   hostname: null,
1375 verbose parsed url   hash: null,
1375 verbose parsed url   search: null,
1375 verbose parsed url   query: null,
1375 verbose parsed url   pathname: 'mime@%3E=%200.0.1',
1375 verbose parsed url   path: 'mime@%3E=%200.0.1',
1375 verbose parsed url   href: 'mime@%3E=%200.0.1' }
1376 verbose cache add name="mime" spec=">= 0.0.1" args=["mime",">= 0.0.1"]
1377 verbose parsed url { protocol: null,
1377 verbose parsed url   slashes: null,
1377 verbose parsed url   auth: null,
1377 verbose parsed url   host: null,
1377 verbose parsed url   port: null,
1377 verbose parsed url   hostname: null,
1377 verbose parsed url   hash: null,
1377 verbose parsed url   search: null,
1377 verbose parsed url   query: null,
1377 verbose parsed url   pathname: '%3E=%200.0.1',
1377 verbose parsed url   path: '%3E=%200.0.1',
1377 verbose parsed url   href: '%3E=%200.0.1' }
1378 verbose addNamed [ 'mime', '>= 0.0.1' ]
1379 verbose addNamed [ null, '>=0.0.1' ]
1380 silly lockFile c812b446-mime-0-0-1 mime@>= 0.0.1
1381 verbose lock mime@>= 0.0.1 /Users/bmackey/.npm/c812b446-mime-0-0-1.lock
1382 silly addNameRange { name: 'qs', range: '>=0.4.0', hasData: false }
1383 http 304 https://registry.npmjs.org/async
1384 silly registry.get cb [ 304,
1384 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1384 silly registry.get     server: 'Apache',
1384 silly registry.get     via: '1.1 varnish',
1384 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:47 GMT',
1384 silly registry.get     'cache-control': 'max-age=1',
1384 silly registry.get     etag: '"EMEUTIIMHACQUJENNNGQCRBQT"',
1384 silly registry.get     'x-served-by': 'cache-lcy1133-LCY',
1384 silly registry.get     'x-cache': 'HIT',
1384 silly registry.get     'x-cache-hits': '2',
1384 silly registry.get     'x-timer': 'S1394633875.779923916,VS0,VE0',
1384 silly registry.get     vary: 'Accept',
1384 silly registry.get     'content-length': '0',
1384 silly registry.get     'keep-alive': 'timeout=10, max=49',
1384 silly registry.get     connection: 'Keep-Alive' } ]
1385 verbose etag async from cache
1386 silly addNameRange { name: 'mime', range: '>=0.0.1', hasData: false }
1387 verbose url raw formidable/1.0.11
1388 verbose url resolving [ 'https://registry.npmjs.org/', './formidable/1.0.11' ]
1389 verbose url resolved https://registry.npmjs.org/formidable/1.0.11
1390 info trying registry request attempt 1 at 14:17:57
1391 verbose etag "4Z95A5U1N2RO98XWP4STDDCN6"
1392 http GET https://registry.npmjs.org/formidable/1.0.11
1393 verbose url raw qs
1394 verbose url resolving [ 'https://registry.npmjs.org/', './qs' ]
1395 verbose url resolved https://registry.npmjs.org/qs
1396 info trying registry request attempt 1 at 14:17:57
1397 verbose etag "8YIPDUWWPI8WEBPZIRLS8IOWL"
1398 http GET https://registry.npmjs.org/qs
1399 verbose url raw mime
1400 verbose url resolving [ 'https://registry.npmjs.org/', './mime' ]
1401 verbose url resolved https://registry.npmjs.org/mime
1402 info trying registry request attempt 1 at 14:17:57
1403 verbose etag "1UAPEHGRLE79H4KN6GMSAXLT2"
1404 http GET https://registry.npmjs.org/mime
1405 silly addNameRange number 2 { name: 'async', range: '>=0.1.0- <0.2.0-', hasData: true }
1406 silly addNameRange versions [ 'async',
1406 silly addNameRange   [ '0.1.0',
1406 silly addNameRange     '0.1.1',
1406 silly addNameRange     '0.1.2',
1406 silly addNameRange     '0.1.3',
1406 silly addNameRange     '0.1.4',
1406 silly addNameRange     '0.1.5',
1406 silly addNameRange     '0.1.6',
1406 silly addNameRange     '0.1.7',
1406 silly addNameRange     '0.1.8',
1406 silly addNameRange     '0.1.9',
1406 silly addNameRange     '0.1.10',
1406 silly addNameRange     '0.1.11',
1406 silly addNameRange     '0.1.12',
1406 silly addNameRange     '0.1.13',
1406 silly addNameRange     '0.1.14',
1406 silly addNameRange     '0.1.15',
1406 silly addNameRange     '0.1.16',
1406 silly addNameRange     '0.1.17',
1406 silly addNameRange     '0.1.18',
1406 silly addNameRange     '0.1.19',
1406 silly addNameRange     '0.1.20',
1406 silly addNameRange     '0.1.21',
1406 silly addNameRange     '0.1.22',
1406 silly addNameRange     '0.2.0',
1406 silly addNameRange     '0.2.1',
1406 silly addNameRange     '0.2.2',
1406 silly addNameRange     '0.2.3',
1406 silly addNameRange     '0.2.4',
1406 silly addNameRange     '0.2.5',
1406 silly addNameRange     '0.2.6',
1406 silly addNameRange     '0.2.7',
1406 silly addNameRange     '0.2.8',
1406 silly addNameRange     '0.2.9',
1406 silly addNameRange     '0.2.10' ] ]
1407 verbose addNamed [ 'async', '0.1.22' ]
1408 verbose addNamed [ '0.1.22', '0.1.22' ]
1409 silly lockFile 09d21715-async-0-1-22 async@0.1.22
1410 verbose lock async@0.1.22 /Users/bmackey/.npm/09d21715-async-0-1-22.lock
1411 verbose read json /Users/bmackey/.npm/async/0.1.22/package/package.json
1412 silly gunzTarPerm extractEntry tests/test-cookiejar.js
1413 silly gunzTarPerm extractEntry tests/test-errors.js
1414 silly lockFile 09d21715-async-0-1-22 async@0.1.22
1415 silly lockFile 09d21715-async-0-1-22 async@0.1.22
1416 silly lockFile 463e1c03-async-0-1-x async@0.1.x
1417 silly lockFile 463e1c03-async-0-1-x async@0.1.x
1418 silly gunzTarPerm extractEntry tests/run.sh
1419 silly gunzTarPerm extractEntry tests/ssl/test.crt
1420 silly gunzTarPerm extractEntry tests/ssl/test.key
1421 silly gunzTarPerm extractEntry tests/googledoodle.png
1422 silly gunzTarPerm extractEntry lang/he.js
1423 silly gunzTarPerm extractEntry lang/hu.js
1424 http 304 https://registry.npmjs.org/amqp/0.1.6
1425 silly registry.get cb [ 304,
1425 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1425 silly registry.get     server: 'Apache',
1425 silly registry.get     via: '1.1 varnish',
1425 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1425 silly registry.get     'cache-control': 'max-age=1',
1425 silly registry.get     etag: '"76W6DVEDOUMD6NKQ190ULVZWB"',
1425 silly registry.get     'x-served-by': 'cache-lcy1135-LCY',
1425 silly registry.get     'x-cache': 'MISS',
1425 silly registry.get     'x-cache-hits': '0',
1425 silly registry.get     'x-timer': 'S1394633875.721414328,VS0,VE95',
1425 silly registry.get     vary: 'Accept',
1425 silly registry.get     'content-length': '0',
1425 silly registry.get     'keep-alive': 'timeout=10, max=49',
1425 silly registry.get     connection: 'Keep-Alive' } ]
1426 verbose etag amqp/0.1.6 from cache
1427 silly lockFile 4899ca41-les-fh-statsc-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async
1428 silly lockFile 4899ca41-les-fh-statsc-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async
1429 silly lockFile 6661fedd-ckey-npm-async-0-2-9-package-tgz tar:///Users/bmackey/.npm/async/0.2.9/package.tgz
1430 silly lockFile 6661fedd-ckey-npm-async-0-2-9-package-tgz tar:///Users/bmackey/.npm/async/0.2.9/package.tgz
1431 silly gunzTarPerm extractEntry vendor/cookie/index.js
1432 silly gunzTarPerm extractEntry vendor/cookie/jar.js
1433 http 304 https://registry.npmjs.org/async/0.2.7
1434 silly registry.get cb [ 304,
1434 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1434 silly registry.get     server: 'Apache',
1434 silly registry.get     via: '1.1 varnish',
1434 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1434 silly registry.get     'cache-control': 'max-age=1',
1434 silly registry.get     etag: '"EMEUTIIMHACQUJENNNGQCRBQT"',
1434 silly registry.get     'x-served-by': 'cache-lcy1134-LCY',
1434 silly registry.get     'x-cache': 'MISS',
1434 silly registry.get     'x-cache-hits': '0',
1434 silly registry.get     'x-timer': 'S1394633875.632117271,VS0,VE189',
1434 silly registry.get     vary: 'Accept',
1434 silly registry.get     'content-length': '0',
1434 silly registry.get     'keep-alive': 'timeout=10, max=50',
1434 silly registry.get     connection: 'Keep-Alive' } ]
1435 verbose etag async/0.2.7 from cache
1436 verbose read json /Users/bmackey/.npm/amqp/0.1.6/package/package.json
1437 info preinstall async@0.2.9
1438 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async/package.json
1439 verbose readDependencies using package.json deps
1440 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async/package.json
1441 verbose readDependencies using package.json deps
1442 silly resolved []
1443 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async
1444 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async
1445 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async/package.json
1446 verbose linkStuff [ false,
1446 verbose linkStuff   false,
1446 verbose linkStuff   false,
1446 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules' ]
1447 info linkStuff async@0.2.9
1448 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1449 verbose linkBins async@0.2.9
1450 verbose linkMans async@0.2.9
1451 verbose rebuildBundles async@0.2.9
1452 info install async@0.2.9
1453 verbose read json /Users/bmackey/.npm/async/0.2.7/package/package.json
1454 info postinstall async@0.2.9
1455 silly lockFile aa0e0118-amqp-0-1-6 amqp@0.1.6
1456 silly lockFile aa0e0118-amqp-0-1-6 amqp@0.1.6
1457 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
1458 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
1459 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/package.json
1460 verbose linkStuff [ false,
1460 verbose linkStuff   false,
1460 verbose linkStuff   false,
1460 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules' ]
1461 info linkStuff fh-statsc@0.2.1
1462 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1463 verbose linkBins fh-statsc@0.2.1
1464 verbose link bins [ { 'fh-statsc': './bin/fh-statsc.js' },
1464 verbose link bins   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/.bin',
1464 verbose link bins   false ]
1465 verbose linkMans fh-statsc@0.2.1
1466 verbose rebuildBundles fh-statsc@0.2.1
1467 verbose rebuildBundles [ 'async' ]
1468 silly lockFile 046e7838-async-0-2-7 async@0.2.7
1469 silly lockFile 046e7838-async-0-2-7 async@0.2.7
1470 info install fh-statsc@0.2.1
1471 info postinstall fh-statsc@0.2.1
1472 silly gunzTarPerm extractEntry lang/id.js
1473 silly gunzTarPerm extractEntry lang/gl.js
1474 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa/package.json
1475 silly lockFile 57d070d2-es-fh-security-node-modules-ursa tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa
1476 silly lockFile 57d070d2-es-fh-security-node-modules-ursa tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa
1477 silly gunzTarPerm extractEntry lang/it.js
1478 silly gunzTarPerm extractEntry lang/ja.js
1479 silly lockFile 2e1679f8-ackey-npm-ursa-0-8-0-package-tgz tar:///Users/bmackey/.npm/ursa/0.8.0/package.tgz
1480 silly lockFile 2e1679f8-ackey-npm-ursa-0-8-0-package-tgz tar:///Users/bmackey/.npm/ursa/0.8.0/package.tgz
1481 info preinstall ursa@0.8.0
1482 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa/package.json
1483 verbose readDependencies using package.json deps
1484 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa/package.json
1485 verbose readDependencies using package.json deps
1486 silly resolved []
1487 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa
1488 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa
1489 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa/package.json
1490 verbose linkStuff [ false,
1490 verbose linkStuff   false,
1490 verbose linkStuff   false,
1490 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules' ]
1491 info linkStuff ursa@0.8.0
1492 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1493 verbose linkBins ursa@0.8.0
1494 verbose linkMans ursa@0.8.0
1495 verbose rebuildBundles ursa@0.8.0
1496 info install ursa@0.8.0
1497 verbose unsafe-perm in lifecycle true
1498 silly gunzTarPerm extractEntry lang/ko.js
1499 silly gunzTarPerm extractEntry lang/lv.js
1500 silly gunzTarPerm extractEntry lang/nb.js
1501 silly gunzTarPerm extractEntry lang/fr.js
1502 http 304 https://registry.npmjs.org/colors
1503 silly registry.get cb [ 304,
1503 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1503 silly registry.get     server: 'Apache',
1503 silly registry.get     via: '1.1 varnish',
1503 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1503 silly registry.get     'cache-control': 'max-age=1',
1503 silly registry.get     etag: '"1IZCORCS4MY0BD3ODMOOC32KZ"',
1503 silly registry.get     'x-served-by': 'cache-lcy1123-LCY',
1503 silly registry.get     'x-cache': 'HIT',
1503 silly registry.get     'x-cache-hits': '1',
1503 silly registry.get     'x-timer': 'S1394633875.803925037,VS0,VE77',
1503 silly registry.get     vary: 'Accept',
1503 silly registry.get     'content-length': '0',
1503 silly registry.get     'keep-alive': 'timeout=10, max=49',
1503 silly registry.get     connection: 'Keep-Alive' } ]
1504 verbose etag colors from cache
1505 silly addNameRange number 2 { name: 'colors', range: '>=0.0.0- <1.0.0-', hasData: true }
1506 silly addNameRange versions [ 'colors',
1506 silly addNameRange   [ '0.3.0', '0.5.0', '0.5.1', '0.6.0', '0.6.0-1', '0.6.1', '0.6.2' ] ]
1507 verbose addNamed [ 'colors', '0.6.2' ]
1508 verbose addNamed [ '0.6.2', '0.6.2' ]
1509 silly lockFile 1ce149d5-colors-0-6-2 colors@0.6.2
1510 verbose lock colors@0.6.2 /Users/bmackey/.npm/1ce149d5-colors-0-6-2.lock
1511 verbose read json /Users/bmackey/.npm/colors/0.6.2/package/package.json
1512 silly lockFile 1ce149d5-colors-0-6-2 colors@0.6.2
1513 silly lockFile 1ce149d5-colors-0-6-2 colors@0.6.2
1514 silly lockFile 0b3af398-colors-0-x-x colors@0.x.x
1515 silly lockFile 0b3af398-colors-0-x-x colors@0.x.x
1516 silly gunzTarPerm extractEntry lang/ne.js
1517 silly gunzTarPerm extractEntry lang/fr-ca.js
1518 silly gunzTarPerm extractEntry lang/nl.js
1519 silly gunzTarPerm extractEntry lang/fi.js
1520 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request/package.json
1521 silly lockFile 05f23e67-rtingclient-node-modules-request tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request
1522 silly lockFile 05f23e67-rtingclient-node-modules-request tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request
1523 silly lockFile cecfa175--npm-request-2-9-100-package-tgz tar:///Users/bmackey/.npm/request/2.9.100/package.tgz
1524 silly lockFile cecfa175--npm-request-2-9-100-package-tgz tar:///Users/bmackey/.npm/request/2.9.100/package.tgz
1525 info preinstall request@2.9.100
1526 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request/package.json
1527 verbose readDependencies using package.json deps
1528 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request/package.json
1529 verbose readDependencies using package.json deps
1530 silly resolved []
1531 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request
1532 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request
1533 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request/package.json
1534 verbose linkStuff [ false,
1534 verbose linkStuff   false,
1534 verbose linkStuff   false,
1534 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules' ]
1535 info linkStuff request@2.9.100
1536 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1537 verbose linkBins request@2.9.100
1538 verbose linkMans request@2.9.100
1539 verbose rebuildBundles request@2.9.100
1540 info install request@2.9.100
1541 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async/package.json
1542 info postinstall request@2.9.100
1543 http 304 https://registry.npmjs.org/rc/0.1.1
1544 silly registry.get cb [ 304,
1544 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1544 silly registry.get     server: 'Apache',
1544 silly registry.get     via: '1.1 varnish',
1544 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1544 silly registry.get     'cache-control': 'max-age=1',
1544 silly registry.get     etag: '"9C9VWY5YESXEMPFYOAJ42W5T9"',
1544 silly registry.get     'x-served-by': 'cache-lcy1121-LCY',
1544 silly registry.get     'x-cache': 'MISS',
1544 silly registry.get     'x-cache-hits': '0',
1544 silly registry.get     'x-timer': 'S1394633875.743893862,VS0,VE182',
1544 silly registry.get     vary: 'Accept',
1544 silly registry.get     'content-length': '0',
1544 silly registry.get     'keep-alive': 'timeout=10, max=49',
1544 silly registry.get     connection: 'Keep-Alive' } ]
1545 verbose etag rc/0.1.1 from cache
1546 silly lockFile f4f0905d-portingclient-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async
1547 silly lockFile f4f0905d-portingclient-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async
1548 verbose read json /Users/bmackey/.npm/rc/0.1.1/package/package.json
1549 silly lockFile fd5f474c-key-npm-async-0-1-16-package-tgz tar:///Users/bmackey/.npm/async/0.1.16/package.tgz
1550 silly lockFile fd5f474c-key-npm-async-0-1-16-package-tgz tar:///Users/bmackey/.npm/async/0.1.16/package.tgz
1551 http 304 https://registry.npmjs.org/pkginfo
1552 silly registry.get cb [ 304,
1552 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1552 silly registry.get     server: 'Apache',
1552 silly registry.get     via: '1.1 varnish',
1552 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:16:35 GMT',
1552 silly registry.get     'cache-control': 'max-age=1',
1552 silly registry.get     etag: '"2DF0Z53I1AMXBKU18Q7NSWUR0"',
1552 silly registry.get     'x-served-by': 'cache-lcy1134-LCY',
1552 silly registry.get     'x-cache': 'HIT',
1552 silly registry.get     'x-cache-hits': '2',
1552 silly registry.get     'x-timer': 'S1394633875.933988571,VS0,VE0',
1552 silly registry.get     vary: 'Accept',
1552 silly registry.get     'content-length': '0',
1552 silly registry.get     'keep-alive': 'timeout=10, max=49',
1552 silly registry.get     connection: 'Keep-Alive' } ]
1553 verbose etag pkginfo from cache
1554 info preinstall async@0.1.16
1555 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async/package.json
1556 verbose readDependencies using package.json deps
1557 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async/package.json
1558 silly gunzTarPerm extractEntry lang/pl.js
1559 silly gunzTarPerm extractEntry lang/eu.js
1560 silly lockFile 51b3509a-rc-0-1-1 rc@0.1.1
1561 silly lockFile 51b3509a-rc-0-1-1 rc@0.1.1
1562 verbose readDependencies using package.json deps
1563 silly resolved []
1564 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async
1565 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async
1566 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async/package.json
1567 verbose linkStuff [ false,
1567 verbose linkStuff   false,
1567 verbose linkStuff   false,
1567 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules' ]
1568 info linkStuff async@0.1.16
1569 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1570 verbose linkBins async@0.1.16
1571 verbose linkMans async@0.1.16
1572 verbose rebuildBundles async@0.1.16
1573 info install async@0.1.16
1574 silly resolved [ { name: 'amqp',
1574 silly resolved     description: 'AMQP driver for node',
1574 silly resolved     keywords: [ 'amqp' ],
1574 silly resolved     version: '0.1.6',
1574 silly resolved     preferGlobal: true,
1574 silly resolved     author: { name: 'Ryan Dahl' },
1574 silly resolved     contributors:
1574 silly resolved      [ [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object],
1574 silly resolved        [Object] ],
1574 silly resolved     repository: { type: 'git', url: 'git://github.com/postwait/node-amqp.git' },
1574 silly resolved     bugs: { url: 'http://github.com/postwait/node-amqp/issues' },
1574 silly resolved     main: './amqp',
1574 silly resolved     engines: { node: '0.4 || 0.5 || 0.6 || 0.8' },
1574 silly resolved     licenses: [ [Object] ],
1574 silly resolved     readme: '[![build status](https://secure.travis-ci.org/postwait/node-amqp.png)](http://travis-ci.org/postwait/node-amqp)\n# node-amqp\n\nIMPORTANT: This module only works with node v0.4.0 and later.\n\nThis is a client for RabbitMQ (and maybe other servers?). It partially\nimplements the 0.9.1 version of the AMQP protocol.\n\n## Installation\n\n    npm install amqp\n\n## Synopsis\n\nAn example of connecting to a server and listening on a queue.\n\n```javascript\nvar amqp = require(\'amqp\');\n\nvar connection = amqp.createConnection({ host: \'dev.rabbitmq.com\' });\n\n// Wait for connection to become established.\nconnection.on(\'ready\', function () {\n  // Use the default \'amq.topic\' exchange\n  connection.queue(\'my-queue\', function(q){\n      // Catch all messages\n      q.bind(\'#\');\n    \n      // Receive messages\n      q.subscribe(function (message) {\n        // Print messages to stdout\n        console.log(message);\n      });\n  });\n});\n```\n\n## Connection\n\n`new amqp.Connection()` Instantiates a new connection. Use\n`connection.connect()` to connect to a server.\n\n`amqp.createConnection()` returns an instance of `amqp.Connection`, which is\na subclass of `net.Stream`. All the event and methods which work on\n`net.Stream` can also be used on an `amqp.Connection` instance. (e.g., the\nevents `\'connected\'` and `\'closed\'`.)\n\n### Connection options and URL\n\n`amqp.createConnection([options, [implOptions]])` takes two options\nobjects as parameters.  The first options object has these defaults:\n\n    { host: \'localhost\'\n    , port: 5672\n    , login: \'guest\'\n    , password: \'guest\'\n    , vhost: \'/\'\n    }\n\nAll of these can be passed in a single URL of the form\n\n    amqp[s]://[user:password@]hostname[:port][/vhost]\n\nNote that the vhost must be URL-encoded and appear as the only segment\nof the path, i.e., the only unencoded slash is that leading; leaving\nthe path entirely empty indicates that the vhost `/`, as\nabove, should be used (it could also be supplied as the path `/%2f`).\n\nThis URL is supplied as the field `url` in the options; for example\n\n```javascript\nvar conn =\n  amqp.createConnection({url: "amqp://guest:guest@localhost:5672"});\n\n```\n\n\nOptions provided as individual fields will override values given in\nthe URL.\n\nThe second options are specific to the node AMQP implementation. It has\nthe default values:\n\n    { defaultExchangeName: \'\' }\n\nThe defaultExchangeName is the default exchange to which\nconnection.publish will publish. In the past, the default exchange was\n`amq.topic`, which is not ideal.  To emulate this behaviour, one can\ncreate a connection like:\n\n```javascript\nvar conn =\n  amqp.createConnection({url: "amqp://guest:guest@localhost:5672"},\n                        {defaultExchangeName: "amq.topic"});\n```\n\n\nAfter a connection is established the `\'connect\'` event is fired as it is\nwith any `net.Connection` instance. AMQP requires a 7-way handshake which\nmust be completed before any communication can begin. `net.Connection` does\nthe handshake automatically and emits the `\'ready\'` event when the handshaking\nis complete.\n\nFor backward compatability, two additional options are available. Older\nversions of this library placed the routingKey and deliveryTag for incoming\nmessages into the JSON payload received. This module was changed to\nleave inbound JSON payloads pristine.  Some applications may need the\nold behaviour. If the key \'routingKeyInPayload\' is set to true in the\nconnection options, the messages resulting from a subscribe call will\ninclude a \'routingKey\' key in the JSON payload.  If the key\n\'devliryTagInPayload\' is set to true in the connection options, the\ndeliveryTag of the incoming message will be placed in the JSON payload.\n\n\n### connection.publish(queueName, body)\n\nPublishes a message to the default exchange; if the defaultExchange is\nleft as `\'\'`, this effectively publishes the message to the queue\nnamed.\n\n### connection.end()\n\n`amqp.Connection` is derived from `net.Stream` and has all the same methods.\nSo use `connection.end()` to terminate a connection gracefully.\n\n\n\n\n## Queue\n\nEvents: A queue will call the callback given to the `connection.queue()`\nmethod once it is usable. For example:\n\n```javascript\nvar q = connection.queue(\'my-queue\', function (queue) {\n  console.log(\'Queue \' + queue.name + \' is open\');\n});\n```\n\n\nDeclaring a queue with an empty name will make the server generate a\nrandom name.\n\n### connection.queue(name, options, openCallback)\n\nReturns a reference to a queue. The options are\n\n- `passive`: boolean, default false.\n    If set, the server will not create the queue.  The client can use\n    this to check whether a queue exists without modifying the server\n    state.\n- `durable`: boolean, default false.\n    Durable queues remain active when a server restarts.\n    Non-durable queues (transient queues) are purged if/when a\n    server restarts.  Note that durable queues do not necessarily\n    hold persistent messages, although it does not make sense to\n    send persistent messages to a transient queue.\n- `exclusive`: boolean, default false.\n    Exclusive queues may only be consumed from by the current connection.\n    Setting the \'exclusive\' flag always implies \'autoDelete\'.\n- `autoDelete`: boolean, default true.\n    If set, the queue is deleted when all consumers have finished\n    using it. Last consumer can be cancelled either explicitly or because\n    its channel is closed. If there was no consumer ever on the queue, it\n    won\'t be deleted.\n- `noDeclare`: boolean, default false.\n    If set, the queue will not be declared, this will allow a queue to be\n    deleted if you dont know its previous options.\n- `arguments`: a map of additional arguments to pass in when creating a queue.\n- `closeChannelOnUnsubscribe` : a boolean when true the channel will close on \n    unsubscrube, default false.\n\n### queue.subscribe([options,] listener)\n\nAn easy subscription command. It works like this\n\n```javascript\nq.subscribe(function (message, headers, deliveryInfo) {\n  console.log(\'Got a message with routing key \' + deliveryInfo.routingKey);\n});\n    \n```\n\nIt will automatically acknowledge receipt of each message.\n\nThere are several options available.  Setting the options argument to\n`{ ack: true }` (which defaults to false) will make it so that the AMQP\nserver only delivers a single message at a time. When you want the next\nmessage, call `q.shift()`. When `ack` is false then you will receive\nmessages as fast as they come in. \n\nYou can also use the prefetchCount option to increase the window of how\nmany messages the server will send you before you need to ack (quality of service).\n\'{ ack: true, prefetchCount: 1 }\' is the default and will only send you one\nmessage before you ack. Setting prefetchCount to 0 will make that window unlimited.\n\nThe \'routingKeyInPayload\' and \'deliveryKeyInPayload\' options determine\nif the reception process will inject the routingKey and deliveryKey,\nrespectively, into the JSON payload received.  These default to unset\nthus adopting the parent connection\'s values (which default to false).\nSetting these to true provide backward compability for older\napplications.\n\nThe \'exclusive\' option will subscribe to the queue in exclusive mode. Only one\nsubscriber is allowed at a time, and subsequent attempts to subscribe to the\nsame queue will result in an exception. This option differes from the exclusive\noption passed when creating in a queue in that the queue itself is not exclusive,\nonly the consumers. This means that long lived durable queues can be used\nas exclusive queues.\n\nThis method will emit `\'basicQosOk\'` when ready.\n\n\n### queue.subscribeRaw([options,] listener)\n\nSubscribes to a queue. The `listener` argument should be a function which\nreceives a message. This is a low-level interface - the message that the\nlistener receives will be a stream of binary data. You probably want to use\n`subscribe` instead. For now this low-level interface is left undocumented.\nLook at the source code if you need to do this.\n\nThis method will emit `\'basicConsumeOk\'` when ready.\n\n### queue.unsubscribe(consumerTag)\n\nUnsubscribe from a queue, given the consumer tag. The consumer tag is\nsupplied to the *promise callback* of `Queue.subscribeRaw` or\n`Queue.subscribe`:\n\n```javascript\nconnection.queue(\'foo\', function(queue) {\n  var ctag;\n  queue.subscribe(function(msg) {...})\n    .addCallback(function(ok) { ctag = ok.consumerTag; });\n  // ... and in some other callback\n  queue.unsubscribe(ctag);\n});\n```\n\nNote that `Queue.unsubscribe` will not requeue messages that have not\nbeen acknowledged. You need to close the queue or connection for that\nto happen. You may also receive messages after calling `unsubscribe`;\nyou will **not** receive messages from the queue after the unsubscribe\npromise callback has been invoked, however.\n\n### queue.shift()\n\nFor use with `subscribe({ack: true}, fn)`. Acknowledges the last\nmessage.\n\n\n### queue.bind([exchange,] routing)\n\nThis method binds a queue to an exchange.  Until a queue is\nbound it will not receive any messages, unless they are sent through\nthe unnamed exchange (see `defaultExchangeName` above).\n\nIf the `exchange` argument is left out `\'amq.topic\'` will be used.\n\nThis method will emit `\'queueBindOk\'` when complete.\n\n\n### queue.unbind([exchange,] routing)\n\nThis method unbinds a queue from an exchange.\n\nIf the exchange argument is left out `\'amq.topic\'` will be used.\n\nThs method will emit `\'queueUnbindOk\'` when complete.\n\n\n### queue.bind_headers([exchange,] routing)\n\nThis method binds a queue to an exchange.  Until a queue is\nbound it will not receive any messages.\n\nThis method is to be used on an "headers"-type exchange. The routing\nargument must contain the routing keys and the `x-match` value (`all` or `any`).\n\nIf the `exchange` argument is left out `\'amq.headers\'` will be used.\n\n### queue.destroy(options)\n\nDelete the queue. Without options, the queue will be deleted even if it has\npending messages or attached consumers. If +options.ifUnused+ is true, then\nthe queue will only be deleted if there are no consumers. If\n+options.ifEmpty+ is true, the queue will only be deleted if it has no\nmessages.\n\n\n\n\n## Exchange\n\nEvents: An exchange will call the callback given to the `connection.exchange()`\nmethod once it is usable. For example:\n\n```javascript\nvar exc = connection.exchange(\'my-exchange\', function (exchange) {\n  console.log(\'Exchange \' + exchange.name + \' is open\');\n});\n```\n\n### exchange.on(\'open\', callback)\n\nThe open event is emitted when the exchange is declared and ready to\nbe used. This interface is considered deprecated.\n\n\n### connection.exchange()\n### connection.exchange(name, options={}, openCallback)\n\nAn exchange can be created using `connection.exchange()`. The method returns\nan `amqp.Exchange` object.\n\nWithout any arguments, this method returns the default exchange.\nOtherwise a string, `name`, is given as the first argument and an `options`\nobject for the second. The options are\n\n- `type`: the type of exchange `\'direct\'`, `\'fanout\'`, or `\'topic\'` (default).\n- `passive`: boolean, default false.\n    If set, the server will not create the exchange.  The client can use\n    this to check whether an exchange exists without modifying the server\n    state.\n- `durable`: boolean, default false.\n    If set when creating a new exchange, the exchange will be marked as\n    durable.  Durable exchanges remain active when a server restarts.\n    Non-durable exchanges (transient exchanges) are purged if/when a\n    server restarts.\n- `confirm`: boolean, default false.\n    If set when connecting to a exchange the channel will send acks \n    for publishes. Published tasks will emit \'ack\' when it is acked.\n- `autoDelete`: boolean, default true.\n    If set, the exchange is deleted when there are no longer queues\n    bound to it.\n- `noDeclare`: boolean, default false.\n    If set, the exchange will not be declared, this will allow the exchange\n    to be deleted if you dont know its previous options.\n- `confirm`: boolean, default false.\n    If set, the exchange will be in confirm mode, and you will get a \n    \'ack\'|\'error\' event emitted on a publish, or the callback on the publish\n    will be called.\n\nAn exchange will emit the `\'open\'` event when it is finally declared.\n\n\n### exchange.publish(routingKey, message, options, callback)\n\nPublishes a message to the exchange. The `routingKey` argument is a string\nwhich helps routing in `topic` and `direct` exchanges. The `message` can be\neither a Buffer or Object. A Buffer is used for sending raw bytes; an Object\nis converted to JSON.\n\n`options` is an object with any of the following\n\n- `mandatory`: boolean, default false.\n    This flag tells the server how to react if the message cannot be\n    routed to a queue.  If this flag is set, the server will return an\n    unroutable message with a Return method.  If this flag is false, the\n    server silently drops the message.\n- `immediate`: boolean, default false.\n    This flag tells the server how to react if the message cannot be\n    routed to a queue consumer immediately.  If this flag is set, the\n    server will return an undeliverable message with a Return method.\n    If this flag is false, the server will queue the message, but with\n    no guarantee that it will ever be consumed.\n- `contentType`: default `\'application/octet-stream\'`\n- `contentEncoding`: default null.\n- `headers`: default `{}`. Arbitrary application-specific message headers.\n- `deliveryMode`: Non-persistent (1) or persistent (2)\n- `priority`: The message priority, 0 to 9.\n- `replyTo`: Usually used to name a reply queue for a request message.\n\n`callback` is a function that will get called if the exchange is in confirm mode,\nthe value sent will be true or false, this is the presense of a error so true, means\nan error occured and false, means the publish was successfull\n\n### exchange.destroy(ifUnused = true)\n\nDeletes an exchange.\nIf the optional boolean second argument is set, the server will only\ndelete the exchange if it has no queue bindings. If the exchange has queue\nbindings the server does not delete it but raises a channel exception\ninstead.\n\n### exchange.bind(srcExchange, routingKey [, callback])\n\nBinds the exchange (destination) to the given source exchange (srcExchange). \nWhen one exchange is bound to another, the destination (or receiving) exchange \nwill receive all messages published to the source exchange that match the \ngiven routingKey. \n\nThis method will emit `\'exchangeBindOk\'` when complete.\n\nPlease note that Exchange to Exchange Bindings (E2E) are an extension to the \nAMQP spec introduced by RabbitMQ, and that by using this feature, you will be \nreliant on RabbitMQ\'s AMQP implementation. For more information on E2E \nBindings with RabbitMQ see:\n\nhttp://www.rabbitmq.com/e2e.html\n\n### exchange.unbind(srcExchange, routingKey [, callback])\n\nUnbinds the exchange (destination) from the given source exchange (srcExchange). \nThis is the reverse of the exchange.bind method above, and will stop messages \nfrom srcExchange/routingKey from being sent to the destination exchange. \n\nThis method will emit `\'exchangeUnbindOk\'` when complete.\n',
1574 silly resolved     readmeFilename: 'README.md',
1574 silly resolved     _id: 'amqp@0.1.6',
1574 silly resolved     _from: 'amqp@0.1.6' },
1574 silly resolved   { name: 'async',
1574 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1574 silly resolved     main: './lib/async',
1574 silly resolved     author: { name: 'Caolan McMahon' },
1574 silly resolved     version: '0.2.7',
1574 silly resolved     repository: { type: 'git', url: 'http://github.com/caolan/async.git' },
1574 silly resolved     bugs: { url: 'http://github.com/caolan/async/issues' },
1574 silly resolved     licenses: [ [Object] ],
1574 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1574 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
1574 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
1574 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser.\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\');\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1574 silly resolved     readmeFilename: 'README.md',
1574 silly resolved     _id: 'async@0.2.7',
1574 silly resolved     _from: 'async@0.2.7' },
1574 silly resolved   { name: 'rc',
1574 silly resolved     version: '0.1.1',
1574 silly resolved     description: 'hardwired configuration loader',
1574 silly resolved     main: 'index.js',
1574 silly resolved     browserify: 'browser.js',
1574 silly resolved     scripts: { test: 'set -e; node test/test.js; node test/ini.js' },
1574 silly resolved     repository: { type: 'git', url: 'https://github.com/dominictarr/rc.git' },
1574 silly resolved     keywords: [ 'config', 'rc', 'unix', 'defaults' ],
1574 silly resolved     bin: { rc: './index.js' },
1574 silly resolved     author:
1574 silly resolved      { name: 'Dominic Tarr',
1574 silly resolved        email: 'dominic.tarr@gmail.com',
1574 silly resolved        url: 'dominictarr.com' },
1574 silly resolved     license: 'BSD',
1574 silly resolved     dependencies: { optimist: '~0.3.4', 'deep-extend': '~0.2.5', ini: '~1.1.0' },
1574 silly resolved     readme: '# rc\n\nthe non configurable configuration loader for lazy people.\n\n# Usage\n\nthe only option is to pass rc the name of your app, and your default configuration.\n\n```\n  var rc = require(\'rc\')(appname, {\n    //defaults go here.\n    port: 2468\n  })\n```\n\n# Standards\n\nGiven your application name, rc will look in all the obvious places for configuration.\n\n\n  * command line arguments (parsed by optimist)\n  * enviroment variables prefixed with ${APPNAME}_\n  * if you passed an option `--config file` then from that file\n  * `$HOME/.${APPNAME}rc`\n  * `$HOME/.${APPNAME}/config`\n  * `$HOME/.config/${APPNAME}`\n  * `$HOME/.config/${APPNAME}/config`\n  * `/etc/${APPNAME}rc`\n  * `/etc/${APPNAME}/config`\n  * the defaults object you passed in.\n\nAll configuration sources that where found will be flattened into one object,\nso that sources earlier in this list override later ones.\n\n# Formats\n\nConfiguration files may be in either `json` or `ini` format.\nSince ini, and env variables do not have a standard for types,\nyour application needs be prepared for strings.\n\n# License\n\nBSD\n',
1574 silly resolved     readmeFilename: 'README.md',
1574 silly resolved     bugs: { url: 'https://github.com/dominictarr/rc/issues' },
1574 silly resolved     _id: 'rc@0.1.1',
1574 silly resolved     _from: 'rc@0.1.1' } ]
1575 info install amqp@0.1.6 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
1576 info install async@0.2.7 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
1577 info install rc@0.1.1 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
1578 info installOne amqp@0.1.6
1579 warn engine amqp@0.1.6: wanted: {"node":"0.4 || 0.5 || 0.6 || 0.8"} (current: {"node":"v0.10.11","npm":"1.2.30"})
1580 info installOne async@0.2.7
1581 info installOne rc@0.1.1
1582 silly addNameRange number 2 { name: 'pkginfo', range: '>=0.2.0- <0.3.0-', hasData: true }
1583 silly addNameRange versions [ 'pkginfo', [ '0.2.1', '0.2.2', '0.2.3', '0.3.0' ] ]
1584 verbose addNamed [ 'pkginfo', '0.2.3' ]
1585 verbose addNamed [ '0.2.3', '0.2.3' ]
1586 silly lockFile d1747791-pkginfo-0-2-3 pkginfo@0.2.3
1587 verbose lock pkginfo@0.2.3 /Users/bmackey/.npm/d1747791-pkginfo-0-2-3.lock
1588 verbose from cache /Users/bmackey/.npm/amqp/0.1.6/package/package.json
1589 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/amqp unbuild
1590 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/amqp/package.json
1591 verbose from cache /Users/bmackey/.npm/async/0.2.7/package/package.json
1592 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async unbuild
1593 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async/package.json
1594 verbose from cache /Users/bmackey/.npm/rc/0.1.1/package/package.json
1595 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc unbuild
1596 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/package.json
1597 info postinstall async@0.1.16
1598 verbose read json /Users/bmackey/.npm/pkginfo/0.2.3/package/package.json
1599 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
1600 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
1601 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/package.json
1602 verbose linkStuff [ false,
1602 verbose linkStuff   false,
1602 verbose linkStuff   false,
1602 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules' ]
1603 info linkStuff fh-reportingclient@0.2.2
1604 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1605 verbose linkBins fh-reportingclient@0.2.2
1606 verbose linkMans fh-reportingclient@0.2.2
1607 verbose rebuildBundles fh-reportingclient@0.2.2
1608 verbose tar unpack /Users/bmackey/.npm/amqp/0.1.6/package.tgz
1609 silly lockFile 28f248f1-les-fh-amqp-js-node-modules-amqp tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/amqp
1610 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/amqp /Users/bmackey/.npm/28f248f1-les-fh-amqp-js-node-modules-amqp.lock
1611 silly lockFile 8df91b3b-ackey-npm-amqp-0-1-6-package-tgz tar:///Users/bmackey/.npm/amqp/0.1.6/package.tgz
1612 verbose lock tar:///Users/bmackey/.npm/amqp/0.1.6/package.tgz /Users/bmackey/.npm/8df91b3b-ackey-npm-amqp-0-1-6-package-tgz.lock
1613 verbose tar unpack /Users/bmackey/.npm/async/0.2.7/package.tgz
1614 silly lockFile 3a8a4c7f-es-fh-amqp-js-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async
1615 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async /Users/bmackey/.npm/3a8a4c7f-es-fh-amqp-js-node-modules-async.lock
1616 silly lockFile 4a504c44-ckey-npm-async-0-2-7-package-tgz tar:///Users/bmackey/.npm/async/0.2.7/package.tgz
1617 verbose lock tar:///Users/bmackey/.npm/async/0.2.7/package.tgz /Users/bmackey/.npm/4a504c44-ckey-npm-async-0-2-7-package-tgz.lock
1618 verbose tar unpack /Users/bmackey/.npm/rc/0.1.1/package.tgz
1619 silly lockFile 7a30ad2d-dules-fh-amqp-js-node-modules-rc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
1620 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc /Users/bmackey/.npm/7a30ad2d-dules-fh-amqp-js-node-modules-rc.lock
1621 silly lockFile 363610a9-bmackey-npm-rc-0-1-1-package-tgz tar:///Users/bmackey/.npm/rc/0.1.1/package.tgz
1622 verbose lock tar:///Users/bmackey/.npm/rc/0.1.1/package.tgz /Users/bmackey/.npm/363610a9-bmackey-npm-rc-0-1-1-package-tgz.lock
1623 verbose rebuildBundles [ 'async', 'request' ]
1624 info install fh-reportingclient@0.2.2
1625 silly gunzTarPerm modes [ '755', '644' ]
1626 silly gunzTarPerm modes [ '755', '644' ]
1627 silly gunzTarPerm modes [ '755', '644' ]
1628 info postinstall fh-reportingclient@0.2.2
1629 silly gunzTarPerm extractEntry package.json
1630 http 304 https://registry.npmjs.org/request
1631 silly registry.get cb [ 304,
1631 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1631 silly registry.get     server: 'Apache',
1631 silly registry.get     via: '1.1 varnish',
1631 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1631 silly registry.get     'cache-control': 'max-age=1',
1631 silly registry.get     etag: '"89MD75XPJGDD17MUWKOABKTUQ"',
1631 silly registry.get     'x-served-by': 'cache-lcy1123-LCY',
1631 silly registry.get     'x-cache': 'HIT',
1631 silly registry.get     'x-cache-hits': '1',
1631 silly registry.get     'x-timer': 'S1394633875.969769239,VS0,VE1',
1631 silly registry.get     vary: 'Accept',
1631 silly registry.get     'content-length': '0',
1631 silly registry.get     'keep-alive': 'timeout=10, max=48',
1631 silly registry.get     connection: 'Keep-Alive' } ]
1632 verbose etag request from cache
1633 silly gunzTarPerm extractEntry package.json
1634 silly gunzTarPerm extractEntry package.json
1635 silly lockFile d1747791-pkginfo-0-2-3 pkginfo@0.2.3
1636 silly lockFile d1747791-pkginfo-0-2-3 pkginfo@0.2.3
1637 http 304 https://registry.npmjs.org/cycle
1638 silly registry.get cb [ 304,
1638 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1638 silly registry.get     server: 'Apache',
1638 silly registry.get     via: '1.1 varnish',
1638 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1638 silly registry.get     'cache-control': 'max-age=1',
1638 silly registry.get     etag: '"2OMPFXOOMO3OWILJYYFHNDR74"',
1638 silly registry.get     'x-served-by': 'cache-lcy1133-LCY',
1638 silly registry.get     'x-cache': 'HIT',
1638 silly registry.get     'x-cache-hits': '1',
1638 silly registry.get     'x-timer': 'S1394633875.869775295,VS0,VE101',
1638 silly registry.get     vary: 'Accept',
1638 silly registry.get     'content-length': '0',
1638 silly registry.get     'keep-alive': 'timeout=10, max=48',
1638 silly registry.get     connection: 'Keep-Alive' } ]
1639 verbose etag cycle from cache
1640 silly lockFile f898f07d-pkginfo-0-2-x pkginfo@0.2.x
1641 silly lockFile f898f07d-pkginfo-0-2-x pkginfo@0.2.x
1642 http 304 https://registry.npmjs.org/eyes
1643 silly registry.get cb [ 304,
1643 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:55 GMT',
1643 silly registry.get     server: 'Apache',
1643 silly registry.get     via: '1.1 varnish',
1643 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1643 silly registry.get     'cache-control': 'max-age=1',
1643 silly registry.get     etag: '"AQUUYRDPTBNAGAW2MX64V8ZCA"',
1643 silly registry.get     'x-served-by': 'cache-lcy1135-LCY',
1643 silly registry.get     'x-cache': 'HIT',
1643 silly registry.get     'x-cache-hits': '1',
1643 silly registry.get     'x-timer': 'S1394633875.909864902,VS0,VE76',
1643 silly registry.get     vary: 'Accept',
1643 silly registry.get     'content-length': '0',
1643 silly registry.get     'keep-alive': 'timeout=10, max=48',
1643 silly registry.get     connection: 'Keep-Alive' } ]
1644 verbose etag eyes from cache
1645 silly gunzTarPerm extractEntry .npmignore
1646 silly gunzTarPerm extractEntry README.md
1647 silly gunzTarPerm extractEntry README.md
1648 silly gunzTarPerm extractEntry LICENSE
1649 silly gunzTarPerm extractEntry lib/async.js
1650 silly gunzTarPerm extractEntry .npmignore
1651 silly gunzTarPerm extractEntry README.md
1652 silly addNameRange number 2 { name: 'request', range: '>=2.9.0- <2.10.0-', hasData: true }
1653 silly addNameRange versions [ 'request',
1653 silly addNameRange   [ '0.10.0',
1653 silly addNameRange     '0.8.3',
1653 silly addNameRange     '0.9.0',
1653 silly addNameRange     '0.9.1',
1653 silly addNameRange     '0.9.5',
1653 silly addNameRange     '1.0.0',
1653 silly addNameRange     '1.1.0',
1653 silly addNameRange     '1.1.1',
1653 silly addNameRange     '1.2.0',
1653 silly addNameRange     '1.9.0',
1653 silly addNameRange     '1.9.1',
1653 silly addNameRange     '1.9.2',
1653 silly addNameRange     '1.9.3',
1653 silly addNameRange     '1.9.5',
1653 silly addNameRange     '1.9.7',
1653 silly addNameRange     '1.9.8',
1653 silly addNameRange     '1.9.9',
1653 silly addNameRange     '2.0.0',
1653 silly addNameRange     '2.0.1',
1653 silly addNameRange     '2.0.2',
1653 silly addNameRange     '2.0.3',
1653 silly addNameRange     '2.0.4',
1653 silly addNameRange     '2.0.5',
1653 silly addNameRange     '2.1.0',
1653 silly addNameRange     '2.1.1',
1653 silly addNameRange     '2.2.0',
1653 silly addNameRange     '2.2.5',
1653 silly addNameRange     '2.2.6',
1653 silly addNameRange     '2.2.9',
1653 silly addNameRange     '2.9.0',
1653 silly addNameRange     '2.9.1',
1653 silly addNameRange     '2.9.2',
1653 silly addNameRange     '2.9.3',
1653 silly addNameRange     '2.9.100',
1653 silly addNameRange     '2.9.150',
1653 silly addNameRange     '2.9.151',
1653 silly addNameRange     '2.9.152',
1653 silly addNameRange     '2.9.153',
1653 silly addNameRange     '2.9.200',
1653 silly addNameRange     '2.9.201',
1653 silly addNameRange     '2.9.202',
1653 silly addNameRange     '2.9.203',
1653 silly addNameRange     '2.10.0',
1653 silly addNameRange     '2.11.0',
1653 silly addNameRange     '2.11.1',
1653 silly addNameRange     '2.11.2',
1653 silly addNameRange     '2.11.3',
1653 silly addNameRange     '2.11.4',
1653 silly addNameRange     '2.12.0',
1653 silly addNameRange     '2.14.0',
1653 silly addNameRange     '2.16.0',
1653 silly addNameRange     '2.16.2',
1653 silly addNameRange     '2.16.4',
1653 silly addNameRange     '2.16.6',
1653 silly addNameRange     '2.18.0',
1653 silly addNameRange     '2.19.0',
1653 silly addNameRange     '2.20.0',
1653 silly addNameRange     '2.21.0',
1653 silly addNameRange     '2.22.0',
1653 silly addNameRange     '2.23.0',
1653 silly addNameRange     '2.24.0',
1653 silly addNameRange     '2.25.0',
1653 silly addNameRange     '2.26.0',
1653 silly addNameRange     '2.27.0',
1653 silly addNameRange     '2.28.0',
1653 silly addNameRange     '2.29.0',
1653 silly addNameRange     '2.30.0',
1653 silly addNameRange     '2.31.0',
1653 silly addNameRange     '2.32.0',
1653 silly addNameRange     '2.33.0',
1653 silly addNameRange     '2.34.0' ] ]
1654 verbose addNamed [ 'request', '2.9.203' ]
1655 verbose addNamed [ '2.9.203', '2.9.203' ]
1656 silly lockFile 3887d89d-request-2-9-203 request@2.9.203
1657 verbose lock request@2.9.203 /Users/bmackey/.npm/3887d89d-request-2-9-203.lock
1658 silly addNameRange number 2 { name: 'cycle', range: '>=1.0.0- <1.1.0-', hasData: true }
1659 silly addNameRange versions [ 'cycle', [ '1.0.0', '1.0.1', '1.0.2', '1.0.3' ] ]
1660 verbose addNamed [ 'cycle', '1.0.3' ]
1661 verbose addNamed [ '1.0.3', '1.0.3' ]
1662 silly lockFile 3f71f1b0-cycle-1-0-3 cycle@1.0.3
1663 verbose lock cycle@1.0.3 /Users/bmackey/.npm/3f71f1b0-cycle-1-0-3.lock
1664 verbose read json /Users/bmackey/.npm/request/2.9.203/package/package.json
1665 silly addNameRange number 2 { name: 'eyes', range: '>=0.1.0- <0.2.0-', hasData: true }
1666 silly addNameRange versions [ 'eyes',
1666 silly addNameRange   [ '0.1.1',
1666 silly addNameRange     '0.1.2',
1666 silly addNameRange     '0.1.3',
1666 silly addNameRange     '0.1.4',
1666 silly addNameRange     '0.1.5',
1666 silly addNameRange     '0.1.6',
1666 silly addNameRange     '0.1.7',
1666 silly addNameRange     '0.1.8' ] ]
1667 verbose addNamed [ 'eyes', '0.1.8' ]
1668 verbose addNamed [ '0.1.8', '0.1.8' ]
1669 silly lockFile 8939281b-eyes-0-1-8 eyes@0.1.8
1670 verbose lock eyes@0.1.8 /Users/bmackey/.npm/8939281b-eyes-0-1-8.lock
1671 verbose read json /Users/bmackey/.npm/cycle/1.0.3/package/package.json
1672 verbose read json /Users/bmackey/.npm/eyes/0.1.8/package/package.json
1673 http 304 https://registry.npmjs.org/stack-trace
1674 silly registry.get cb [ 304,
1674 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:56 GMT',
1674 silly registry.get     server: 'Apache',
1674 silly registry.get     via: '1.1 varnish',
1674 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:56 GMT',
1674 silly registry.get     'cache-control': 'max-age=1',
1674 silly registry.get     etag: '"12C68OCWDIHI5CY6ZKGJ507UC"',
1674 silly registry.get     'x-served-by': 'cache-lcy1121-LCY',
1674 silly registry.get     'x-cache': 'HIT',
1674 silly registry.get     'x-cache-hits': '1',
1674 silly registry.get     'x-timer': 'S1394633876.015689850,VS0,VE85',
1674 silly registry.get     vary: 'Accept',
1674 silly registry.get     'content-length': '0',
1674 silly registry.get     'keep-alive': 'timeout=10, max=48',
1674 silly registry.get     connection: 'Keep-Alive' } ]
1675 verbose etag stack-trace from cache
1676 http 304 https://registry.npmjs.org/formidable/1.0.11
1677 silly registry.get cb [ 304,
1677 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:56 GMT',
1677 silly registry.get     server: 'Apache',
1677 silly registry.get     via: '1.1 varnish',
1677 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:56 GMT',
1677 silly registry.get     'cache-control': 'max-age=1',
1677 silly registry.get     etag: '"4Z95A5U1N2RO98XWP4STDDCN6"',
1677 silly registry.get     'x-served-by': 'cache-lcy1134-LCY',
1677 silly registry.get     'x-cache': 'HIT',
1677 silly registry.get     'x-cache-hits': '1',
1677 silly registry.get     'x-timer': 'S1394633876.046199799,VS0,VE103',
1677 silly registry.get     vary: 'Accept',
1677 silly registry.get     'content-length': '0',
1677 silly registry.get     'keep-alive': 'timeout=10, max=48',
1677 silly registry.get     connection: 'Keep-Alive' } ]
1678 verbose etag formidable/1.0.11 from cache
1679 http 304 https://registry.npmjs.org/qs
1680 silly registry.get cb [ 304,
1680 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:56 GMT',
1680 silly registry.get     server: 'Apache',
1680 silly registry.get     via: '1.1 varnish',
1680 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:56 GMT',
1680 silly registry.get     'cache-control': 'max-age=1',
1680 silly registry.get     etag: '"8YIPDUWWPI8WEBPZIRLS8IOWL"',
1680 silly registry.get     'x-served-by': 'cache-lcy1123-LCY',
1680 silly registry.get     'x-cache': 'HIT',
1680 silly registry.get     'x-cache-hits': '1',
1680 silly registry.get     'x-timer': 'S1394633876.095906019,VS0,VE76',
1680 silly registry.get     vary: 'Accept',
1680 silly registry.get     'content-length': '0',
1680 silly registry.get     'keep-alive': 'timeout=10, max=47',
1680 silly registry.get     connection: 'Keep-Alive' } ]
1681 verbose etag qs from cache
1682 silly gunzTarPerm extractEntry browser.js
1683 silly gunzTarPerm extractEntry index.js
1684 silly gunzTarPerm extractEntry promise.js
1685 silly lockFile 3887d89d-request-2-9-203 request@2.9.203
1686 silly lockFile 3887d89d-request-2-9-203 request@2.9.203
1687 silly lockFile 0258777d-request-2-9-x request@2.9.x
1688 silly lockFile 0258777d-request-2-9-x request@2.9.x
1689 silly addNameRange number 2 { name: 'stack-trace', range: '>=0.0.0- <0.1.0-', hasData: true }
1690 silly addNameRange versions [ 'stack-trace',
1690 silly addNameRange   [ '0.0.1',
1690 silly addNameRange     '0.0.2',
1690 silly addNameRange     '0.0.3',
1690 silly addNameRange     '0.0.4',
1690 silly addNameRange     '0.0.5',
1690 silly addNameRange     '0.0.6',
1690 silly addNameRange     '0.0.7',
1690 silly addNameRange     '0.0.8',
1690 silly addNameRange     '0.0.9' ] ]
1691 verbose addNamed [ 'stack-trace', '0.0.9' ]
1692 verbose addNamed [ '0.0.9', '0.0.9' ]
1693 silly lockFile 19cb3f18-stack-trace-0-0-9 stack-trace@0.0.9
1694 verbose lock stack-trace@0.0.9 /Users/bmackey/.npm/19cb3f18-stack-trace-0-0-9.lock
1695 silly lockFile 3f71f1b0-cycle-1-0-3 cycle@1.0.3
1696 silly lockFile 3f71f1b0-cycle-1-0-3 cycle@1.0.3
1697 silly addNameRange number 2 { name: 'qs', range: '>=0.4.0', hasData: true }
1698 silly addNameRange versions [ 'qs',
1698 silly addNameRange   [ '0.0.1',
1698 silly addNameRange     '0.0.2',
1698 silly addNameRange     '0.0.3',
1698 silly addNameRange     '0.0.4',
1698 silly addNameRange     '0.0.5',
1698 silly addNameRange     '0.0.6',
1698 silly addNameRange     '0.0.7',
1698 silly addNameRange     '0.1.0',
1698 silly addNameRange     '0.2.0',
1698 silly addNameRange     '0.3.0',
1698 silly addNameRange     '0.3.1',
1698 silly addNameRange     '0.3.2',
1698 silly addNameRange     '0.4.0',
1698 silly addNameRange     '0.4.1',
1698 silly addNameRange     '0.4.2',
1698 silly addNameRange     '0.5.0',
1698 silly addNameRange     '0.5.1',
1698 silly addNameRange     '0.5.2',
1698 silly addNameRange     '0.5.3',
1698 silly addNameRange     '0.5.4',
1698 silly addNameRange     '0.5.5',
1698 silly addNameRange     '0.5.6',
1698 silly addNameRange     '0.6.0',
1698 silly addNameRange     '0.6.1',
1698 silly addNameRange     '0.6.2',
1698 silly addNameRange     '0.6.3',
1698 silly addNameRange     '0.6.4',
1698 silly addNameRange     '0.6.5',
1698 silly addNameRange     '0.6.6' ] ]
1699 verbose addNamed [ 'qs', '0.6.6' ]
1700 verbose addNamed [ '0.6.6', '0.6.6' ]
1701 silly lockFile b8bccda2-qs-0-6-6 qs@0.6.6
1702 verbose lock qs@0.6.6 /Users/bmackey/.npm/b8bccda2-qs-0-6-6.lock
1703 warn package.json eyes@0.1.8 No repository field.
1704 silly lockFile 8939281b-eyes-0-1-8 eyes@0.1.8
1705 silly lockFile 8939281b-eyes-0-1-8 eyes@0.1.8
1706 verbose read json /Users/bmackey/.npm/formidable/1.0.11/package/package.json
1707 silly gunzTarPerm extractEntry lib/utils.js
1708 silly gunzTarPerm extractEntry test/ini.js
1709 verbose read json /Users/bmackey/.npm/stack-trace/0.0.9/package/package.json
1710 silly gunzTarPerm extractEntry jspack.js
1711 silly gunzTarPerm extractEntry constants.js
1712 silly lockFile dfb63733-cycle-1-0-x cycle@1.0.x
1713 silly lockFile dfb63733-cycle-1-0-x cycle@1.0.x
1714 verbose read json /Users/bmackey/.npm/qs/0.6.6/package/package.json
1715 silly lockFile 81039dce-eyes-0-1-x eyes@0.1.x
1716 silly lockFile 81039dce-eyes-0-1-x eyes@0.1.x
1717 silly gunzTarPerm extractEntry lang/pt-br.js
1718 silly gunzTarPerm extractEntry lang/et.js
1719 warn package.json formidable@1.0.11 No repository field.
1720 silly lockFile 85cafced-formidable-1-0-11 formidable@1.0.11
1721 silly lockFile 85cafced-formidable-1-0-11 formidable@1.0.11
1722 silly gunzTarPerm extractEntry test/test.js
1723 silly lockFile 19cb3f18-stack-trace-0-0-9 stack-trace@0.0.9
1724 silly lockFile 19cb3f18-stack-trace-0-0-9 stack-trace@0.0.9
1725 silly lockFile b8bccda2-qs-0-6-6 qs@0.6.6
1726 silly lockFile b8bccda2-qs-0-6-6 qs@0.6.6
1727 silly lockFile 00b1025d-stack-trace-0-0-x stack-trace@0.0.x
1728 silly lockFile 00b1025d-stack-trace-0-0-x stack-trace@0.0.x
1729 silly lockFile d8ffb163-qs-0-4-0 qs@>= 0.4.0
1730 silly lockFile d8ffb163-qs-0-4-0 qs@>= 0.4.0
1731 silly resolved [ { name: 'async',
1731 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1731 silly resolved     main: './index',
1731 silly resolved     author: { name: 'Caolan McMahon' },
1731 silly resolved     version: '0.1.22',
1731 silly resolved     repository: { type: 'git', url: 'http://github.com/caolan/async.git' },
1731 silly resolved     bugs: { url: 'http://github.com/caolan/async/issues' },
1731 silly resolved     licenses: [ [Object] ],
1731 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1731 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser.\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, forEach…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n    async.parallel([\n        function(){ ... },\n        function(){ ... }\n    ], callback);\n\n    async.series([\n        function(){ ... },\n        function(){ ... }\n    ]);\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n\n## Download\n\nReleases are available for download from\n[GitHub](http://github.com/caolan/async/downloads).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 17.5kb Uncompressed\n\n__Production:__ [async.min.js](https://github.com/caolan/async/raw/master/dist/async.min.js) - 1.7kb Packed and Gzipped\n\n\n## In the Browser\n\nSo far its been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n    <script type="text/javascript" src="async.js"></script>\n    <script type="text/javascript">\n\n        async.map(data, asyncProcess, function(err, results){\n            alert(results);\n        });\n\n    </script>\n\n\n## Documentation\n\n### Collections\n\n* [forEach](#forEach)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [until](#until)\n* [waterfall](#waterfall)\n* [queue](#queue)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n### forEach(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the forEach function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // assuming openFiles is an array of file names and saveFile is a function\n    // to save the modified contents of that file:\n\n    async.forEach(openFiles, saveFile, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n\n---------------------------------------\n\n<a name="forEachSeries" />\n### forEachSeries(arr, iterator, callback)\n\nThe same as forEach only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n### forEachLimit(arr, limit, iterator, callback)\n\nThe same as forEach only the iterator is applied to batches of items in the\narray, in series. The next batch of iterators is only called once the current\none has completed processing.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - How many items should be in each batch.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // Assume documents is an array of JSON objects and requestApi is a\n    // function that interacts with a rate-limited REST api.\n\n    async.forEachLimit(documents, 20, requestApi, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as filter, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then its probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback which accepts an optional error as its first argument, and the state\n  of the reduction as the second. If an error is passed to the callback, the\n  reduction is stopped and the main callback is immediately called with the\n  error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n    async.reduce([1,2,3], 0, function(memo, item, callback){\n        // pointless async:\n        process.nextTick(function(){\n            callback(null, memo + item)\n        });\n    }, function(err, result){\n        // result is now equal to the last value of memo, which is 6\n    });\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n    async.detect([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // result now equals the first file in the list that exists\n    });\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a value to use as the sort criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n    async.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n        fs.stat(file, function(err, stats){\n            callback(err, stats.mtime);\n        });\n    }, function(err, results){\n        // results is now the original array of files sorted by\n        // modified date\n    });\n\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n    async.some([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then at least one of the files exists\n    });\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n    async.every([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then every file exists\n    });\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n    async.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n        // files is now a list of filenames that exist in the 3 directories\n    });\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.series([\n        function(callback){\n            // do some stuff ...\n            callback(null, \'one\');\n        },\n        function(callback){\n            // do some more stuff ...\n            callback(null, \'two\');\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // results is now equal to [\'one\', \'two\']\n    });\n\n\n    // an example using an object instead of an array\n    async.series({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equal to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed a\n  callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.parallel([\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'one\');\n            }, 200);\n        },\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'two\');\n            }, 100);\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // the results array will equal [\'one\',\'two\'] even though\n        // the second function had a shorter timeout.\n    });\n\n\n    // an example using an object instead of an array\n    async.parallel({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equals to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback which must be called once it has completed with an optional\n  error as the first argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n    var count = 0;\n\n    async.whilst(\n        function () { return count < 5; },\n        function (callback) {\n            count++;\n            setTimeout(callback, 1000);\n        },\n        function (err) {\n            // 5 seconds have passed\n        }\n    );\n\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n    async.waterfall([\n        function(callback){\n            callback(null, \'one\', \'two\');\n        },\n        function(arg1, arg2, callback){\n            callback(null, \'three\');\n        },\n        function(arg1, callback){\n            // arg1 now equals \'three\'\n            callback(null, \'done\');\n        }\n    ], function (err, result) {\n       // result now equals \'done\'    \n    });\n\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n    // create a queue object with concurrency 2\n\n    var q = async.queue(function (task, callback) {\n        console.log(\'hello \' + task.name);\n        callback();\n    }, 2);\n\n\n    // assign a callback\n    q.drain = function() {\n        console.log(\'all items have been processed\');\n    }\n\n    // add some items to the queue\n\n    q.push({name: \'foo\'}, function (err) {\n        console.log(\'finished processing foo\');\n    });\n    q.push({name: \'bar\'}, function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n    // add some items to the queue (batch-wise)\n\n    q.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The\n  syntax is easier to understand by looking at the example.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. If all tasks complete\n  successfully, it will receive an object containing their results.\n\n__Example__\n\n    async.auto({\n        get_data: function(callback){\n            // async code to get some data\n        },\n        make_folder: function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        },\n        write_file: [\'get_data\', \'make_folder\', function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n            callback(null, filename);\n        }],\n        email_link: [\'write_file\', function(callback, results){\n            // once the file is written let\'s email a link to it...\n            // results.write_file contains the filename returned by write_file.\n        }]\n    });\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n    async.parallel([\n        function(callback){\n            // async code to get some data\n        },\n        function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        }\n    ],\n    function(results){\n        async.series([\n            function(callback){\n                // once there is some data and the directory exists,\n                // write the data to a file in the directory\n            },\n            email_link: function(callback){\n                // once the file is written let\'s email a link to it...\n            }\n        ]);\n    });\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. Its also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n\n__Example__\n\n    var iterator = async.iterator([\n        function(){ sys.p(\'one\'); },\n        function(){ sys.p(\'two\'); },\n        function(){ sys.p(\'three\'); }\n    ]);\n\n    node> var iterator2 = iterator();\n    \'one\'\n    node> var iterator3 = iterator2();\n    \'two\'\n    node> iterator3();\n    \'three\'\n    node> var nextfn = iterator2.next();\n    node> nextfn();\n    \'three\'\n\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n    // using apply\n\n    async.parallel([\n        async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n        async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n    ]);\n\n\n    // the same process without using apply\n\n    async.parallel([\n        function(callback){\n            fs.writeFile(\'testfile1\', \'test1\', callback);\n        },\n        function(callback){\n            fs.writeFile(\'testfile2\', \'test2\', callback);\n        },\n    ]);\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n    node> var fn = async.apply(sys.puts, \'one\');\n    node> fn(\'two\', \'three\');\n    one\n    two\n    three\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setTimeout(callback, 0),\nwhich means other higher priority events may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n    var call_order = [];\n    async.nextTick(function(){\n        call_order.push(\'two\');\n        // call_order now equals [\'one\',\'two]\n    });\n    call_order.push(\'one\')\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n    var slow_fn = function (name, callback) {\n        // do something\n        callback(null, result);\n    };\n    var fn = async.memoize(slow_fn);\n\n    // fn can now be used as if it were slow_fn\n    fn(\'some name\', function () {\n        // callback\n    });\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, \'hello \' + name);\n        }, 1000);\n    };\n\n    node> async.log(hello, \'world\');\n    \'hello world\'\n\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, {hello: name});\n        }, 1000);\n    };\n\n    node> async.dir(hello, \'world\');\n    {hello: \'world\'}\n\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1731 silly resolved     readmeFilename: 'README.md',
1731 silly resolved     _id: 'async@0.1.22',
1731 silly resolved     _from: 'async@0.1.x' },
1731 silly resolved   { name: 'colors',
1731 silly resolved     description: 'get colors in your node.js console like what',
1731 silly resolved     version: '0.6.2',
1731 silly resolved     author: { name: 'Marak Squires' },
1731 silly resolved     homepage: 'https://github.com/Marak/colors.js',
1731 silly resolved     bugs: { url: 'https://github.com/Marak/colors.js/issues' },
1731 silly resolved     keywords: [ 'ansi', 'terminal', 'colors' ],
1731 silly resolved     repository: { type: 'git', url: 'http://github.com/Marak/colors.js.git' },
1731 silly resolved     engines: { node: '>=0.1.90' },
1731 silly resolved     main: 'colors',
1731 silly resolved     readme: '# colors.js - get color and style in your node.js console ( and browser ) like what\n\n<img src="http://i.imgur.com/goJdO.png" border = "0"/>\n\n\n## Installation\n\n    npm install colors\n\n## colors and styles!\n\n- bold\n- italic\n- underline\n- inverse\n- yellow\n- cyan\n- white\n- magenta\n- green\n- red\n- grey\n- blue\n- rainbow\n- zebra\n- random\n\n## Usage\n\n``` js\nvar colors = require(\'./colors\');\n\nconsole.log(\'hello\'.green); // outputs green text\nconsole.log(\'i like cake and pies\'.underline.red) // outputs red underlined text\nconsole.log(\'inverse the color\'.inverse); // inverses the color\nconsole.log(\'OMG Rainbows!\'.rainbow); // rainbow (ignores spaces)\n```\n\n# Creating Custom themes\n\n```js\n\nvar colors = require(\'colors\');\n\ncolors.setTheme({\n  silly: \'rainbow\',\n  input: \'grey\',\n  verbose: \'cyan\',\n  prompt: \'grey\',\n  info: \'green\',\n  data: \'grey\',\n  help: \'cyan\',\n  warn: \'yellow\',\n  debug: \'blue\',\n  error: \'red\'\n});\n\n// outputs red text\nconsole.log("this is an error".error);\n\n// outputs yellow text\nconsole.log("this is a warning".warn);\n```\n\n\n### Contributors \n\nMarak (Marak Squires)\nAlexis Sellier (cloudhead)\nmmalecki (Maciej Małecki)\nnicoreed (Nico Reed)\nmorganrallen (Morgan Allen)\nJustinCampbell (Justin Campbell)\nded (Dustin Diaz)\n\n\n####  , Marak Squires , Justin Campbell, Dustin Diaz (@ded)\n',
1731 silly resolved     readmeFilename: 'ReadMe.md',
1731 silly resolved     _id: 'colors@0.6.2',
1731 silly resolved     _from: 'colors@0.x.x' },
1731 silly resolved   { name: 'pkginfo',
1731 silly resolved     version: '0.2.3',
1731 silly resolved     description: 'An easy way to expose properties on a module from a package.json',
1731 silly resolved     author: { name: 'Charlie Robbins', email: 'charlie.robbins@gmail.com' },
1731 silly resolved     repository:
1731 silly resolved      { type: 'git',
1731 silly resolved        url: 'http://github.com/indexzero/node-pkginfo.git' },
1731 silly resolved     keywords: [ 'info', 'tools', 'package.json' ],
1731 silly resolved     devDependencies: { vows: '0.6.x' },
1731 silly resolved     main: './lib/pkginfo',
1731 silly resolved     scripts: { test: 'vows test/*-test.js --spec' },
1731 silly resolved     engines: { node: '>= 0.4.0' },
1731 silly resolved     readme: '# node-pkginfo\n\nAn easy way to expose properties on a module from a package.json\n\n## Installation\n\n### Installing npm (node package manager)\n```\n  curl http://npmjs.org/install.sh | sh\n```\n\n### Installing pkginfo\n```\n  [sudo] npm install pkginfo\n```\n\n## Motivation\nHow often when writing node.js modules have you written the following line(s) of code? \n\n* Hard code your version string into your code\n\n``` js\n  exports.version = \'0.1.0\';\n```\n\n* Programmatically expose the version from the package.json\n\n``` js\n  exports.version = JSON.parse(fs.readFileSync(\'/path/to/package.json\', \'utf8\')).version;\n```\n\nIn other words, how often have you wanted to expose basic information from your package.json onto your module programmatically? **WELL NOW YOU CAN!**\n\n## Usage\n\nUsing `pkginfo` is idiot-proof, just require and invoke it. \n\n``` js\n  var pkginfo = require(\'pkginfo\')(module);\n  \n  console.dir(module.exports);\n```\n\nBy invoking the `pkginfo` module all of the properties in your `package.json` file will be automatically exposed on the callee module (i.e. the parent module of `pkginfo`). \n\nHere\'s a sample of the output:\n\n```\n  { name: \'simple-app\',\n    description: \'A test fixture for pkginfo\',\n    version: \'0.1.0\',\n    author: \'Charlie Robbins <charlie.robbins@gmail.com>\',\n    keywords: [ \'test\', \'fixture\' ],\n    main: \'./index.js\',\n    scripts: { test: \'vows test/*-test.js --spec\' },\n    engines: { node: \'>= 0.4.0\' } }\n```\n\n### Expose specific properties\nIf you don\'t want to expose **all** properties on from your `package.json` on your module then simple pass those properties to the `pkginfo` function:\n\n``` js\n  var pkginfo = require(\'pkginfo\')(module, \'version\', \'author\');\n  \n  console.dir(module.exports);\n```\n\n```\n  { version: \'0.1.0\',\n    author: \'Charlie Robbins <charlie.robbins@gmail.com>\' }\n```\n\nIf you\'re looking for further usage see the [examples][0] included in this repository. \n\n## Run Tests\nTests are written in [vows][1] and give complete coverage of all APIs.\n\n```\n  vows test/*-test.js --spec\n```\n\n[0]: https://github.com/indexzero/node-pkginfo/tree/master/examples\n[1]: http://vowsjs.org\n\n#### Author: [Charlie Robbins](http://nodejitsu.com)',
1731 silly resolved     readmeFilename: 'README.md',
1731 silly resolved     bugs: { url: 'https://github.com/indexzero/node-pkginfo/issues' },
1731 silly resolved     _id: 'pkginfo@0.2.3',
1731 silly resolved     _from: 'pkginfo@0.2.x' },
1731 silly resolved   { name: 'request',
1731 silly resolved     description: 'Simplified HTTP request client.',
1731 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
1731 silly resolved     version: '2.9.203',
1731 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
1731 silly resolved     repository: { type: 'git', url: 'http://github.com/mikeal/request.git' },
1731 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
1731 silly resolved     engines: [ 'node >= 0.3.6' ],
1731 silly resolved     main: './main',
1731 silly resolved     scripts: { test: 'node tests/run.js' },
1731 silly resolved     readme: '# Request -- Simplified HTTP request method\n\n## Install\n\n<pre>\n  npm install request\n</pre>\n\nOr from source:\n\n<pre>\n  git clone git://github.com/mikeal/request.git \n  cd request\n  npm link\n</pre>\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types, in this case `application/json`, and use the proper content-type in the PUT request if one is not already provided in the headers.\n\n```javascript\nfs.createReadStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also pipe to itself. When doing so the content-type and content-length will be preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let\'s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    } \n  }\n})\n```\n\nYou can also pipe() from a http.ServerRequest instance and to a http.ServerResponse instance. The HTTP method and headers will be sent as well as the entity-body data. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since pipe() returns the destination stream in node 0.5.x you can do one line proxying :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Assume by some stretch of magic you aquired the verifier\n  var access_token = qs.parse(body)\n    , oauth = \n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: VERIFIER\n      , token_secret: access_token.oauth_token_secret\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth = \n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1/users/show.json?\'\n      , params = \n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n\n\n### request(options, callback)\n\nThe first argument can be either a url or an options object. The only required option is uri, all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from url.parse()\n* `qs` - object containing querystring values to be appended to the uri\n* `method` - http method, defaults to GET\n* `headers` - http headers, defaults to {}\n* `body` - entity body for POST and PUT requests. Must be buffer or string.\n* `form` - sets `body` but to querystring representation of value and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects. defaults to true.\n* `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects. defaults to false.\n* `maxRedirects` - the maximum number of redirects to follow, defaults to 10.\n* `encoding` - Encoding to be used on `setEncoding` of response data. If set to `null`, the body is returned as a Buffer.\n* `pool` - A hash object containing the agents for these requests. If omitted this request will use the global pool which is set to node\'s default maxSockets.\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\t\n* `proxy` - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it\'s supported with the `url` parameter by embedding the auth info in the uri.\n* `oauth` - Options for OAuth HMAC-SHA1 signing, see documentation above.\n* `strictSSL` - Set to `true` to require that SSL certificates be valid. Note: to use your own certificate authority, you need to specify an agent that was created with that ca as an option.\n* `jar` - Set to `false` if you don\'t want cookies to be remembered for future use or define your custom cookie jar (see examples section)\n\n\nThe callback argument gets 3 arguments. The first is an error when applicable (usually from the http.Client option not the http.ClientRequest object). The second in an http.ClientResponse object. The third is the response body String or Buffer.\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)  \n  \nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as request() but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.post\n\nSame as request() but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as request() but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nAlias to normal request method for uniformity.\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart: \n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ] \n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\nCookies are enabled by default (so they can be used in subsequent requests). To disable cookies set jar to false (either in defaults or in the options sent).\n\n```javascript\nvar request = request.defaults({jar: false})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nIf you to use a custom cookie jar (instead of letting request use its own global cookie jar) you do so by setting the jar default or by specifying it as an option:\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.add(cookie)\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n',
1731 silly resolved     readmeFilename: 'README.md',
1731 silly resolved     _id: 'request@2.9.203',
1731 silly resolved     _from: 'request@2.9.x' },
1731 silly resolved   { name: 'cycle',
1731 silly resolved     description: 'decycle your json',
1731 silly resolved     author: '',
1731 silly resolved     version: '1.0.3',
1731 silly resolved     main: './cycle.js',
1731 silly resolved     homepage: 'https://github.com/douglascrockford/JSON-js',
1731 silly resolved     repository: { type: 'git', url: 'http://github.com/dscape/cycle.git' },
1731 silly resolved     bugs: { url: 'http://github.com/douglascrockford/JSON-js/issues' },
1731 silly resolved     keywords: [ 'json', 'cycle', 'stringify', 'parse' ],
1731 silly resolved     engines: { node: '>=0.4.0' },
1731 silly resolved     readme: 'Fork of https://github.com/douglascrockford/JSON-js, maintained in npm as `cycle`.\n\n# Contributors\n\n* Douglas Crockford\n* Nuno Job\n* Justin Warkentin\n\n# JSON in JavaScript\n\nDouglas Crockford\ndouglas@crockford.com\n\n2010-11-18\n\n\nJSON is a light-weight, language independent, data interchange format.\nSee http://www.JSON.org/\n\nThe files in this collection implement JSON encoders/decoders in JavaScript.\n\nJSON became a built-in feature of JavaScript when the ECMAScript Programming\nLanguage Standard - Fifth Edition was adopted by the ECMA General Assembly\nin December 2009. Most of the files in this collection are for applications\nthat are expected to run in obsolete web browsers. For most purposes, json2.js\nis the best choice.\n\n\njson2.js: This file creates a JSON property in the global object, if there\nisn\'t already one, setting its value to an object containing a stringify\nmethod and a parse method. The parse method uses the eval method to do the\nparsing, guarding it with several regular expressions to defend against\naccidental code execution hazards. On current browsers, this file does nothing,\nprefering the built-in JSON object.\n\njson.js: This file does everything that json2.js does. It also adds a\ntoJSONString method and a parseJSON method to Object.prototype. Use of this\nfile is not recommended.\n\njson_parse.js: This file contains an alternative JSON parse function that\nuses recursive descent instead of eval.\n\njson_parse_state.js: This files contains an alternative JSON parse function that\nuses a state machine instead of eval.\n\ncycle.js: This file contains two functions, JSON.decycle and JSON.retrocycle,\nwhich make it possible to encode cyclical structures and dags in JSON, and to\nthen recover them. JSONPath is used to represent the links.\nhttp://GOESSNER.net/articles/JsonPath/\n',
1731 silly resolved     readmeFilename: 'README.md',
1731 silly resolved     _id: 'cycle@1.0.3',
1731 silly resolved     _from: 'cycle@1.0.x' },
1731 silly resolved   { name: 'eyes',
1731 silly resolved     description: 'a customizable value inspector',
1731 silly resolved     url: 'http://github.com/cloudhead/eyes.js',
1731 silly resolved     keywords: [ 'inspector', 'debug', 'inspect', 'print' ],
1731 silly resolved     author: { name: 'Alexis Sellier', email: 'self@cloudhead.net' },
1731 silly resolved     contributors: [ [Object] ],
1731 silly resolved     licenses: [ 'MIT' ],
1731 silly resolved     main: './lib/eyes',
1731 silly resolved     version: '0.1.8',
1731 silly resolved     scripts: { test: 'node test/*-test.js' },
1731 silly resolved     directories: { lib: './lib', test: './test' },
1731 silly resolved     engines: { node: '> 0.1.90' },
1731 silly resolved     readme: 'eyes\n====\n\na customizable value inspector for Node.js\n\nsynopsis\n--------\n\nI was tired of looking at cluttered output in the console -- something needed to be done,\n`sys.inspect()` didn\'t display regexps correctly, and was too verbose, and I had an hour or two to spare. \nSo I decided to have some fun. _eyes_ were born.\n\n![eyes-ss](http://dl.dropbox.com/u/251849/eyes-js-ss.gif)\n\n_example of the output of a user-customized eyes.js inspector_\n\n*eyes* also deals with circular objects in an intelligent way, and can pretty-print object literals.\n\nusage\n-----\n\n    var inspect = require(\'eyes\').inspector({styles: {all: \'magenta\'}});\n\n    inspect(something); // inspect with the settings passed to `inspector`\n\nor\n\n    var eyes = require(\'eyes\');\n\n    eyes.inspect(something); // inspect with the default settings\n\nyou can pass a _label_ to `inspect()`, to keep track of your inspections:\n\n    eyes.inspect(something, "a random value");\n\nIf you want to return the output of eyes without printing it, you can set it up this way:\n\n    var inspect = require(\'eyes\').inspector({ stream: null });\n\n    sys.puts(inspect({ something: 42 }));\n\ncustomization\n-------------\n\nThese are the default styles and settings used by _eyes_.\n\n    styles: {                 // Styles applied to stdout\n        all:     \'cyan\',      // Overall style applied to everything\n        label:   \'underline\', // Inspection labels, like \'array\' in `array: [1, 2, 3]`\n        other:   \'inverted\',  // Objects which don\'t have a literal representation, such as functions\n        key:     \'bold\',      // The keys in object literals, like \'a\' in `{a: 1}`\n        special: \'grey\',      // null, undefined...\n        string:  \'green\',\n        number:  \'magenta\',\n        bool:    \'blue\',      // true false\n        regexp:  \'green\',     // /\\d+/\n    },\n    \n    pretty: true,             // Indent object literals\n    hideFunctions: false,     // Don\'t output functions at all\n    stream: process.stdout,   // Stream to write to, or null\n    maxLength: 2048           // Truncate output if longer\n\nYou can overwrite them with your own, by passing a similar object to `inspector()` or `inspect()`.\n\n    var inspect = require(\'eyes\').inspector({\n        styles: {\n            all: \'magenta\',\n            special: \'bold\'\n        },\n        maxLength: 512\n    });\n\n',
1731 silly resolved     readmeFilename: 'README.md',
1731 silly resolved     _id: 'eyes@0.1.8',
1731 silly resolved     _from: 'eyes@0.1.x' },
1731 silly resolved   { author:
1731 silly resolved      { name: 'Felix Geisendörfer',
1731 silly resolved        email: 'felix@debuggable.com',
1731 silly resolved        url: 'http://debuggable.com/' },
1731 silly resolved     name: 'stack-trace',
1731 silly resolved     description: 'Get v8 stack traces as an array of CallSite objects.',
1731 silly resolved     version: '0.0.9',
1731 silly resolved     homepage: 'https://github.com/felixge/node-stack-trace',
1731 silly resolved     repository:
1731 silly resolved      { type: 'git',
1731 silly resolved        url: 'git://github.com/felixge/node-stack-trace.git' },
1731 silly resolved     main: './lib/stack-trace',
1731 silly resolved     engines: { node: '*' },
1731 silly resolved     dependencies: {},
1731 silly resolved     devDependencies: { far: '0.0.3', 'long-stack-traces': '0.1.2' },
1731 silly resolved     readme: '# stack-trace\n\nGet v8 stack traces as an array of CallSite objects.\n\n## Install\n\n``` bash\nnpm install stack-trace\n```\n\n## Usage\n\nThe stack-trace module makes it easy for you to capture the current stack:\n\n``` javascript\nvar stackTrace = require(\'stack-trace\');\nvar trace = stackTrace.get();\n\nrequire(\'assert\').strictEqual(trace[0].getFileName(), __filename);\n```\n\nHowever, sometimes you have already popped the stack you are interested in,\nand all you have left is an `Error` object. This module can help:\n\n``` javascript\nvar stackTrace = require(\'stack-trace\');\nvar err = new Error(\'something went wrong\');\nvar trace = stackTrace.parse(err);\n\nrequire(\'assert\').strictEqual(trace[0].getFileName(), __filename);\n```\n\nPlease note that parsing the `Error#stack` property is not perfect, only\ncertain properties can be retrieved with it as noted in the API docs below.\n\n## Long stack traces\n\nstack-trace works great with [long-stack-traces][], when parsing an `err.stack`\nthat has crossed the event loop boundary, a `CallSite` object returning\n`\'----------------------------------------\'` for `getFileName()` is created.\nAll other methods of the event loop boundary call site return `null`.\n\n[long-stack-traces]: https://github.com/tlrobinson/long-stack-traces\n\n## API\n\n### stackTrace.get([belowFn])\n\nReturns an array of `CallSite` objects, where element `0` is the current call\nsite.\n\nWhen passing a function on the current stack as the `belowFn` parameter, the\nreturned array will only include `CallSite` objects below this function.\n\n### stackTrace.parse(err)\n\nParses the `err.stack` property of an `Error` object into an array compatible\nwith those returned by `stackTrace.get()`. However, only the following methods\nare implemented on the returned `CallSite` objects.\n\n* getTypeName\n* getFunctionName\n* getMethodName\n* getFileName\n* getLineNumber\n* getColumnNumber\n* isNative\n\nNote: Except `getFunctionName()`, all of the above methods return exactly the\nsame values as you would get from `stackTrace.get()`. `getFunctionName()`\nis sometimes a little different, but still useful.\n\n### CallSite\n\nThe official v8 CallSite object API can be found [here][v8stackapi]. A quick\nexcerpt:\n\n> A CallSite object defines the following methods:\n>\n> * **getThis**: returns the value of this\n> * **getTypeName**: returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object\'s [[Class]] internal property.\n> * **getFunction**: returns the current function\n> * **getFunctionName**: returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function\'s context.\n> * **getMethodName**: returns the name of the property of this or one of its prototypes that holds the current function\n> * **getFileName**: if this function was defined in a script returns the name of the script\n> * **getLineNumber**: if this function was defined in a script returns the current line number\n> * **getColumnNumber**: if this function was defined in a script returns the current column number\n> * **getEvalOrigin**: if this function was created using a call to eval returns a CallSite object representing the location where eval was called\n> * **isToplevel**: is this a toplevel invocation, that is, is this the global object?\n> * **isEval**: does this call take place in code defined by a call to eval?\n> * **isNative**: is this call in native V8 code?\n> * **isConstructor**: is this a constructor call?\n\n[v8stackapi]: http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\n## License\n\nstack-trace is licensed under the MIT license.\n',
1731 silly resolved     readmeFilename: 'Readme.md',
1731 silly resolved     bugs: { url: 'https://github.com/felixge/node-stack-trace/issues' },
1731 silly resolved     _id: 'stack-trace@0.0.9',
1731 silly resolved     _from: 'stack-trace@0.0.x' } ]
1732 info install async@0.1.22 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1733 info install colors@0.6.2 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1734 info install pkginfo@0.2.3 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1735 info install request@2.9.203 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1736 info install cycle@1.0.3 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1737 info install eyes@0.1.8 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1738 info install stack-trace@0.0.9 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1739 info installOne async@0.1.22
1740 info installOne colors@0.6.2
1741 info installOne pkginfo@0.2.3
1742 info installOne request@2.9.203
1743 info installOne cycle@1.0.3
1744 info installOne eyes@0.1.8
1745 info installOne stack-trace@0.0.9
1746 verbose from cache /Users/bmackey/.npm/async/0.1.22/package/package.json
1747 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async unbuild
1748 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async/package.json
1749 verbose from cache /Users/bmackey/.npm/colors/0.6.2/package/package.json
1750 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors unbuild
1751 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors/package.json
1752 verbose from cache /Users/bmackey/.npm/pkginfo/0.2.3/package/package.json
1753 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo unbuild
1754 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo/package.json
1755 verbose from cache /Users/bmackey/.npm/request/2.9.203/package/package.json
1756 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/request unbuild
1757 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/request/package.json
1758 verbose from cache /Users/bmackey/.npm/cycle/1.0.3/package/package.json
1759 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle unbuild
1760 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle/package.json
1761 verbose from cache /Users/bmackey/.npm/eyes/0.1.8/package/package.json
1762 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes unbuild
1763 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes/package.json
1764 verbose from cache /Users/bmackey/.npm/stack-trace/0.0.9/package/package.json
1765 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace unbuild
1766 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace/package.json
1767 verbose tar unpack /Users/bmackey/.npm/async/0.1.22/package.tgz
1768 silly lockFile 78811b7a-dules-winston-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async
1769 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async /Users/bmackey/.npm/78811b7a-dules-winston-node-modules-async.lock
1770 silly lockFile f443e3bd-key-npm-async-0-1-22-package-tgz tar:///Users/bmackey/.npm/async/0.1.22/package.tgz
1771 verbose lock tar:///Users/bmackey/.npm/async/0.1.22/package.tgz /Users/bmackey/.npm/f443e3bd-key-npm-async-0-1-22-package-tgz.lock
1772 verbose tar unpack /Users/bmackey/.npm/colors/0.6.2/package.tgz
1773 silly lockFile cb30e8af-ules-winston-node-modules-colors tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors
1774 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors /Users/bmackey/.npm/cb30e8af-ules-winston-node-modules-colors.lock
1775 silly lockFile 04e0ee82-key-npm-colors-0-6-2-package-tgz tar:///Users/bmackey/.npm/colors/0.6.2/package.tgz
1776 verbose lock tar:///Users/bmackey/.npm/colors/0.6.2/package.tgz /Users/bmackey/.npm/04e0ee82-key-npm-colors-0-6-2-package-tgz.lock
1777 verbose tar unpack /Users/bmackey/.npm/pkginfo/0.2.3/package.tgz
1778 silly lockFile 750222ae-les-winston-node-modules-pkginfo tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo
1779 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo /Users/bmackey/.npm/750222ae-les-winston-node-modules-pkginfo.lock
1780 silly lockFile 86e8a719-ey-npm-pkginfo-0-2-3-package-tgz tar:///Users/bmackey/.npm/pkginfo/0.2.3/package.tgz
1781 verbose lock tar:///Users/bmackey/.npm/pkginfo/0.2.3/package.tgz /Users/bmackey/.npm/86e8a719-ey-npm-pkginfo-0-2-3-package-tgz.lock
1782 verbose tar unpack /Users/bmackey/.npm/request/2.9.203/package.tgz
1783 silly lockFile de2ee0e9-les-winston-node-modules-request tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/request
1784 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/request /Users/bmackey/.npm/de2ee0e9-les-winston-node-modules-request.lock
1785 silly lockFile b0c4bcf8--npm-request-2-9-203-package-tgz tar:///Users/bmackey/.npm/request/2.9.203/package.tgz
1786 verbose lock tar:///Users/bmackey/.npm/request/2.9.203/package.tgz /Users/bmackey/.npm/b0c4bcf8--npm-request-2-9-203-package-tgz.lock
1787 verbose tar unpack /Users/bmackey/.npm/cycle/1.0.3/package.tgz
1788 silly lockFile cca67f12-dules-winston-node-modules-cycle tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle
1789 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle /Users/bmackey/.npm/cca67f12-dules-winston-node-modules-cycle.lock
1790 silly lockFile ba9011f0-ckey-npm-cycle-1-0-3-package-tgz tar:///Users/bmackey/.npm/cycle/1.0.3/package.tgz
1791 verbose lock tar:///Users/bmackey/.npm/cycle/1.0.3/package.tgz /Users/bmackey/.npm/ba9011f0-ckey-npm-cycle-1-0-3-package-tgz.lock
1792 verbose tar unpack /Users/bmackey/.npm/eyes/0.1.8/package.tgz
1793 silly lockFile 2832b32a-odules-winston-node-modules-eyes tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes
1794 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes /Users/bmackey/.npm/2832b32a-odules-winston-node-modules-eyes.lock
1795 silly lockFile ebb0f71a-ackey-npm-eyes-0-1-8-package-tgz tar:///Users/bmackey/.npm/eyes/0.1.8/package.tgz
1796 verbose lock tar:///Users/bmackey/.npm/eyes/0.1.8/package.tgz /Users/bmackey/.npm/ebb0f71a-ackey-npm-eyes-0-1-8-package-tgz.lock
1797 verbose tar unpack /Users/bmackey/.npm/stack-trace/0.0.9/package.tgz
1798 silly lockFile d91f7aeb-winston-node-modules-stack-trace tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace
1799 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace /Users/bmackey/.npm/d91f7aeb-winston-node-modules-stack-trace.lock
1800 silly lockFile 832c9b45-pm-stack-trace-0-0-9-package-tgz tar:///Users/bmackey/.npm/stack-trace/0.0.9/package.tgz
1801 verbose lock tar:///Users/bmackey/.npm/stack-trace/0.0.9/package.tgz /Users/bmackey/.npm/832c9b45-pm-stack-trace-0-0-9-package-tgz.lock
1802 silly gunzTarPerm modes [ '755', '644' ]
1803 silly gunzTarPerm modes [ '755', '644' ]
1804 silly gunzTarPerm modes [ '755', '644' ]
1805 silly gunzTarPerm modes [ '755', '644' ]
1806 silly gunzTarPerm modes [ '755', '644' ]
1807 silly gunzTarPerm modes [ '755', '644' ]
1808 silly gunzTarPerm modes [ '755', '644' ]
1809 silly gunzTarPerm extractEntry package.json
1810 silly gunzTarPerm extractEntry package.json
1811 silly gunzTarPerm extractEntry package.json
1812 silly gunzTarPerm extractEntry package.json
1813 silly gunzTarPerm extractEntry package.json
1814 silly gunzTarPerm extractEntry package.json
1815 silly gunzTarPerm extractEntry package.json
1816 silly gunzTarPerm extractEntry .npmignore
1817 silly gunzTarPerm extractEntry README.md
1818 http 304 https://registry.npmjs.org/mime
1819 silly registry.get cb [ 304,
1819 silly registry.get   { date: 'Wed, 12 Mar 2014 14:17:56 GMT',
1819 silly registry.get     server: 'Apache',
1819 silly registry.get     via: '1.1 varnish',
1819 silly registry.get     'last-modified': 'Wed, 12 Mar 2014 14:17:55 GMT',
1819 silly registry.get     etag: '"1UAPEHGRLE79H4KN6GMSAXLT2"',
1819 silly registry.get     'cache-control': 'max-age=1',
1819 silly registry.get     'accept-ranges': 'bytes',
1819 silly registry.get     'x-served-by': 'cache-v37-ASH, cache-lcy1133-LCY',
1819 silly registry.get     'x-cache': 'HIT, MISS',
1819 silly registry.get     'x-cache-hits': '2, 0',
1819 silly registry.get     'x-timer': 'S1394633876.118049860,VS0,VS434,VE434,VE153',
1819 silly registry.get     vary: 'Accept',
1819 silly registry.get     'content-length': '0',
1819 silly registry.get     'keep-alive': 'timeout=10, max=47',
1819 silly registry.get     connection: 'Keep-Alive' } ]
1820 verbose etag mime from cache
1821 silly gunzTarPerm extractEntry .npmignore
1822 silly gunzTarPerm extractEntry README.md
1823 silly gunzTarPerm extractEntry colors.js
1824 silly gunzTarPerm extractEntry example.js
1825 silly gunzTarPerm extractEntry README.md
1826 silly gunzTarPerm extractEntry LICENSE
1827 silly gunzTarPerm extractEntry README.md
1828 silly gunzTarPerm extractEntry cycle.js
1829 silly gunzTarPerm extractEntry README.md
1830 silly gunzTarPerm extractEntry LICENSE
1831 silly gunzTarPerm extractEntry .npmignore
1832 silly gunzTarPerm extractEntry License
1833 silly addNameRange number 2 { name: 'mime', range: '>=0.0.1', hasData: true }
1834 silly addNameRange versions [ 'mime',
1834 silly addNameRange   [ '1.0.0',
1834 silly addNameRange     '1.1.0',
1834 silly addNameRange     '1.2.1',
1834 silly addNameRange     '1.2.2',
1834 silly addNameRange     '1.2.3',
1834 silly addNameRange     '1.2.4',
1834 silly addNameRange     '1.2.5',
1834 silly addNameRange     '1.2.6',
1834 silly addNameRange     '1.2.7',
1834 silly addNameRange     '1.2.8',
1834 silly addNameRange     '1.2.9',
1834 silly addNameRange     '1.2.10',
1834 silly addNameRange     '1.2.11' ] ]
1835 verbose addNamed [ 'mime', '1.2.11' ]
1836 verbose addNamed [ '1.2.11', '1.2.11' ]
1837 silly lockFile c4b0741f-mime-1-2-11 mime@1.2.11
1838 verbose lock mime@1.2.11 /Users/bmackey/.npm/c4b0741f-mime-1-2-11.lock
1839 silly gunzTarPerm extractEntry amqp-definitions-0-9-1.js
1840 silly gunzTarPerm extractEntry amqp.js
1841 silly gunzTarPerm extractEntry LICENSE
1842 silly gunzTarPerm extractEntry docs/docco.css
1843 silly gunzTarPerm extractEntry docs/pkginfo.html
1844 silly gunzTarPerm extractEntry test.js
1845 silly gunzTarPerm extractEntry MIT-LICENSE.txt
1846 silly gunzTarPerm extractEntry ReadMe.md
1847 silly gunzTarPerm extractEntry example.html
1848 silly gunzTarPerm extractEntry themes/winston-dark.js
1849 silly gunzTarPerm extractEntry themes/winston-light.js
1850 silly gunzTarPerm extractEntry aws.js
1851 verbose read json /Users/bmackey/.npm/mime/1.2.11/package/package.json
1852 silly gunzTarPerm extractEntry Makefile
1853 silly gunzTarPerm extractEntry lib/eyes.js
1854 silly gunzTarPerm extractEntry Makefile
1855 silly gunzTarPerm extractEntry Readme.md
1856 silly gunzTarPerm extractEntry index.js
1857 silly gunzTarPerm extractEntry .gitmodules
1858 silly gunzTarPerm extractEntry examples/package.json
1859 silly gunzTarPerm extractEntry lib/stack-trace.js
1860 silly lockFile c4b0741f-mime-1-2-11 mime@1.2.11
1861 silly lockFile c4b0741f-mime-1-2-11 mime@1.2.11
1862 silly gunzTarPerm extractEntry History.md
1863 silly gunzTarPerm extractEntry amqp-0-9-1.xml
1864 silly lockFile c812b446-mime-0-0-1 mime@>= 0.0.1
1865 silly lockFile c812b446-mime-0-0-1 mime@>= 0.0.1
1866 silly gunzTarPerm extractEntry test/eyes-test.js
1867 silly resolved [ { name: 'formidable',
1867 silly resolved     version: '1.0.11',
1867 silly resolved     dependencies: {},
1867 silly resolved     devDependencies:
1867 silly resolved      { gently: '0.8.0',
1867 silly resolved        findit: '0.1.1',
1867 silly resolved        hashish: '0.0.4',
1867 silly resolved        urun: '0.0.4',
1867 silly resolved        utest: '0.0.3' },
1867 silly resolved     directories: { lib: './lib' },
1867 silly resolved     main: './lib/index',
1867 silly resolved     scripts: { test: 'make test' },
1867 silly resolved     engines: { node: '*' },
1867 silly resolved     optionalDependencies: {},
1867 silly resolved     readme: '# Formidable\n\n[![Build Status](https://secure.travis-ci.org/felixge/node-formidable.png?branch=master)](http://travis-ci.org/felixge/node-formidable)\n\n## Purpose\n\nA node.js module for parsing form data, especially file uploads.\n\n## Current status\n\nThis module was developed for [Transloadit](http://transloadit.com/), a service focused on uploading\nand encoding images and videos. It has been battle-tested against hundreds of GB of file uploads from\na large variety of clients and is considered production-ready.\n\n## Features\n\n* Fast (~500mb/sec), non-buffering multipart parser\n* Automatically writing file uploads to disk\n* Low memory footprint\n* Graceful error handling\n* Very high test coverage\n\n## Changelog\n\n### v1.0.9\n\n* Emit progress when content length header parsed (Tim Koschützki)\n* Fix Readme syntax due to GitHub changes (goob)\n* Replace references to old \'sys\' module in Readme with \'util\' (Peter Sugihara)\n\n### v1.0.8\n\n* Strip potentially unsafe characters when using `keepExtensions: true`.\n* Switch to utest / urun for testing\n* Add travis build\n\n### v1.0.7\n\n* Remove file from package that was causing problems when installing on windows. (#102)\n* Fix typos in Readme (Jason Davies).\n\n### v1.0.6\n\n* Do not default to the default to the field name for file uploads where\n  filename="".\n\n### v1.0.5\n\n* Support filename="" in multipart parts\n* Explain unexpected end() errors in parser better\n\n**Note:** Starting with this version, formidable emits \'file\' events for empty\nfile input fields. Previously those were incorrectly emitted as regular file\ninput fields with value = "".\n\n### v1.0.4\n\n* Detect a good default tmp directory regardless of platform. (#88)\n\n### v1.0.3\n\n* Fix problems with utf8 characters (#84) / semicolons in filenames (#58)\n* Small performance improvements\n* New test suite and fixture system\n\n### v1.0.2\n\n* Exclude node\\_modules folder from git\n* Implement new `\'aborted\'` event\n* Fix files in example folder to work with recent node versions\n* Make gently a devDependency\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v1.0.1...v1.0.2)\n\n### v1.0.1\n\n* Fix package.json to refer to proper main directory. (#68, Dean Landolt)\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v1.0.0...v1.0.1)\n\n### v1.0.0\n\n* Add support for multipart boundaries that are quoted strings. (Jeff Craig)\n\nThis marks the beginning of development on version 2.0 which will include\nseveral architectural improvements.\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v0.9.11...v1.0.0)\n\n### v0.9.11\n\n* Emit `\'progress\'` event when receiving data, regardless of parsing it. (Tim Koschützki)\n* Use [W3C FileAPI Draft](http://dev.w3.org/2006/webapi/FileAPI/) properties for File class\n\n**Important:** The old property names of the File class will be removed in a\nfuture release.\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v0.9.10...v0.9.11)\n\n### Older releases\n\nThese releases were done before starting to maintain the above Changelog:\n\n* [v0.9.10](https://github.com/felixge/node-formidable/compare/v0.9.9...v0.9.10)\n* [v0.9.9](https://github.com/felixge/node-formidable/compare/v0.9.8...v0.9.9)\n* [v0.9.8](https://github.com/felixge/node-formidable/compare/v0.9.7...v0.9.8)\n* [v0.9.7](https://github.com/felixge/node-formidable/compare/v0.9.6...v0.9.7)\n* [v0.9.6](https://github.com/felixge/node-formidable/compare/v0.9.5...v0.9.6)\n* [v0.9.5](https://github.com/felixge/node-formidable/compare/v0.9.4...v0.9.5)\n* [v0.9.4](https://github.com/felixge/node-formidable/compare/v0.9.3...v0.9.4)\n* [v0.9.3](https://github.com/felixge/node-formidable/compare/v0.9.2...v0.9.3)\n* [v0.9.2](https://github.com/felixge/node-formidable/compare/v0.9.1...v0.9.2)\n* [v0.9.1](https://github.com/felixge/node-formidable/compare/v0.9.0...v0.9.1)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.1.0](https://github.com/felixge/node-formidable/commits/v0.1.0)\n\n## Installation\n\nVia [npm](http://github.com/isaacs/npm):\n\n    npm install formidable@latest\n\nManually:\n\n    git clone git://github.com/felixge/node-formidable.git formidable\n    vim my.js\n    # var formidable = require(\'./formidable\');\n\nNote: Formidable requires [gently](http://github.com/felixge/node-gently) to run the unit tests, but you won\'t need it for just using the library.\n\n## Example\n\nParse an incoming file upload.\n\n    var formidable = require(\'formidable\'),\n        http = require(\'http\'),\n\n        util = require(\'util\');\n\n    http.createServer(function(req, res) {\n      if (req.url == \'/upload\' && req.method.toLowerCase() == \'post\') {\n        // parse a file upload\n        var form = new formidable.IncomingForm();\n        form.parse(req, function(err, fields, files) {\n          res.writeHead(200, {\'content-type\': \'text/plain\'});\n          res.write(\'received upload:\\n\\n\');\n          res.end(util.inspect({fields: fields, files: files}));\n        });\n        return;\n      }\n\n      // show a file upload form\n      res.writeHead(200, {\'content-type\': \'text/html\'});\n      res.end(\n        \'<form action="/upload" enctype="multipart/form-data" method="post">\'+\n        \'<input type="text" name="title"><br>\'+\n        \'<input type="file" name="upload" multiple="multiple"><br>\'+\n        \'<input type="submit" value="Upload">\'+\n        \'</form>\'\n      );\n    }).listen(80);\n\n## API\n\n### formidable.IncomingForm\n\n__new formidable.IncomingForm()__\n\nCreates a new incoming form.\n\n__incomingForm.encoding = \'utf-8\'__\n\nThe encoding to use for incoming form fields.\n\n__incomingForm.uploadDir = process.env.TMP || \'/tmp\' || process.cwd()__\n\nThe directory for placing file uploads in. You can move them later on using\n`fs.rename()`. The default directory is picked at module load time depending on\nthe first existing directory from those listed above.\n\n__incomingForm.keepExtensions = false__\n\nIf you want the files written to `incomingForm.uploadDir` to include the extensions of the original files, set this property to `true`.\n\n__incomingForm.type__\n\nEither \'multipart\' or \'urlencoded\' depending on the incoming request.\n\n__incomingForm.maxFieldsSize = 2 * 1024 * 1024__\n\nLimits the amount of memory a field (not file) can allocate in bytes.\nIf this value is exceeded, an `\'error\'` event is emitted. The default\nsize is 2MB.\n\n__incomingForm.hash = false__\n\nIf you want checksums calculated for incoming files, set this to either `\'sha1\'` or `\'md5\'`.\n\n__incomingForm.bytesReceived__\n\nThe amount of bytes received for this form so far.\n\n__incomingForm.bytesExpected__\n\nThe expected number of bytes in this form.\n\n__incomingForm.parse(request, [cb])__\n\nParses an incoming node.js `request` containing form data. If `cb` is provided, all fields an files are collected and passed to the callback:\n\n    incomingForm.parse(req, function(err, fields, files) {\n      // ...\n    });\n\n__incomingForm.onPart(part)__\n\nYou may overwrite this method if you are interested in directly accessing the multipart stream. Doing so will disable any `\'field\'` / `\'file\'` events  processing which would occur otherwise, making you fully responsible for handling the processing.\n\n    incomingForm.onPart = function(part) {\n      part.addListener(\'data\', function() {\n        // ...\n      });\n    }\n\nIf you want to use formidable to only handle certain parts for you, you can do so:\n\n    incomingForm.onPart = function(part) {\n      if (!part.filename) {\n        // let formidable handle all non-file parts\n        incomingForm.handlePart(part);\n      }\n    }\n\nCheck the code in this method for further inspiration.\n\n__Event: \'progress\' (bytesReceived, bytesExpected)__\n\nEmitted after each incoming chunk of data that has been parsed. Can be used to roll your own progress bar.\n\n__Event: \'field\' (name, value)__\n\nEmitted whenever a field / value pair has been received.\n\n__Event: \'fileBegin\' (name, file)__\n\nEmitted whenever a new file is detected in the upload stream. Use this even if\nyou want to stream the file to somewhere else while buffering the upload on\nthe file system.\n\n__Event: \'file\' (name, file)__\n\nEmitted whenever a field / file pair has been received. `file` is an instance of `File`.\n\n__Event: \'error\' (err)__\n\nEmitted when there is an error processing the incoming form. A request that experiences an error is automatically paused, you will have to manually call `request.resume()` if you want the request to continue firing `\'data\'` events.\n\n__Event: \'aborted\'__\n\nEmitted when the request was aborted by the user. Right now this can be due to a \'timeout\' or \'close\' event on the socket. In the future there will be a separate \'timeout\' event (needs a change in the node core).\n\n__Event: \'end\' ()__\n\nEmitted when the entire request has been received, and all contained files have finished flushing to disk. This is a great place for you to send your response.\n\n### formidable.File\n\n__file.size = 0__\n\nThe size of the uploaded file in bytes. If the file is still being uploaded (see `\'fileBegin\'` event), this property says how many bytes of the file have been written to disk yet.\n\n__file.path = null__\n\nThe path this file is being written to. You can modify this in the `\'fileBegin\'` event in\ncase you are unhappy with the way formidable generates a temporary path for your files.\n\n__file.name = null__\n\nThe name this file had according to the uploading client.\n\n__file.type = null__\n\nThe mime type of this file, according to the uploading client.\n\n__file.lastModifiedDate = null__\n\nA date object (or `null`) containing the time this file was last written to. Mostly\nhere for compatibility with the [W3C File API Draft](http://dev.w3.org/2006/webapi/FileAPI/).\n\n__file.hash = null__\n\nIf hash calculation was set, you can read the hex digest out of this var.\n\n## License\n\nFormidable is licensed under the MIT license.\n\n## Ports\n\n* [multipart-parser](http://github.com/FooBarWidget/multipart-parser): a C++ parser based on formidable\n\n## Credits\n\n* [Ryan Dahl](http://twitter.com/ryah) for his work on [http-parser](http://github.com/ry/http-parser) which heavily inspired multipart_parser.js\n',
1867 silly resolved     readmeFilename: 'Readme.md',
1867 silly resolved     description: '[![Build Status](https://secure.travis-ci.org/felixge/node-formidable.png?branch=master)](http://travis-ci.org/felixge/node-formidable)',
1867 silly resolved     _id: 'formidable@1.0.11',
1867 silly resolved     _from: 'formidable@1.0.11' },
1867 silly resolved   { name: 'qs',
1867 silly resolved     description: 'querystring parser',
1867 silly resolved     version: '0.6.6',
1867 silly resolved     keywords: [ 'query string', 'parser', 'component' ],
1867 silly resolved     repository:
1867 silly resolved      { type: 'git',
1867 silly resolved        url: 'git://github.com/visionmedia/node-querystring.git' },
1867 silly resolved     devDependencies: { mocha: '*', 'expect.js': '*' },
1867 silly resolved     scripts: { test: 'make test' },
1867 silly resolved     author:
1867 silly resolved      { name: 'TJ Holowaychuk',
1867 silly resolved        email: 'tj@vision-media.ca',
1867 silly resolved        url: 'http://tjholowaychuk.com' },
1867 silly resolved     main: 'index',
1867 silly resolved     engines: { node: '*' },
1867 silly resolved     readme: '# node-querystring\n\n  query string parser for node and the browser supporting nesting, as it was removed from `0.3.x`, so this library provides the previous and commonly desired behaviour (and twice as fast). Used by [express](http://expressjs.com), [connect](http://senchalabs.github.com/connect) and others.\n\n## Installation\n\n    $ npm install qs\n\n## Examples\n\n```js\nvar qs = require(\'qs\');\n\nqs.parse(\'user[name][first]=Tobi&user[email]=tobi@learnboost.com\');\n// => { user: { name: { first: \'Tobi\' }, email: \'tobi@learnboost.com\' } }\n\nqs.stringify({ user: { name: \'Tobi\', email: \'tobi@learnboost.com\' }})\n// => user[name]=Tobi&user[email]=tobi%40learnboost.com\n```\n\n## Testing\n\nInstall dev dependencies:\n\n    $ npm install -d\n\nand execute:\n\n    $ make test\n\nbrowser:\n\n    $ open test/browser/index.html\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2010 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.',
1867 silly resolved     readmeFilename: 'Readme.md',
1867 silly resolved     bugs: { url: 'https://github.com/visionmedia/node-querystring/issues' },
1867 silly resolved     _id: 'qs@0.6.6',
1867 silly resolved     _from: 'qs@>= 0.4.0' },
1867 silly resolved   { author:
1867 silly resolved      { name: 'Robert Kieffer',
1867 silly resolved        email: 'robert@broofa.com',
1867 silly resolved        url: 'http://github.com/broofa' },
1867 silly resolved     contributors: [ [Object] ],
1867 silly resolved     dependencies: {},
1867 silly resolved     description: 'A comprehensive library for mime-type mapping',
1867 silly resolved     devDependencies: {},
1867 silly resolved     keywords: [ 'util', 'mime' ],
1867 silly resolved     main: 'mime.js',
1867 silly resolved     name: 'mime',
1867 silly resolved     repository: { url: 'https://github.com/broofa/node-mime', type: 'git' },
1867 silly resolved     version: '1.2.11',
1867 silly resolved     readme: '# mime\n\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file, if no mime type is found `application/octet-stream` is returned. Performs a case-insensitive lookup using the extension in `path` (the substring after the last \'/\' or \'.\').  E.g.\n\n    var mime = require(\'mime\');\n\n    mime.lookup(\'/path/to/file.txt\');         // => \'text/plain\'\n    mime.lookup(\'file.txt\');                  // => \'text/plain\'\n    mime.lookup(\'.TXT\');                      // => \'text/plain\'\n    mime.lookup(\'htm\');                       // => \'text/html\'\n\n### mime.default_type\nSets the mime type returned when `mime.lookup` fails to find the extension searched for. (Default is `application/octet-stream`.)\n\n### mime.extension(type)\nGet the default extension for `type`\n\n    mime.extension(\'text/html\');                 // => \'html\'\n    mime.extension(\'application/octet-stream\');  // => \'bin\'\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n    mime.charsets.lookup(\'text/plain\');        // => \'UTF-8\'\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/broofa/node-mime/wiki/Requesting-New-Types).\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n    mime.define({\n        \'text/x-some-format\': [\'x-sf\', \'x-sft\', \'x-sfml\'],\n        \'application/x-my-type\': [\'x-mt\', \'x-mtt\'],\n        // etc ...\n    });\n\n    mime.lookup(\'x-sft\');                 // => \'text/x-some-format\'\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n    mime.extension(\'text/x-some-format\'); // => \'x-sf\'\n\n### mime.load(filepath)\n\nLoad mappings from an Apache ".types" format file\n\n    mime.load(\'./my_project.types\');\n\nThe .types file format is simple -  See the `types` dir for examples.\n',
1867 silly resolved     readmeFilename: 'README.md',
1867 silly resolved     bugs: { url: 'https://github.com/broofa/node-mime/issues' },
1867 silly resolved     _id: 'mime@1.2.11',
1867 silly resolved     _from: 'mime@>= 0.0.1' } ]
1868 info install formidable@1.0.11 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
1869 info install qs@0.6.6 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
1870 info install mime@1.2.11 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
1871 info installOne formidable@1.0.11
1872 info installOne qs@0.6.6
1873 info installOne mime@1.2.11
1874 verbose from cache /Users/bmackey/.npm/formidable/1.0.11/package/package.json
1875 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable unbuild
1876 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable/package.json
1877 verbose from cache /Users/bmackey/.npm/qs/0.6.6/package/package.json
1878 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/qs unbuild
1879 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/qs/package.json
1880 verbose from cache /Users/bmackey/.npm/mime/1.2.11/package/package.json
1881 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/mime unbuild
1882 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/mime/package.json
1883 verbose tar unpack /Users/bmackey/.npm/formidable/1.0.11/package.tgz
1884 silly lockFile 9f646b6b--connect-node-modules-formidable tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable
1885 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable /Users/bmackey/.npm/9f646b6b--connect-node-modules-formidable.lock
1886 silly lockFile 673bfbe3-pm-formidable-1-0-11-package-tgz tar:///Users/bmackey/.npm/formidable/1.0.11/package.tgz
1887 verbose lock tar:///Users/bmackey/.npm/formidable/1.0.11/package.tgz /Users/bmackey/.npm/673bfbe3-pm-formidable-1-0-11-package-tgz.lock
1888 verbose tar unpack /Users/bmackey/.npm/qs/0.6.6/package.tgz
1889 silly lockFile 241df3d5-dules-fh-connect-node-modules-qs tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/qs
1890 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/qs /Users/bmackey/.npm/241df3d5-dules-fh-connect-node-modules-qs.lock
1891 silly lockFile 0d27fca6-bmackey-npm-qs-0-6-6-package-tgz tar:///Users/bmackey/.npm/qs/0.6.6/package.tgz
1892 verbose lock tar:///Users/bmackey/.npm/qs/0.6.6/package.tgz /Users/bmackey/.npm/0d27fca6-bmackey-npm-qs-0-6-6-package-tgz.lock
1893 verbose tar unpack /Users/bmackey/.npm/mime/1.2.11/package.tgz
1894 silly lockFile 55bca99f-les-fh-connect-node-modules-mime tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/mime
1895 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/mime /Users/bmackey/.npm/55bca99f-les-fh-connect-node-modules-mime.lock
1896 silly lockFile cb51193d-ckey-npm-mime-1-2-11-package-tgz tar:///Users/bmackey/.npm/mime/1.2.11/package.tgz
1897 verbose lock tar:///Users/bmackey/.npm/mime/1.2.11/package.tgz /Users/bmackey/.npm/cb51193d-ckey-npm-mime-1-2-11-package-tgz.lock
1898 silly gunzTarPerm extractEntry lang/pt.js
1899 silly gunzTarPerm extractEntry lang/es.js
1900 silly gunzTarPerm extractEntry examples/all-properties.js
1901 silly gunzTarPerm extractEntry examples/array-argument.js
1902 silly gunzTarPerm modes [ '755', '644' ]
1903 silly gunzTarPerm modes [ '755', '644' ]
1904 silly gunzTarPerm modes [ '755', '644' ]
1905 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/package.json
1906 silly gunzTarPerm extractEntry aws2.js
1907 silly gunzTarPerm extractEntry forever.js
1908 silly gunzTarPerm extractEntry package.json
1909 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle/package.json
1910 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable/package.json
1911 silly lockFile 9f646b6b--connect-node-modules-formidable tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable
1912 silly lockFile 9f646b6b--connect-node-modules-formidable tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable
1913 silly gunzTarPerm extractEntry package.json
1914 silly gunzTarPerm extractEntry .npmignore
1915 silly gunzTarPerm extractEntry index.js
1916 silly lockFile 673bfbe3-pm-formidable-1-0-11-package-tgz tar:///Users/bmackey/.npm/formidable/1.0.11/package.tgz
1917 silly lockFile 673bfbe3-pm-formidable-1-0-11-package-tgz tar:///Users/bmackey/.npm/formidable/1.0.11/package.tgz
1918 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable unbuild
1919 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable/package.json
1920 silly gunzTarPerm extractEntry README.md
1921 silly gunzTarPerm extractEntry LICENSE
1922 silly lockFile 7a30ad2d-dules-fh-amqp-js-node-modules-rc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
1923 silly lockFile 7a30ad2d-dules-fh-amqp-js-node-modules-rc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
1924 silly lockFile 363610a9-bmackey-npm-rc-0-1-1-package-tgz tar:///Users/bmackey/.npm/rc/0.1.1/package.tgz
1925 silly lockFile 363610a9-bmackey-npm-rc-0-1-1-package-tgz tar:///Users/bmackey/.npm/rc/0.1.1/package.tgz
1926 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
1927 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect unbuild
1928 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/package.json
1929 info preuninstall fh-connect@1.8.6
1930 silly gunzTarPerm extractEntry .gitmodules
1931 silly gunzTarPerm extractEntry Readme.md
1932 info uninstall fh-connect@1.8.6
1933 info preinstall rc@0.1.1
1934 verbose false,/Users/bmackey/college/Project/App/xpoit/cloud/node_modules,/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules unbuild fh-connect@1.8.6
1935 info postuninstall fh-connect@1.8.6
1936 silly gunzTarPerm extractEntry mime.js
1937 silly gunzTarPerm extractEntry test.js
1938 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/package.json
1939 silly gunzTarPerm extractEntry examples/multiple-properties.js
1940 silly gunzTarPerm extractEntry examples/object-argument.js
1941 verbose readDependencies using package.json deps
1942 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/package.json
1943 verbose readDependencies using package.json deps
1944 verbose cache add [ 'optimist@~0.3.4', null ]
1945 verbose cache add name=undefined spec="optimist@~0.3.4" args=["optimist@~0.3.4",null]
1946 verbose parsed url { protocol: null,
1946 verbose parsed url   slashes: null,
1946 verbose parsed url   auth: null,
1946 verbose parsed url   host: null,
1946 verbose parsed url   port: null,
1946 verbose parsed url   hostname: null,
1946 verbose parsed url   hash: null,
1946 verbose parsed url   search: null,
1946 verbose parsed url   query: null,
1946 verbose parsed url   pathname: 'optimist@~0.3.4',
1946 verbose parsed url   path: 'optimist@~0.3.4',
1946 verbose parsed url   href: 'optimist@~0.3.4' }
1947 verbose cache add name="optimist" spec="~0.3.4" args=["optimist","~0.3.4"]
1948 verbose parsed url { protocol: null,
1948 verbose parsed url   slashes: null,
1948 verbose parsed url   auth: null,
1948 verbose parsed url   host: null,
1948 verbose parsed url   port: null,
1948 verbose parsed url   hostname: null,
1948 verbose parsed url   hash: null,
1948 verbose parsed url   search: null,
1948 verbose parsed url   query: null,
1948 verbose parsed url   pathname: '~0.3.4',
1948 verbose parsed url   path: '~0.3.4',
1948 verbose parsed url   href: '~0.3.4' }
1949 verbose addNamed [ 'optimist', '~0.3.4' ]
1950 verbose addNamed [ null, '>=0.3.4- <0.4.0-' ]
1951 silly lockFile 094c60bd-optimist-0-3-4 optimist@~0.3.4
1952 verbose lock optimist@~0.3.4 /Users/bmackey/.npm/094c60bd-optimist-0-3-4.lock
1953 verbose cache add [ 'deep-extend@~0.2.5', null ]
1954 verbose cache add name=undefined spec="deep-extend@~0.2.5" args=["deep-extend@~0.2.5",null]
1955 verbose parsed url { protocol: null,
1955 verbose parsed url   slashes: null,
1955 verbose parsed url   auth: null,
1955 verbose parsed url   host: null,
1955 verbose parsed url   port: null,
1955 verbose parsed url   hostname: null,
1955 verbose parsed url   hash: null,
1955 verbose parsed url   search: null,
1955 verbose parsed url   query: null,
1955 verbose parsed url   pathname: 'deep-extend@~0.2.5',
1955 verbose parsed url   path: 'deep-extend@~0.2.5',
1955 verbose parsed url   href: 'deep-extend@~0.2.5' }
1956 verbose cache add name="deep-extend" spec="~0.2.5" args=["deep-extend","~0.2.5"]
1957 verbose parsed url { protocol: null,
1957 verbose parsed url   slashes: null,
1957 verbose parsed url   auth: null,
1957 verbose parsed url   host: null,
1957 verbose parsed url   port: null,
1957 verbose parsed url   hostname: null,
1957 verbose parsed url   hash: null,
1957 verbose parsed url   search: null,
1957 verbose parsed url   query: null,
1957 verbose parsed url   pathname: '~0.2.5',
1957 verbose parsed url   path: '~0.2.5',
1957 verbose parsed url   href: '~0.2.5' }
1958 verbose addNamed [ 'deep-extend', '~0.2.5' ]
1959 verbose addNamed [ null, '>=0.2.5- <0.3.0-' ]
1960 silly lockFile d89fdb6e-deep-extend-0-2-5 deep-extend@~0.2.5
1961 verbose lock deep-extend@~0.2.5 /Users/bmackey/.npm/d89fdb6e-deep-extend-0-2-5.lock
1962 silly lockFile cca67f12-dules-winston-node-modules-cycle tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle
1963 silly lockFile cca67f12-dules-winston-node-modules-cycle tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle
1964 silly addNameRange { name: 'optimist', range: '>=0.3.4- <0.4.0-', hasData: false }
1965 verbose cache add [ 'ini@~1.1.0', null ]
1966 verbose cache add name=undefined spec="ini@~1.1.0" args=["ini@~1.1.0",null]
1967 verbose parsed url { protocol: null,
1967 verbose parsed url   slashes: null,
1967 verbose parsed url   auth: null,
1967 verbose parsed url   host: null,
1967 verbose parsed url   port: null,
1967 verbose parsed url   hostname: null,
1967 verbose parsed url   hash: null,
1967 verbose parsed url   search: null,
1967 verbose parsed url   query: null,
1967 verbose parsed url   pathname: 'ini@~1.1.0',
1967 verbose parsed url   path: 'ini@~1.1.0',
1967 verbose parsed url   href: 'ini@~1.1.0' }
1968 verbose cache add name="ini" spec="~1.1.0" args=["ini","~1.1.0"]
1969 verbose parsed url { protocol: null,
1969 verbose parsed url   slashes: null,
1969 verbose parsed url   auth: null,
1969 verbose parsed url   host: null,
1969 verbose parsed url   port: null,
1969 verbose parsed url   hostname: null,
1969 verbose parsed url   hash: null,
1969 verbose parsed url   search: null,
1969 verbose parsed url   query: null,
1969 verbose parsed url   pathname: '~1.1.0',
1969 verbose parsed url   path: '~1.1.0',
1969 verbose parsed url   href: '~1.1.0' }
1970 verbose addNamed [ 'ini', '~1.1.0' ]
1971 verbose addNamed [ null, '>=1.1.0- <1.2.0-' ]
1972 silly lockFile d6a0c59d-ini-1-1-0 ini@~1.1.0
1973 verbose lock ini@~1.1.0 /Users/bmackey/.npm/d6a0c59d-ini-1-1-0.lock
1974 silly addNameRange { name: 'deep-extend',
1974 silly addNameRange   range: '>=0.2.5- <0.3.0-',
1974 silly addNameRange   hasData: false }
1975 silly addNameRange { name: 'ini', range: '>=1.1.0- <1.2.0-', hasData: false }
1976 silly lockFile ba9011f0-ckey-npm-cycle-1-0-3-package-tgz tar:///Users/bmackey/.npm/cycle/1.0.3/package.tgz
1977 silly lockFile ba9011f0-ckey-npm-cycle-1-0-3-package-tgz tar:///Users/bmackey/.npm/cycle/1.0.3/package.tgz
1978 silly gunzTarPerm extractEntry main.js
1979 silly gunzTarPerm extractEntry oauth.js
1980 verbose url raw optimist
1981 verbose url resolving [ 'https://registry.npmjs.org/', './optimist' ]
1982 verbose url resolved https://registry.npmjs.org/optimist
1983 info trying registry request attempt 1 at 14:17:58
1984 verbose etag "8BO85BEC60MMBAVWXWMFX7PZQ"
1985 http GET https://registry.npmjs.org/optimist
1986 verbose url raw deep-extend
1987 verbose url resolving [ 'https://registry.npmjs.org/', './deep-extend' ]
1988 verbose url resolved https://registry.npmjs.org/deep-extend
1989 info trying registry request attempt 1 at 14:17:58
1990 verbose etag "EHROK0RXMT4HSSNWAPRN8BCQV"
1991 http GET https://registry.npmjs.org/deep-extend
1992 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace/package.json
1993 silly gunzTarPerm extractEntry amqp-0-9-1-rabbit.xml
1994 verbose url raw ini
1995 verbose url resolving [ 'https://registry.npmjs.org/', './ini' ]
1996 verbose url resolved https://registry.npmjs.org/ini
1997 info trying registry request attempt 1 at 14:17:58
1998 verbose etag "1NY4OTYV1VH4M84VI6WINIDWW"
1999 http GET https://registry.npmjs.org/ini
2000 info preinstall cycle@1.0.3
2001 error Error: ENOENT, open '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/mime/LICENSE'
2002 error If you need help, you may report this log at:
2002 error     <http://github.com/isaacs/npm/issues>
2002 error or email it to:
2002 error     <npm-@googlegroups.com>
2003 error System Darwin 13.1.0
2004 error command "node" "/usr/local/bin/npm" "install"
2005 error cwd /Users/bmackey/college/Project/App/xpoit/cloud
2006 error node -v v0.10.11
2007 error npm -v 1.2.30
2008 error path /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/mime/LICENSE
2009 error code ENOENT
2010 error errno 34
2011 verbose exit [ 34, true ]
