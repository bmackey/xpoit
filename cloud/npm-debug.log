0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'install' ]
2 info using npm@1.2.30
3 info using node@v0.10.11
4 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/package.json
5 warn package.json fh-app@0.1.0 No repository field.
6 warn package.json fh-app@0.1.0 No readme data.
7 verbose readDependencies using package.json deps
8 verbose install where, deps [ '/Users/bmackey/college/Project/App/xpoit/cloud',
8 verbose install   [ 'fh-nodeapp' ] ]
9 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
10 info preinstall fh-app@0.1.0
11 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
12 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
13 verbose readDependencies using package.json deps
14 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
15 verbose cache add [ 'fh-nodeapp@*', null ]
16 verbose cache add name=undefined spec="fh-nodeapp@*" args=["fh-nodeapp@*",null]
17 verbose parsed url { protocol: null,
17 verbose parsed url   slashes: null,
17 verbose parsed url   auth: null,
17 verbose parsed url   host: null,
17 verbose parsed url   port: null,
17 verbose parsed url   hostname: null,
17 verbose parsed url   hash: null,
17 verbose parsed url   search: null,
17 verbose parsed url   query: null,
17 verbose parsed url   pathname: 'fh-nodeapp@*',
17 verbose parsed url   path: 'fh-nodeapp@*',
17 verbose parsed url   href: 'fh-nodeapp@*' }
18 verbose cache add name="fh-nodeapp" spec="*" args=["fh-nodeapp","*"]
19 verbose parsed url { protocol: null,
19 verbose parsed url   slashes: null,
19 verbose parsed url   auth: null,
19 verbose parsed url   host: null,
19 verbose parsed url   port: null,
19 verbose parsed url   hostname: null,
19 verbose parsed url   hash: null,
19 verbose parsed url   search: null,
19 verbose parsed url   query: null,
19 verbose parsed url   pathname: '*',
19 verbose parsed url   path: '*',
19 verbose parsed url   href: '*' }
20 verbose addNamed [ 'fh-nodeapp', '*' ]
21 verbose addNamed [ null, '' ]
22 silly lockFile e7526326-fh-nodeapp fh-nodeapp@*
23 verbose lock fh-nodeapp@* /Users/bmackey/.npm/e7526326-fh-nodeapp.lock
24 silly addNameRange { name: 'fh-nodeapp', range: '', hasData: false }
25 verbose registry.get fh-nodeapp not expired, no request
26 silly addNameRange number 2 { name: 'fh-nodeapp', range: '', hasData: true }
27 silly addNameRange versions [ 'fh-nodeapp',
27 silly addNameRange   [ '0.32.0-BUILD-NUMBER',
27 silly addNameRange     '0.32.0',
27 silly addNameRange     '0.33.0',
27 silly addNameRange     '0.34.0',
27 silly addNameRange     '0.35.0',
27 silly addNameRange     '0.36.0',
27 silly addNameRange     '0.37.0',
27 silly addNameRange     '0.38.0',
27 silly addNameRange     '0.39.0',
27 silly addNameRange     '0.40.0',
27 silly addNameRange     '0.41.0',
27 silly addNameRange     '0.40.1',
27 silly addNameRange     '0.41.1',
27 silly addNameRange     '0.41.2',
27 silly addNameRange     '0.42.0',
27 silly addNameRange     '0.43.0',
27 silly addNameRange     '0.44.0',
27 silly addNameRange     '0.45.0',
27 silly addNameRange     '0.46.0',
27 silly addNameRange     '0.47.0',
27 silly addNameRange     '0.48.0',
27 silly addNameRange     '0.48.2',
27 silly addNameRange     '0.49.0',
27 silly addNameRange     '0.50.0',
27 silly addNameRange     '0.51.0',
27 silly addNameRange     '0.52.0',
27 silly addNameRange     '0.53.0',
27 silly addNameRange     '0.54.0',
27 silly addNameRange     '0.55.0',
27 silly addNameRange     '0.56.0',
27 silly addNameRange     '0.57.0',
27 silly addNameRange     '0.58.0',
27 silly addNameRange     '0.59.0',
27 silly addNameRange     '0.60.0',
27 silly addNameRange     '0.61.0',
27 silly addNameRange     '0.61.1',
27 silly addNameRange     '0.62.0',
27 silly addNameRange     '0.63.0',
27 silly addNameRange     '0.64.0',
27 silly addNameRange     '0.65.0' ] ]
28 verbose addNamed [ 'fh-nodeapp', '0.65.0' ]
29 verbose addNamed [ '0.65.0', '0.65.0' ]
30 silly lockFile def7f766-fh-nodeapp-0-65-0 fh-nodeapp@0.65.0
31 verbose lock fh-nodeapp@0.65.0 /Users/bmackey/.npm/def7f766-fh-nodeapp-0-65-0.lock
32 verbose read json /Users/bmackey/.npm/fh-nodeapp/0.65.0/package/package.json
33 warn package.json fh-nodeapp@0.65.0 No repository field.
34 warn package.json fh-nodeapp@0.65.0 No readme data.
35 silly lockFile def7f766-fh-nodeapp-0-65-0 fh-nodeapp@0.65.0
36 silly lockFile def7f766-fh-nodeapp-0-65-0 fh-nodeapp@0.65.0
37 silly lockFile e7526326-fh-nodeapp fh-nodeapp@*
38 silly lockFile e7526326-fh-nodeapp fh-nodeapp@*
39 silly resolved [ { name: 'fh-nodeapp',
39 silly resolved     description: 'FeedHenry Node Application',
39 silly resolved     version: '0.65.0',
39 silly resolved     author: { name: 'FeedHenry', email: 'npm@feedhenry.com' },
39 silly resolved     main: './lib/fh-nodeapp.js',
39 silly resolved     directories: { lib: 'lib' },
39 silly resolved     engines: { node: '>=0.6' },
39 silly resolved     dependencies:
39 silly resolved      { 'fh-connect': '1.8.6',
39 silly resolved        async: '0.2.1',
39 silly resolved        redis: '0.8.2',
39 silly resolved        request: '2.12.0',
39 silly resolved        'fh-statsc': '*',
39 silly resolved        'fh-reportingclient': '*',
39 silly resolved        'fh-security': '*',
39 silly resolved        winston: '0.6.2',
39 silly resolved        moment: '2.0.0',
39 silly resolved        'fh-amqp-js': '*' },
39 silly resolved     readme: 'ERROR: No README data found!',
39 silly resolved     _id: 'fh-nodeapp@0.65.0',
39 silly resolved     _from: 'fh-nodeapp@*' } ]
40 info install fh-nodeapp@0.65.0 into /Users/bmackey/college/Project/App/xpoit/cloud
41 info installOne fh-nodeapp@0.65.0
42 verbose from cache /Users/bmackey/.npm/fh-nodeapp/0.65.0/package/package.json
43 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp unbuild
44 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
45 verbose tar unpack /Users/bmackey/.npm/fh-nodeapp/0.65.0/package.tgz
46 silly lockFile e78e3081-it-cloud-node-modules-fh-nodeapp tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
47 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp /Users/bmackey/.npm/e78e3081-it-cloud-node-modules-fh-nodeapp.lock
48 silly lockFile f7c28bd0-pm-fh-nodeapp-0-65-0-package-tgz tar:///Users/bmackey/.npm/fh-nodeapp/0.65.0/package.tgz
49 verbose lock tar:///Users/bmackey/.npm/fh-nodeapp/0.65.0/package.tgz /Users/bmackey/.npm/f7c28bd0-pm-fh-nodeapp-0-65-0-package-tgz.lock
50 silly gunzTarPerm modes [ '755', '644' ]
51 silly gunzTarPerm extractEntry package.json
52 silly gunzTarPerm extractEntry VERSION.txt
53 silly gunzTarPerm extractEntry lib/authenticate.js
54 silly gunzTarPerm extractEntry lib/feedhenry.js
55 silly gunzTarPerm extractEntry lib/fh-nodeapp.js
56 silly gunzTarPerm extractEntry lib/fh-reports.js
57 silly gunzTarPerm extractEntry lib/consolelogger.js
58 silly gunzTarPerm extractEntry lib/fhserver.js
59 silly gunzTarPerm extractEntry lib/hostapp.js
60 silly gunzTarPerm extractEntry lib/message.js
61 silly gunzTarPerm extractEntry lib/sync-srv.js
62 silly gunzTarPerm extractEntry lib/urbanairship.js
63 silly gunzTarPerm extractEntry lib/fhhelpers.js
64 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
65 silly lockFile e78e3081-it-cloud-node-modules-fh-nodeapp tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
66 silly lockFile e78e3081-it-cloud-node-modules-fh-nodeapp tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
67 silly lockFile f7c28bd0-pm-fh-nodeapp-0-65-0-package-tgz tar:///Users/bmackey/.npm/fh-nodeapp/0.65.0/package.tgz
68 silly lockFile f7c28bd0-pm-fh-nodeapp-0-65-0-package-tgz tar:///Users/bmackey/.npm/fh-nodeapp/0.65.0/package.tgz
69 info preinstall fh-nodeapp@0.65.0
70 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
71 verbose readDependencies using package.json deps
72 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
73 verbose readDependencies using package.json deps
74 verbose cache add [ 'fh-connect@1.8.6', null ]
75 verbose cache add name=undefined spec="fh-connect@1.8.6" args=["fh-connect@1.8.6",null]
76 verbose parsed url { protocol: null,
76 verbose parsed url   slashes: null,
76 verbose parsed url   auth: null,
76 verbose parsed url   host: null,
76 verbose parsed url   port: null,
76 verbose parsed url   hostname: null,
76 verbose parsed url   hash: null,
76 verbose parsed url   search: null,
76 verbose parsed url   query: null,
76 verbose parsed url   pathname: 'fh-connect@1.8.6',
76 verbose parsed url   path: 'fh-connect@1.8.6',
76 verbose parsed url   href: 'fh-connect@1.8.6' }
77 verbose cache add name="fh-connect" spec="1.8.6" args=["fh-connect","1.8.6"]
78 verbose parsed url { protocol: null,
78 verbose parsed url   slashes: null,
78 verbose parsed url   auth: null,
78 verbose parsed url   host: null,
78 verbose parsed url   port: null,
78 verbose parsed url   hostname: null,
78 verbose parsed url   hash: null,
78 verbose parsed url   search: null,
78 verbose parsed url   query: null,
78 verbose parsed url   pathname: '1.8.6',
78 verbose parsed url   path: '1.8.6',
78 verbose parsed url   href: '1.8.6' }
79 verbose addNamed [ 'fh-connect', '1.8.6' ]
80 verbose addNamed [ '1.8.6', '1.8.6' ]
81 silly lockFile 314113b8-fh-connect-1-8-6 fh-connect@1.8.6
82 verbose lock fh-connect@1.8.6 /Users/bmackey/.npm/314113b8-fh-connect-1-8-6.lock
83 verbose cache add [ 'async@0.2.1', null ]
84 verbose cache add name=undefined spec="async@0.2.1" args=["async@0.2.1",null]
85 verbose parsed url { protocol: null,
85 verbose parsed url   slashes: null,
85 verbose parsed url   auth: null,
85 verbose parsed url   host: null,
85 verbose parsed url   port: null,
85 verbose parsed url   hostname: null,
85 verbose parsed url   hash: null,
85 verbose parsed url   search: null,
85 verbose parsed url   query: null,
85 verbose parsed url   pathname: 'async@0.2.1',
85 verbose parsed url   path: 'async@0.2.1',
85 verbose parsed url   href: 'async@0.2.1' }
86 verbose cache add name="async" spec="0.2.1" args=["async","0.2.1"]
87 verbose parsed url { protocol: null,
87 verbose parsed url   slashes: null,
87 verbose parsed url   auth: null,
87 verbose parsed url   host: null,
87 verbose parsed url   port: null,
87 verbose parsed url   hostname: null,
87 verbose parsed url   hash: null,
87 verbose parsed url   search: null,
87 verbose parsed url   query: null,
87 verbose parsed url   pathname: '0.2.1',
87 verbose parsed url   path: '0.2.1',
87 verbose parsed url   href: '0.2.1' }
88 verbose addNamed [ 'async', '0.2.1' ]
89 verbose addNamed [ '0.2.1', '0.2.1' ]
90 silly lockFile 64d41f22-async-0-2-1 async@0.2.1
91 verbose lock async@0.2.1 /Users/bmackey/.npm/64d41f22-async-0-2-1.lock
92 verbose cache add [ 'redis@0.8.2', null ]
93 verbose cache add name=undefined spec="redis@0.8.2" args=["redis@0.8.2",null]
94 verbose parsed url { protocol: null,
94 verbose parsed url   slashes: null,
94 verbose parsed url   auth: null,
94 verbose parsed url   host: null,
94 verbose parsed url   port: null,
94 verbose parsed url   hostname: null,
94 verbose parsed url   hash: null,
94 verbose parsed url   search: null,
94 verbose parsed url   query: null,
94 verbose parsed url   pathname: 'redis@0.8.2',
94 verbose parsed url   path: 'redis@0.8.2',
94 verbose parsed url   href: 'redis@0.8.2' }
95 verbose cache add name="redis" spec="0.8.2" args=["redis","0.8.2"]
96 verbose parsed url { protocol: null,
96 verbose parsed url   slashes: null,
96 verbose parsed url   auth: null,
96 verbose parsed url   host: null,
96 verbose parsed url   port: null,
96 verbose parsed url   hostname: null,
96 verbose parsed url   hash: null,
96 verbose parsed url   search: null,
96 verbose parsed url   query: null,
96 verbose parsed url   pathname: '0.8.2',
96 verbose parsed url   path: '0.8.2',
96 verbose parsed url   href: '0.8.2' }
97 verbose addNamed [ 'redis', '0.8.2' ]
98 verbose addNamed [ '0.8.2', '0.8.2' ]
99 silly lockFile 0e7a726c-redis-0-8-2 redis@0.8.2
100 verbose lock redis@0.8.2 /Users/bmackey/.npm/0e7a726c-redis-0-8-2.lock
101 verbose cache add [ 'request@2.12.0', null ]
102 verbose cache add name=undefined spec="request@2.12.0" args=["request@2.12.0",null]
103 verbose parsed url { protocol: null,
103 verbose parsed url   slashes: null,
103 verbose parsed url   auth: null,
103 verbose parsed url   host: null,
103 verbose parsed url   port: null,
103 verbose parsed url   hostname: null,
103 verbose parsed url   hash: null,
103 verbose parsed url   search: null,
103 verbose parsed url   query: null,
103 verbose parsed url   pathname: 'request@2.12.0',
103 verbose parsed url   path: 'request@2.12.0',
103 verbose parsed url   href: 'request@2.12.0' }
104 verbose cache add name="request" spec="2.12.0" args=["request","2.12.0"]
105 verbose parsed url { protocol: null,
105 verbose parsed url   slashes: null,
105 verbose parsed url   auth: null,
105 verbose parsed url   host: null,
105 verbose parsed url   port: null,
105 verbose parsed url   hostname: null,
105 verbose parsed url   hash: null,
105 verbose parsed url   search: null,
105 verbose parsed url   query: null,
105 verbose parsed url   pathname: '2.12.0',
105 verbose parsed url   path: '2.12.0',
105 verbose parsed url   href: '2.12.0' }
106 verbose addNamed [ 'request', '2.12.0' ]
107 verbose addNamed [ '2.12.0', '2.12.0' ]
108 silly lockFile ba282548-request-2-12-0 request@2.12.0
109 verbose lock request@2.12.0 /Users/bmackey/.npm/ba282548-request-2-12-0.lock
110 verbose cache add [ 'fh-statsc@*', null ]
111 verbose cache add name=undefined spec="fh-statsc@*" args=["fh-statsc@*",null]
112 verbose parsed url { protocol: null,
112 verbose parsed url   slashes: null,
112 verbose parsed url   auth: null,
112 verbose parsed url   host: null,
112 verbose parsed url   port: null,
112 verbose parsed url   hostname: null,
112 verbose parsed url   hash: null,
112 verbose parsed url   search: null,
112 verbose parsed url   query: null,
112 verbose parsed url   pathname: 'fh-statsc@*',
112 verbose parsed url   path: 'fh-statsc@*',
112 verbose parsed url   href: 'fh-statsc@*' }
113 verbose cache add name="fh-statsc" spec="*" args=["fh-statsc","*"]
114 verbose parsed url { protocol: null,
114 verbose parsed url   slashes: null,
114 verbose parsed url   auth: null,
114 verbose parsed url   host: null,
114 verbose parsed url   port: null,
114 verbose parsed url   hostname: null,
114 verbose parsed url   hash: null,
114 verbose parsed url   search: null,
114 verbose parsed url   query: null,
114 verbose parsed url   pathname: '*',
114 verbose parsed url   path: '*',
114 verbose parsed url   href: '*' }
115 verbose addNamed [ 'fh-statsc', '*' ]
116 verbose addNamed [ null, '' ]
117 silly lockFile ab8762f1-fh-statsc fh-statsc@*
118 verbose lock fh-statsc@* /Users/bmackey/.npm/ab8762f1-fh-statsc.lock
119 silly addNameRange { name: 'fh-statsc', range: '', hasData: false }
120 verbose cache add [ 'fh-reportingclient@*', null ]
121 verbose cache add name=undefined spec="fh-reportingclient@*" args=["fh-reportingclient@*",null]
122 verbose parsed url { protocol: null,
122 verbose parsed url   slashes: null,
122 verbose parsed url   auth: null,
122 verbose parsed url   host: null,
122 verbose parsed url   port: null,
122 verbose parsed url   hostname: null,
122 verbose parsed url   hash: null,
122 verbose parsed url   search: null,
122 verbose parsed url   query: null,
122 verbose parsed url   pathname: 'fh-reportingclient@*',
122 verbose parsed url   path: 'fh-reportingclient@*',
122 verbose parsed url   href: 'fh-reportingclient@*' }
123 verbose cache add name="fh-reportingclient" spec="*" args=["fh-reportingclient","*"]
124 verbose parsed url { protocol: null,
124 verbose parsed url   slashes: null,
124 verbose parsed url   auth: null,
124 verbose parsed url   host: null,
124 verbose parsed url   port: null,
124 verbose parsed url   hostname: null,
124 verbose parsed url   hash: null,
124 verbose parsed url   search: null,
124 verbose parsed url   query: null,
124 verbose parsed url   pathname: '*',
124 verbose parsed url   path: '*',
124 verbose parsed url   href: '*' }
125 verbose addNamed [ 'fh-reportingclient', '*' ]
126 verbose addNamed [ null, '' ]
127 silly lockFile 501eba9c-fh-reportingclient fh-reportingclient@*
128 verbose lock fh-reportingclient@* /Users/bmackey/.npm/501eba9c-fh-reportingclient.lock
129 verbose cache add [ 'fh-security@*', null ]
130 verbose cache add name=undefined spec="fh-security@*" args=["fh-security@*",null]
131 verbose parsed url { protocol: null,
131 verbose parsed url   slashes: null,
131 verbose parsed url   auth: null,
131 verbose parsed url   host: null,
131 verbose parsed url   port: null,
131 verbose parsed url   hostname: null,
131 verbose parsed url   hash: null,
131 verbose parsed url   search: null,
131 verbose parsed url   query: null,
131 verbose parsed url   pathname: 'fh-security@*',
131 verbose parsed url   path: 'fh-security@*',
131 verbose parsed url   href: 'fh-security@*' }
132 verbose cache add name="fh-security" spec="*" args=["fh-security","*"]
133 verbose parsed url { protocol: null,
133 verbose parsed url   slashes: null,
133 verbose parsed url   auth: null,
133 verbose parsed url   host: null,
133 verbose parsed url   port: null,
133 verbose parsed url   hostname: null,
133 verbose parsed url   hash: null,
133 verbose parsed url   search: null,
133 verbose parsed url   query: null,
133 verbose parsed url   pathname: '*',
133 verbose parsed url   path: '*',
133 verbose parsed url   href: '*' }
134 verbose addNamed [ 'fh-security', '*' ]
135 verbose addNamed [ null, '' ]
136 silly lockFile 8123d62d-fh-security fh-security@*
137 verbose lock fh-security@* /Users/bmackey/.npm/8123d62d-fh-security.lock
138 verbose cache add [ 'winston@0.6.2', null ]
139 verbose cache add name=undefined spec="winston@0.6.2" args=["winston@0.6.2",null]
140 verbose parsed url { protocol: null,
140 verbose parsed url   slashes: null,
140 verbose parsed url   auth: null,
140 verbose parsed url   host: null,
140 verbose parsed url   port: null,
140 verbose parsed url   hostname: null,
140 verbose parsed url   hash: null,
140 verbose parsed url   search: null,
140 verbose parsed url   query: null,
140 verbose parsed url   pathname: 'winston@0.6.2',
140 verbose parsed url   path: 'winston@0.6.2',
140 verbose parsed url   href: 'winston@0.6.2' }
141 verbose cache add name="winston" spec="0.6.2" args=["winston","0.6.2"]
142 verbose parsed url { protocol: null,
142 verbose parsed url   slashes: null,
142 verbose parsed url   auth: null,
142 verbose parsed url   host: null,
142 verbose parsed url   port: null,
142 verbose parsed url   hostname: null,
142 verbose parsed url   hash: null,
142 verbose parsed url   search: null,
142 verbose parsed url   query: null,
142 verbose parsed url   pathname: '0.6.2',
142 verbose parsed url   path: '0.6.2',
142 verbose parsed url   href: '0.6.2' }
143 verbose addNamed [ 'winston', '0.6.2' ]
144 verbose addNamed [ '0.6.2', '0.6.2' ]
145 silly lockFile 6b025e09-winston-0-6-2 winston@0.6.2
146 verbose lock winston@0.6.2 /Users/bmackey/.npm/6b025e09-winston-0-6-2.lock
147 silly addNameRange { name: 'fh-reportingclient', range: '', hasData: false }
148 silly addNameRange { name: 'fh-security', range: '', hasData: false }
149 verbose cache add [ 'moment@2.0.0', null ]
150 verbose cache add name=undefined spec="moment@2.0.0" args=["moment@2.0.0",null]
151 verbose parsed url { protocol: null,
151 verbose parsed url   slashes: null,
151 verbose parsed url   auth: null,
151 verbose parsed url   host: null,
151 verbose parsed url   port: null,
151 verbose parsed url   hostname: null,
151 verbose parsed url   hash: null,
151 verbose parsed url   search: null,
151 verbose parsed url   query: null,
151 verbose parsed url   pathname: 'moment@2.0.0',
151 verbose parsed url   path: 'moment@2.0.0',
151 verbose parsed url   href: 'moment@2.0.0' }
152 verbose cache add name="moment" spec="2.0.0" args=["moment","2.0.0"]
153 verbose parsed url { protocol: null,
153 verbose parsed url   slashes: null,
153 verbose parsed url   auth: null,
153 verbose parsed url   host: null,
153 verbose parsed url   port: null,
153 verbose parsed url   hostname: null,
153 verbose parsed url   hash: null,
153 verbose parsed url   search: null,
153 verbose parsed url   query: null,
153 verbose parsed url   pathname: '2.0.0',
153 verbose parsed url   path: '2.0.0',
153 verbose parsed url   href: '2.0.0' }
154 verbose addNamed [ 'moment', '2.0.0' ]
155 verbose addNamed [ '2.0.0', '2.0.0' ]
156 silly lockFile 43720542-moment-2-0-0 moment@2.0.0
157 verbose lock moment@2.0.0 /Users/bmackey/.npm/43720542-moment-2-0-0.lock
158 verbose cache add [ 'fh-amqp-js@*', null ]
159 verbose cache add name=undefined spec="fh-amqp-js@*" args=["fh-amqp-js@*",null]
160 verbose parsed url { protocol: null,
160 verbose parsed url   slashes: null,
160 verbose parsed url   auth: null,
160 verbose parsed url   host: null,
160 verbose parsed url   port: null,
160 verbose parsed url   hostname: null,
160 verbose parsed url   hash: null,
160 verbose parsed url   search: null,
160 verbose parsed url   query: null,
160 verbose parsed url   pathname: 'fh-amqp-js@*',
160 verbose parsed url   path: 'fh-amqp-js@*',
160 verbose parsed url   href: 'fh-amqp-js@*' }
161 verbose cache add name="fh-amqp-js" spec="*" args=["fh-amqp-js","*"]
162 verbose parsed url { protocol: null,
162 verbose parsed url   slashes: null,
162 verbose parsed url   auth: null,
162 verbose parsed url   host: null,
162 verbose parsed url   port: null,
162 verbose parsed url   hostname: null,
162 verbose parsed url   hash: null,
162 verbose parsed url   search: null,
162 verbose parsed url   query: null,
162 verbose parsed url   pathname: '*',
162 verbose parsed url   path: '*',
162 verbose parsed url   href: '*' }
163 verbose addNamed [ 'fh-amqp-js', '*' ]
164 verbose addNamed [ null, '' ]
165 silly lockFile bc47418e-fh-amqp-js fh-amqp-js@*
166 verbose lock fh-amqp-js@* /Users/bmackey/.npm/bc47418e-fh-amqp-js.lock
167 silly addNameRange { name: 'fh-amqp-js', range: '', hasData: false }
168 verbose registry.get fh-connect/1.8.6 not expired, no request
169 verbose registry.get async/0.2.1 not expired, no request
170 verbose read json /Users/bmackey/.npm/fh-connect/1.8.6/package/package.json
171 verbose registry.get redis/0.8.2 not expired, no request
172 verbose registry.get fh-statsc not expired, no request
173 silly addNameRange number 2 { name: 'fh-statsc', range: '', hasData: true }
174 silly addNameRange versions [ 'fh-statsc', [ '0.2.0-BUILD-NUMBER', '0.2.0', '0.2.1' ] ]
175 verbose addNamed [ 'fh-statsc', '0.2.1' ]
176 verbose addNamed [ '0.2.1', '0.2.1' ]
177 silly lockFile 6ee147d2-fh-statsc-0-2-1 fh-statsc@0.2.1
178 verbose lock fh-statsc@0.2.1 /Users/bmackey/.npm/6ee147d2-fh-statsc-0-2-1.lock
179 verbose registry.get request/2.12.0 not expired, no request
180 verbose read json /Users/bmackey/.npm/async/0.2.1/package/package.json
181 verbose read json /Users/bmackey/.npm/redis/0.8.2/package/package.json
182 verbose read json /Users/bmackey/.npm/request/2.12.0/package/package.json
183 verbose registry.get fh-security not expired, no request
184 silly addNameRange number 2 { name: 'fh-security', range: '', hasData: true }
185 silly addNameRange versions [ 'fh-security', [ '0.1.0-1', '0.1.1-2', '0.1.2-3' ] ]
186 verbose addNamed [ 'fh-security', '0.1.2-3' ]
187 verbose addNamed [ '0.1.2-3', '0.1.2-3' ]
188 silly lockFile 9de8dd99-fh-security-0-1-2-3 fh-security@0.1.2-3
189 verbose lock fh-security@0.1.2-3 /Users/bmackey/.npm/9de8dd99-fh-security-0-1-2-3.lock
190 verbose registry.get winston/0.6.2 not expired, no request
191 verbose registry.get fh-reportingclient not expired, no request
192 silly addNameRange number 2 { name: 'fh-reportingclient', range: '', hasData: true }
193 silly addNameRange versions [ 'fh-reportingclient', [ '0.1.1', '0.2.1', '0.2.2' ] ]
194 verbose addNamed [ 'fh-reportingclient', '0.2.2' ]
195 verbose addNamed [ '0.2.2', '0.2.2' ]
196 silly lockFile e2412720-fh-reportingclient-0-2-2 fh-reportingclient@0.2.2
197 verbose lock fh-reportingclient@0.2.2 /Users/bmackey/.npm/e2412720-fh-reportingclient-0-2-2.lock
198 verbose read json /Users/bmackey/.npm/fh-statsc/0.2.1/package/package.json
199 verbose read json /Users/bmackey/.npm/winston/0.6.2/package/package.json
200 verbose registry.get moment/2.0.0 not expired, no request
201 verbose registry.get fh-amqp-js not expired, no request
202 silly addNameRange number 2 { name: 'fh-amqp-js', range: '', hasData: true }
203 silly addNameRange versions [ 'fh-amqp-js',
203 silly addNameRange   [ '0.1.0', '0.1.1', '0.1.2', '0.2.0', '0.2.1' ] ]
204 verbose addNamed [ 'fh-amqp-js', '0.2.1' ]
205 verbose addNamed [ '0.2.1', '0.2.1' ]
206 silly lockFile 40cb0633-fh-amqp-js-0-2-1 fh-amqp-js@0.2.1
207 verbose lock fh-amqp-js@0.2.1 /Users/bmackey/.npm/40cb0633-fh-amqp-js-0-2-1.lock
208 verbose read json /Users/bmackey/.npm/fh-security/0.1.2-3/package/package.json
209 verbose read json /Users/bmackey/.npm/fh-reportingclient/0.2.2/package/package.json
210 verbose read json /Users/bmackey/.npm/moment/2.0.0/package/package.json
211 verbose read json /Users/bmackey/.npm/fh-amqp-js/0.2.1/package/package.json
212 warn package.json fh-statsc@0.2.1 No repository field.
213 warn package.json fh-statsc@0.2.1 No readme data.
214 silly lockFile 6ee147d2-fh-statsc-0-2-1 fh-statsc@0.2.1
215 silly lockFile 6ee147d2-fh-statsc-0-2-1 fh-statsc@0.2.1
216 warn package.json fh-security@0.1.2-3 No readme data.
217 silly lockFile 9de8dd99-fh-security-0-1-2-3 fh-security@0.1.2-3
218 silly lockFile 9de8dd99-fh-security-0-1-2-3 fh-security@0.1.2-3
219 warn package.json fh-reportingclient@0.2.2 No repository field.
220 warn package.json fh-reportingclient@0.2.2 No readme data.
221 silly lockFile e2412720-fh-reportingclient-0-2-2 fh-reportingclient@0.2.2
222 silly lockFile e2412720-fh-reportingclient-0-2-2 fh-reportingclient@0.2.2
223 silly lockFile ab8762f1-fh-statsc fh-statsc@*
224 silly lockFile ab8762f1-fh-statsc fh-statsc@*
225 silly lockFile 314113b8-fh-connect-1-8-6 fh-connect@1.8.6
226 silly lockFile 314113b8-fh-connect-1-8-6 fh-connect@1.8.6
227 silly lockFile 8123d62d-fh-security fh-security@*
228 silly lockFile 8123d62d-fh-security fh-security@*
229 silly lockFile 64d41f22-async-0-2-1 async@0.2.1
230 silly lockFile 64d41f22-async-0-2-1 async@0.2.1
231 silly lockFile 0e7a726c-redis-0-8-2 redis@0.8.2
232 silly lockFile 0e7a726c-redis-0-8-2 redis@0.8.2
233 silly lockFile ba282548-request-2-12-0 request@2.12.0
234 silly lockFile ba282548-request-2-12-0 request@2.12.0
235 silly lockFile 501eba9c-fh-reportingclient fh-reportingclient@*
236 silly lockFile 501eba9c-fh-reportingclient fh-reportingclient@*
237 silly lockFile 6b025e09-winston-0-6-2 winston@0.6.2
238 silly lockFile 6b025e09-winston-0-6-2 winston@0.6.2
239 silly lockFile 43720542-moment-2-0-0 moment@2.0.0
240 silly lockFile 43720542-moment-2-0-0 moment@2.0.0
241 warn package.json fh-amqp-js@0.2.1 No repository field.
242 silly lockFile 40cb0633-fh-amqp-js-0-2-1 fh-amqp-js@0.2.1
243 silly lockFile 40cb0633-fh-amqp-js-0-2-1 fh-amqp-js@0.2.1
244 silly lockFile bc47418e-fh-amqp-js fh-amqp-js@*
245 silly lockFile bc47418e-fh-amqp-js fh-amqp-js@*
246 silly resolved [ { name: 'fh-statsc',
246 silly resolved     description: 'FeedHenry Stats Client',
246 silly resolved     version: '0.2.1',
246 silly resolved     author: { name: 'Martin Murphy', email: 'martin.murphy@feedhenry.com' },
246 silly resolved     main: 'lib/stats.js',
246 silly resolved     directories: { lib: 'bin' },
246 silly resolved     scripts: { test: 'rm -rf lib-cov && node-jscoverage lib lib-cov && NODE_PATH=$PWD/lib-cov expresso ' },
246 silly resolved     engines: { node: '*' },
246 silly resolved     bin: { 'fh-statsc': './bin/fh-statsc.js' },
246 silly resolved     dependencies: { async: '0.2.9' },
246 silly resolved     devDependencies: { proxyquire: '0.4.1' },
246 silly resolved     man: [ './man/fh-statsc.1' ],
246 silly resolved     preferGlobal: 'true',
246 silly resolved     readme: 'ERROR: No README data found!',
246 silly resolved     _id: 'fh-statsc@0.2.1',
246 silly resolved     _from: 'fh-statsc@*' },
246 silly resolved   { name: 'fh-connect',
246 silly resolved     version: '1.8.6',
246 silly resolved     description: 'FeedHenry published version of connect 1.8.6 with the \'formidable\' bugfix',
246 silly resolved     keywords: [ 'framework', 'web', 'middleware', 'connect', 'rack' ],
246 silly resolved     repository: { type: 'git', url: 'git://github.com/feedhenry/fh-connect' },
246 silly resolved     author:
246 silly resolved      { name: 'FeedHenry',
246 silly resolved        email: 'npm@feedhenry.com',
246 silly resolved        url: 'http://feedhenry.com' },
246 silly resolved     dependencies: { qs: '>= 0.4.0', mime: '>= 0.0.1', formidable: '1.0.11' },
246 silly resolved     devDependencies:
246 silly resolved      { expresso: '0.9.2',
246 silly resolved        koala: '0.1.2',
246 silly resolved        less: '1.1.1',
246 silly resolved        sass: '0.5.0',
246 silly resolved        markdown: '0.2.1',
246 silly resolved        ejs: '0.4.3',
246 silly resolved        should: '0.3.2' },
246 silly resolved     main: 'index',
246 silly resolved     engines: { node: '>= 0.6.0 < 0.9.0' },
246 silly resolved     readme: '\n# Connect\n\n  Connect is an extensible HTTP server framework for [node](http://nodejs.org), providing high performance "plugins" known as _middleware_.\n\n Connect is bundled with over _14_ commonly used middleware, including\n a logger, session support, cookie parser, and [more](http://senchalabs.github.com/connect). Be sure to view the 1.0 [documentation](http://senchalabs.github.com/connect/).\n\n## Middleware\n\n  - csrf\n  - basicAuth\n  - bodyParser\n  - cookieParser\n  - directory\n  - errorHandler\n  - favicon\n  - limit\n  - logger\n  - methodOverride\n  - query\n  - responsetime\n  - session\n  - static\n  - staticCache\n  - vhost\n\n## Static file serving\n\n The benchmarks below show the `static()` middleware\n requests per second vs `static()` with the `staticCache()`\n cache layer, out performing other popular node modules,\n while maintaining more features like Range request etc.\n\n  - static(): 2700 rps\n  - node-static: 5300 rps\n  - static() + staticCache(): 7500 rps\n\n## Running Tests\n\nfirst:\n\n    $ npm install -d\n\nthen:\n\n    $ make test\n\n## Authors\n\n Below is the output from [git-summary](http://github.com/visionmedia/git-extras).\n\n     project: connect\n     commits: 1616\n     files  : 168\n     authors: \n      1086\tTj Holowaychuk\n       298\tvisionmedia\n       191\tTim Caswell\n         8\tAstro\n         5\tNathan Rajlich\n         4\tJakub Nešetřil\n         3\tAlexander Simmerl\n         2\tJacques Crocker\n         2\tAndreas Lind Petersen\n         2\tFabian Jakobs\n         2\tAaron Heckmann\n         2\tJames Campos\n         1\tnateps\n         1\tGregory McWhirter\n         1\tAdam Malcontenti-Wilson\n         1\tJoshua Peek\n         1\tJxck\n         1\tEran Hammer-Lahav\n         1\tTJ Holowaychuk\n         1\tBart Teeuwisse\n         1\tAseem Kishore\n         1\tGuillermo Rauch\n         1\tJakub Nesetril\n\n\n## Node Compatibility\n\n  Connect `< 1.x` is compatible with node 0.2.x\n\n\n  Connect `1.x` is compatible with node 0.4.x and 0.6.x\n\n\n  Connect `2.x` (master) will be compatible with node 0.6.x\n\n## CLA\n\n [http://code.google.com/legal/individual-cla-v1.0.html](http://code.google.com/legal/individual-cla-v1.0.html)\n\n## License\n\nView the [LICENSE](https://github.com/senchalabs/connect/blob/master/LICENSE) file. The [Silk](http://www.famfamfam.com/lab/icons/silk/) icons used by the `directory` middleware created by/copyright of [FAMFAMFAM](http://www.famfamfam.com/).',
246 silly resolved     readmeFilename: 'Readme.md',
246 silly resolved     bugs: { url: 'https://github.com/feedhenry/fh-connect/issues' },
246 silly resolved     _id: 'fh-connect@1.8.6',
246 silly resolved     _from: 'fh-connect@1.8.6' },
246 silly resolved   { name: 'fh-security',
246 silly resolved     description: 'FeedHenry Security Library',
246 silly resolved     version: '0.1.2-3',
246 silly resolved     repository: { type: 'git', url: 'git@github.com:fheng/fh-security.git' },
246 silly resolved     author: { name: 'Wei Li', email: 'wei.li@feedhenry.com' },
246 silly resolved     main: './lib/security.js',
246 silly resolved     directories: { lib: './lib/' },
246 silly resolved     scripts: { test: 'expresso -I lib' },
246 silly resolved     engines: { node: '*' },
246 silly resolved     optionalDependencies: { ursa: '*' },
246 silly resolved     bugs: { url: 'https://github.com/fheng/fh-security/issues' },
246 silly resolved     readme: 'ERROR: No README data found!',
246 silly resolved     dependencies: { ursa: '*' },
246 silly resolved     _id: 'fh-security@0.1.2-3',
246 silly resolved     _from: 'fh-security@*' },
246 silly resolved   { name: 'async',
246 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
246 silly resolved     main: './lib/async',
246 silly resolved     author: { name: 'Caolan McMahon' },
246 silly resolved     version: '0.2.1',
246 silly resolved     repository: { type: 'git', url: 'http://github.com/caolan/async.git' },
246 silly resolved     bugs: { url: 'http://github.com/caolan/async/issues' },
246 silly resolved     licenses: [ [Object] ],
246 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
246 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser.\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, forEach…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n\n## Download\n\nReleases are available for download from\n[GitHub](http://github.com/caolan/async/downloads).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 17.5kb Uncompressed\n\n__Production:__ [async.min.js](https://github.com/caolan/async/raw/master/dist/async.min.js) - 1.7kb Packed and Gzipped\n\n\n## In the Browser\n\nSo far its been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [forEach](#forEach)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [waterfall](#waterfall)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n### forEach(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the forEach function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has completed.\n  If no error has occured, the callback should be run without arguments or \n  with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.forEach(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n### forEachSeries(arr, iterator, callback)\n\nThe same as forEach only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n### forEachLimit(arr, limit, iterator, callback)\n\nThe same as forEach only the iterator is applied to batches of items in the\narray, in series. The next batch of iterators is only called once the current\none has completed processing.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - How many items should be in each batch.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n  If no error has occured, the callback should be run without arguments or \n  with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.forEachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only the iterator is applied to batches of items in the\narray, in series. The next batch of iterators is only called once the current\none has completed processing.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - How many items should be in each batch.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n  If no error has occured, the callback should be run without arguments or \n  with an explicit null argument.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called with a boolean argument\n  once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then its probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback which accepts an optional error as its first argument, and the state\n  of the reduction as the second. If an error is passed to the callback, the\n  reduction is stopped and the main callback is immediately called with the\n  error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called with a boolean argument\n  once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a value to use as the sort criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called with a boolean argument\n  once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called with a boolean argument\n  once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed a\n  callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed a\n  callback it must call on completion.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback which must be called once it has completed with an optional\n  error as the first argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing queued\n  tasks.\n* payload - An optional integer for determining how many tasks should be\n  process per round, default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The\n  syntax is easier to understand by looking at the example.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. If all tasks complete\n  successfully, it will receive an object containing their results.\n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. Its also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
246 silly resolved     readmeFilename: 'README.md',
246 silly resolved     _id: 'async@0.2.1',
246 silly resolved     _from: 'async@0.2.1' },
246 silly resolved   { author: { name: 'Martin Murphy', email: 'martin.murphy@feedhenry.com' },
246 silly resolved     name: 'fh-reportingclient',
246 silly resolved     keywords: [ 'fh-reporting', 'feedhenry' ],
246 silly resolved     description: 'FH Reporting Client',
246 silly resolved     version: '0.2.2',
246 silly resolved     directories: { lib: './lib' },
246 silly resolved     main: './lib/fh-reporting.js',
246 silly resolved     scripts: { test: 'expresso -I lib' },
246 silly resolved     engines: { node: '>=0.4.12' },
246 silly resolved     dependencies: { async: '0.1.16', request: '2.9.100' },
246 silly resolved     man: [ './man/fh-reportingclient.1' ],
246 silly resolved     readme: 'ERROR: No README data found!',
246 silly resolved     _id: 'fh-reportingclient@0.2.2',
246 silly resolved     _from: 'fh-reportingclient@*' },
246 silly resolved   { name: 'redis',
246 silly resolved     version: '0.8.2',
246 silly resolved     description: 'Redis client library',
246 silly resolved     keywords: [ 'redis', 'database' ],
246 silly resolved     author: { name: 'Matt Ranney', email: 'mjr@ranney.com' },
246 silly resolved     main: './index.js',
246 silly resolved     scripts: { test: 'node ./test.js' },
246 silly resolved     devDependencies: { metrics: '>=0.1.5' },
246 silly resolved     repository: { type: 'git', url: 'git://github.com/mranney/node_redis.git' },
246 silly resolved     readme: 'redis - a node.js redis client\n===========================\n\nThis is a complete Redis client for node.js.  It supports all Redis commands, including many recently added commands like EVAL from\nexperimental Redis server branches.\n\n\nInstall with:\n\n    npm install redis\n\nPieter Noordhuis has provided a binding to the official `hiredis` C library, which is non-blocking and fast.  To use `hiredis`, do:\n\n    npm install hiredis redis\n\nIf `hiredis` is installed, `node_redis` will use it by default.  Otherwise, a pure JavaScript parser will be used.\n\nIf you use `hiredis`, be sure to rebuild it whenever you upgrade your version of node.  There are mysterious failures that can\nhappen between node and native code modules after a node upgrade.\n\n\n## Usage\n\nSimple example, included as `examples/simple.js`:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    // if you\'d like to select database 3, instead of 0 (default), call\n    // client.select(3, function() { /* ... */ });\n\n    client.on("error", function (err) {\n        console.log("Error " + err);\n    });\n\n    client.set("string key", "string val", redis.print);\n    client.hset("hash key", "hashtest 1", "some value", redis.print);\n    client.hset(["hash key", "hashtest 2", "some other value"], redis.print);\n    client.hkeys("hash key", function (err, replies) {\n        console.log(replies.length + " replies:");\n        replies.forEach(function (reply, i) {\n            console.log("    " + i + ": " + reply);\n        });\n        client.quit();\n    });\n```\n\nThis will display:\n\n    mjr:~/work/node_redis (master)$ node example.js\n    Reply: OK\n    Reply: 0\n    Reply: 0\n    2 replies:\n        0: hashtest 1\n        1: hashtest 2\n    mjr:~/work/node_redis (master)$\n\n\n## Performance\n\nHere are typical results of `multi_bench.js` which is similar to `redis-benchmark` from the Redis distribution.\nIt uses 50 concurrent connections with no pipelining.\n\nJavaScript parser:\n\n    PING: 20000 ops 42283.30 ops/sec 0/5/1.182\n    SET: 20000 ops 32948.93 ops/sec 1/7/1.515\n    GET: 20000 ops 28694.40 ops/sec 0/9/1.740\n    INCR: 20000 ops 39370.08 ops/sec 0/8/1.269\n    LPUSH: 20000 ops 36429.87 ops/sec 0/8/1.370\n    LRANGE (10 elements): 20000 ops 9891.20 ops/sec 1/9/5.048\n    LRANGE (100 elements): 20000 ops 1384.56 ops/sec 10/91/36.072\n\nhiredis parser:\n\n    PING: 20000 ops 46189.38 ops/sec 1/4/1.082\n    SET: 20000 ops 41237.11 ops/sec 0/6/1.210\n    GET: 20000 ops 39682.54 ops/sec 1/7/1.257\n    INCR: 20000 ops 40080.16 ops/sec 0/8/1.242\n    LPUSH: 20000 ops 41152.26 ops/sec 0/3/1.212\n    LRANGE (10 elements): 20000 ops 36563.07 ops/sec 1/8/1.363\n    LRANGE (100 elements): 20000 ops 21834.06 ops/sec 0/9/2.287\n\nThe performance of `node_redis` improves dramatically with pipelining, which happens automatically in most normal programs.\n\n\n### Sending Commands\n\nEach Redis command is exposed as a function on the `client` object.\nAll functions take either an `args` Array plus optional `callback` Function or\na variable number of individual arguments followed by an optional callback.\nHere is an example of passing an array of arguments and a callback:\n\n    client.mset(["test keys 1", "test val 1", "test keys 2", "test val 2"], function (err, res) {});\n\nHere is that same call in the second style:\n\n    client.mset("test keys 1", "test val 1", "test keys 2", "test val 2", function (err, res) {});\n\nNote that in either form the `callback` is optional:\n\n    client.set("some key", "some val");\n    client.set(["some other key", "some val"]);\n\nIf the key is missing, reply will be null (probably):\n\n    client.get("missingkey", function(err, reply) {\n        // reply is null when the key is missing\n        console.log(reply);\n    });\n\nFor a list of Redis commands, see [Redis Command Reference](http://redis.io/commands)\n\nThe commands can be specified in uppercase or lowercase for convenience.  `client.get()` is the same as `client.GET()`.\n\nMinimal parsing is done on the replies.  Commands that return a single line reply return JavaScript Strings,\ninteger replies return JavaScript Numbers, "bulk" replies return node Buffers, and "multi bulk" replies return a\nJavaScript Array of node Buffers.  `HGETALL` returns an Object with Buffers keyed by the hash keys.\n\n# API\n\n## Connection Events\n\n`client` will emit some events about the state of the connection to the Redis server.\n\n### "ready"\n\n`client` will emit `ready` a connection is established to the Redis server and the server reports\nthat it is ready to receive commands.  Commands issued before the `ready` event are queued,\nthen replayed just before this event is emitted.\n\n### "connect"\n\n`client` will emit `connect` at the same time as it emits `ready` unless `client.options.no_ready_check`\nis set.  If this options is set, `connect` will be emitted when the stream is connected, and then\nyou are free to try to send commands.\n\n### "error"\n\n`client` will emit `error` when encountering an error connecting to the Redis server.\n\nNote that "error" is a special event type in node.  If there are no listeners for an\n"error" event, node will exit.  This is usually what you want, but it can lead to some\ncryptic error messages like this:\n\n    mjr:~/work/node_redis (master)$ node example.js\n\n    node.js:50\n        throw e;\n        ^\n    Error: ECONNREFUSED, Connection refused\n        at IOWatcher.callback (net:870:22)\n        at node.js:607:9\n\nNot very useful in diagnosing the problem, but if your program isn\'t ready to handle this,\nit is probably the right thing to just exit.\n\n`client` will also emit `error` if an exception is thrown inside of `node_redis` for whatever reason.\nIt would be nice to distinguish these two cases.\n\n### "end"\n\n`client` will emit `end` when an established Redis server connection has closed.\n\n### "drain"\n\n`client` will emit `drain` when the TCP connection to the Redis server has been buffering, but is now\nwritable.  This event can be used to stream commands in to Redis and adapt to backpressure.  Right now,\nyou need to check `client.command_queue.length` to decide when to reduce your send rate.  Then you can\nresume sending when you get `drain`.\n\n### "idle"\n\n`client` will emit `idle` when there are no outstanding commands that are awaiting a response.\n\n## redis.createClient(port, host, options)\n\nCreate a new client connection.  `port` defaults to `6379` and `host` defaults\nto `127.0.0.1`.  If you have `redis-server` running on the same computer as node, then the defaults for\nport and host are probably fine.  `options` in an object with the following possible properties:\n\n* `parser`: which Redis protocol reply parser to use.  Defaults to `hiredis` if that module is installed.\nThis may also be set to `javascript`.\n* `return_buffers`: defaults to `false`.  If set to `true`, then all replies will be sent to callbacks as node Buffer\nobjects instead of JavaScript Strings.\n* `detect_buffers`: default to `false`. If set to `true`, then replies will be sent to callbacks as node Buffer objects\nif any of the input arguments to the original command were Buffer objects.\nThis option lets you switch between Buffers and Strings on a per-command basis, whereas `return_buffers` applies to\nevery command on a client.\n* `socket_nodelay`: defaults to `true`. Whether to call setNoDelay() on the TCP stream, which disables the\nNagle algorithm on the underlying socket.  Setting this option to `false` can result in additional throughput at the\ncost of more latency.  Most applications will want this set to `true`.\n* `no_ready_check`: defaults to `false`. When a connection is established to the Redis server, the server might still\nbe loading the database from disk.  While loading, the server not respond to any commands.  To work around this,\n`node_redis` has a "ready check" which sends the `INFO` command to the server.  The response from the `INFO` command\nindicates whether the server is ready for more commands.  When ready, `node_redis` emits a `ready` event.\nSetting `no_ready_check` to `true` will inhibit this check.\n* `enable_offline_queue`: defaults to `true`. By default, if there is no active\nconnection to the redis server, commands are added to a queue and are executed\nonce the connection has been established. Setting `enable_offline_queue` to\n`false` will disable this feature and the callback will be execute immediately\nwith an error, or an error will be thrown if no callback is specified.\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient(null, null, {detect_buffers: true});\n\n    client.set("foo_rand000000000000", "OK");\n\n    // This will return a JavaScript String\n    client.get("foo_rand000000000000", function (err, reply) {\n        console.log(reply.toString()); // Will print `OK`\n    });\n\n    // This will return a Buffer since original key is specified as a Buffer\n    client.get(new Buffer("foo_rand000000000000"), function (err, reply) {\n        console.log(reply.toString()); // Will print `<Buffer 4f 4b>`\n    });\n    client.end();\n```\n\n`createClient()` returns a `RedisClient` object that is named `client` in all of the examples here.\n\n## client.auth(password, callback)\n\nWhen connecting to Redis servers that require authentication, the `AUTH` command must be sent as the\nfirst command after connecting.  This can be tricky to coordinate with reconnections, the ready check,\netc.  To make this easier, `client.auth()` stashes `password` and will send it after each connection,\nincluding reconnections.  `callback` is invoked only once, after the response to the very first\n`AUTH` command sent.\nNOTE: Your call to `client.auth()` should not be inside the ready handler. If\nyou are doing this wrong, `client` will emit an error that looks\nsomething like this `Error: Ready check failed: ERR operation not permitted`.\n\n## client.end()\n\nForcibly close the connection to the Redis server.  Note that this does not wait until all replies have been parsed.\nIf you want to exit cleanly, call `client.quit()` to send the `QUIT` command after you have handled all replies.\n\nThis example closes the connection to the Redis server before the replies have been read.  You probably don\'t\nwant to do this:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    client.set("foo_rand000000000000", "some fantastic value");\n    client.get("foo_rand000000000000", function (err, reply) {\n        console.log(reply.toString());\n    });\n    client.end();\n```\n\n`client.end()` is useful for timeout cases where something is stuck or taking too long and you want\nto start over.\n\n## Friendlier hash commands\n\nMost Redis commands take a single String or an Array of Strings as arguments, and replies are sent back as a single String or an Array of Strings.\nWhen dealing with hash values, there are a couple of useful exceptions to this.\n\n### client.hgetall(hash)\n\nThe reply from an HGETALL command will be converted into a JavaScript Object by `node_redis`.  That way you can interact\nwith the responses using JavaScript syntax.\n\nExample:\n\n    client.hmset("hosts", "mjr", "1", "another", "23", "home", "1234");\n    client.hgetall("hosts", function (err, obj) {\n        console.dir(obj);\n    });\n\nOutput:\n\n    { mjr: \'1\', another: \'23\', home: \'1234\' }\n\n### client.hmset(hash, obj, [callback])\n\nMultiple values in a hash can be set by supplying an object:\n\n    client.HMSET(key2, {\n        "0123456789": "abcdefghij", // NOTE: the key and value must both be strings\n        "some manner of key": "a type of value"\n    });\n\nThe properties and values of this Object will be set as keys and values in the Redis hash.\n\n### client.hmset(hash, key1, val1, ... keyn, valn, [callback])\n\nMultiple values may also be set by supplying a list:\n\n    client.HMSET(key1, "0123456789", "abcdefghij", "some manner of key", "a type of value");\n\n\n## Publish / Subscribe\n\nHere is a simple example of the API for publish / subscribe.  This program opens two\nclient connections, subscribes to a channel on one of them, and publishes to that\nchannel on the other:\n\n```js\n    var redis = require("redis"),\n        client1 = redis.createClient(), client2 = redis.createClient(),\n        msg_count = 0;\n\n    client1.on("subscribe", function (channel, count) {\n        client2.publish("a nice channel", "I am sending a message.");\n        client2.publish("a nice channel", "I am sending a second message.");\n        client2.publish("a nice channel", "I am sending my last message.");\n    });\n\n    client1.on("message", function (channel, message) {\n        console.log("client1 channel " + channel + ": " + message);\n        msg_count += 1;\n        if (msg_count === 3) {\n            client1.unsubscribe();\n            client1.end();\n            client2.end();\n        }\n    });\n\n    client1.incr("did a thing");\n    client1.subscribe("a nice channel");\n```\n\nWhen a client issues a `SUBSCRIBE` or `PSUBSCRIBE`, that connection is put into "pub/sub" mode.\nAt that point, only commands that modify the subscription set are valid.  When the subscription\nset is empty, the connection is put back into regular mode.\n\nIf you need to send regular commands to Redis while in pub/sub mode, just open another connection.\n\n## Pub / Sub Events\n\nIf a client has subscriptions active, it may emit these events:\n\n### "message" (channel, message)\n\nClient will emit `message` for every message received that matches an active subscription.\nListeners are passed the channel name as `channel` and the message Buffer as `message`.\n\n### "pmessage" (pattern, channel, message)\n\nClient will emit `pmessage` for every message received that matches an active subscription pattern.\nListeners are passed the original pattern used with `PSUBSCRIBE` as `pattern`, the sending channel\nname as `channel`, and the message Buffer as `message`.\n\n### "subscribe" (channel, count)\n\nClient will emit `subscribe` in response to a `SUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.\n\n### "psubscribe" (pattern, count)\n\nClient will emit `psubscribe` in response to a `PSUBSCRIBE` command.  Listeners are passed the\noriginal pattern as `pattern`, and the new count of subscriptions for this client as `count`.\n\n### "unsubscribe" (channel, count)\n\nClient will emit `unsubscribe` in response to a `UNSUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.  When\n`count` is 0, this client has left pub/sub mode and no more pub/sub events will be emitted.\n\n### "punsubscribe" (pattern, count)\n\nClient will emit `punsubscribe` in response to a `PUNSUBSCRIBE` command.  Listeners are passed the\nchannel name as `channel` and the new count of subscriptions for this client as `count`.  When\n`count` is 0, this client has left pub/sub mode and no more pub/sub events will be emitted.\n\n## client.multi([commands])\n\n`MULTI` commands are queued up until an `EXEC` is issued, and then all commands are run atomically by\nRedis.  The interface in `node_redis` is to return an individual `Multi` object by calling `client.multi()`.\n\n```js\n    var redis  = require("./index"),\n        client = redis.createClient(), set_size = 20;\n\n    client.sadd("bigset", "a member");\n    client.sadd("bigset", "another member");\n\n    while (set_size > 0) {\n        client.sadd("bigset", "member " + set_size);\n        set_size -= 1;\n    }\n\n    // multi chain with an individual callback\n    client.multi()\n        .scard("bigset")\n        .smembers("bigset")\n        .keys("*", function (err, replies) {\n            // NOTE: code in this callback is NOT atomic\n            // this only happens after the the .exec call finishes.\n            client.mget(replies, redis.print);\n        })\n        .dbsize()\n        .exec(function (err, replies) {\n            console.log("MULTI got " + replies.length + " replies");\n            replies.forEach(function (reply, index) {\n                console.log("Reply " + index + ": " + reply.toString());\n            });\n        });\n```\n\n`client.multi()` is a constructor that returns a `Multi` object.  `Multi` objects share all of the\nsame command methods as `client` objects do.  Commands are queued up inside the `Multi` object\nuntil `Multi.exec()` is invoked.\n\nYou can either chain together `MULTI` commands as in the above example, or you can queue individual\ncommands while still sending regular client command as in this example:\n\n```js\n    var redis  = require("redis"),\n        client = redis.createClient(), multi;\n\n    // start a separate multi command queue\n    multi = client.multi();\n    multi.incr("incr thing", redis.print);\n    multi.incr("incr other thing", redis.print);\n\n    // runs immediately\n    client.mset("incr thing", 100, "incr other thing", 1, redis.print);\n\n    // drains multi queue and runs atomically\n    multi.exec(function (err, replies) {\n        console.log(replies); // 101, 2\n    });\n\n    // you can re-run the same transaction if you like\n    multi.exec(function (err, replies) {\n        console.log(replies); // 102, 3\n        client.quit();\n    });\n```\n\nIn addition to adding commands to the `MULTI` queue individually, you can also pass an array\nof commands and arguments to the constructor:\n\n```js\n    var redis  = require("redis"),\n        client = redis.createClient(), multi;\n\n    client.multi([\n        ["mget", "multifoo", "multibar", redis.print],\n        ["incr", "multifoo"],\n        ["incr", "multibar"]\n    ]).exec(function (err, replies) {\n        console.log(replies);\n    });\n```\n\n\n## Monitor mode\n\nRedis supports the `MONITOR` command, which lets you see all commands received by the Redis server\nacross all client connections, including from other client libraries and other computers.\n\nAfter you send the `MONITOR` command, no other commands are valid on that connection.  `node_redis`\nwill emit a `monitor` event for every new monitor message that comes across.  The callback for the\n`monitor` event takes a timestamp from the Redis server and an array of command arguments.\n\nHere is a simple example:\n\n```js\n    var client  = require("redis").createClient(),\n        util = require("util");\n\n    client.monitor(function (err, res) {\n        console.log("Entering monitoring mode.");\n    });\n\n    client.on("monitor", function (time, args) {\n        console.log(time + ": " + util.inspect(args));\n    });\n```\n\n# Extras\n\nSome other things you might like to know about.\n\n## client.server_info\n\nAfter the ready probe completes, the results from the INFO command are saved in the `client.server_info`\nobject.\n\nThe `versions` key contains an array of the elements of the version string for easy comparison.\n\n    > client.server_info.redis_version\n    \'2.3.0\'\n    > client.server_info.versions\n    [ 2, 3, 0 ]\n\n## redis.print()\n\nA handy callback function for displaying return values when testing.  Example:\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    client.on("connect", function () {\n        client.set("foo_rand000000000000", "some fantastic value", redis.print);\n        client.get("foo_rand000000000000", redis.print);\n    });\n```\n\nThis will print:\n\n    Reply: OK\n    Reply: some fantastic value\n\nNote that this program will not exit cleanly because the client is still connected.\n\n## redis.debug_mode\n\nBoolean to enable debug mode and protocol tracing.\n\n```js\n    var redis = require("redis"),\n        client = redis.createClient();\n\n    redis.debug_mode = true;\n\n    client.on("connect", function () {\n        client.set("foo_rand000000000000", "some fantastic value");\n    });\n```\n\nThis will display:\n\n    mjr:~/work/node_redis (master)$ node ~/example.js\n    send command: *3\n    $3\n    SET\n    $20\n    foo_rand000000000000\n    $20\n    some fantastic value\n\n    on_data: +OK\n\n`send command` is data sent into Redis and `on_data` is data received from Redis.\n\n## client.send_command(command_name, args, callback)\n\nUsed internally to send commands to Redis.  For convenience, nearly all commands that are published on the Redis\nWiki have been added to the `client` object.  However, if I missed any, or if new commands are introduced before\nthis library is updated, you can use `send_command()` to send arbitrary commands to Redis.\n\nAll commands are sent as multi-bulk commands.  `args` can either be an Array of arguments, or omitted.\n\n## client.connected\n\nBoolean tracking the state of the connection to the Redis server.\n\n## client.command_queue.length\n\nThe number of commands that have been sent to the Redis server but not yet replied to.  You can use this to\nenforce some kind of maximum queue depth for commands while connected.\n\nDon\'t mess with `client.command_queue` though unless you really know what you are doing.\n\n## client.offline_queue.length\n\nThe number of commands that have been queued up for a future connection.  You can use this to enforce\nsome kind of maximum queue depth for pre-connection commands.\n\n## client.retry_delay\n\nCurrent delay in milliseconds before a connection retry will be attempted.  This starts at `250`.\n\n## client.retry_backoff\n\nMultiplier for future retry timeouts.  This should be larger than 1 to add more time between retries.\nDefaults to 1.7.  The default initial connection retry is 250, so the second retry will be 425, followed by 723.5, etc.\n\n### Commands with Optional and Keyword arguments\n\nThis applies to anything that uses an optional `[WITHSCORES]` or `[LIMIT offset count]` in the [redis.io/commands](http://redis.io/commands) documentation.\n\nExample:\n```js\nvar args = [ \'myzset\', 1, \'one\', 2, \'two\', 3, \'three\', 99, \'ninety-nine\' ];\nclient.zadd(args, function (err, response) {\n    if (err) throw err;\n    console.log(\'added \'+response+\' items.\');\n\n    // -Infinity and +Infinity also work\n    var args1 = [ \'myzset\', \'+inf\', \'-inf\' ];\n    client.zrevrangebyscore(args1, function (err, response) {\n        if (err) throw err;\n        console.log(\'example1\', response);\n        // write your code here\n    });\n\n    var max = 3, min = 1, offset = 1, count = 2;\n    var args2 = [ \'myzset\', max, min, \'WITHSCORES\', \'LIMIT\', offset, count ];\n    client.zrevrangebyscore(args2, function (err, response) {\n        if (err) throw err;\n        console.log(\'example2\', response);\n        // write your code here\n    });\n});\n```\n\n## TODO\n\nBetter tests for auth, disconnect/reconnect, and all combinations thereof.\n\nStream large set/get values into and out of Redis.  Otherwise the entire value must be in node\'s memory.\n\nPerformance can be better for very large values.\n\nI think there are more performance improvements left in there for smaller values, especially for large lists of small values.\n\n## How to Contribute\n- open a pull request and then wait for feedback (if\n  [DTrejo](http://github.com/dtrejo) does not get back to you within 2 days,\n  comment again with indignation!)\n\n## Contributors\nSome people have have added features and fixed bugs in `node_redis` other than me.\n\nOrdered by date of first contribution.\n[Auto-generated](http://github.com/dtrejo/node-authors) on Wed Jul 25 2012 19:14:59 GMT-0700 (PDT).\n\n- [Matt Ranney aka `mranney`](https://github.com/mranney)\n- [Tim-Smart aka `tim-smart`](https://github.com/tim-smart)\n- [Tj Holowaychuk aka `visionmedia`](https://github.com/visionmedia)\n- [rick aka `technoweenie`](https://github.com/technoweenie)\n- [Orion Henry aka `orionz`](https://github.com/orionz)\n- [Aivo Paas aka `aivopaas`](https://github.com/aivopaas)\n- [Hank Sims aka `hanksims`](https://github.com/hanksims)\n- [Paul Carey aka `paulcarey`](https://github.com/paulcarey)\n- [Pieter Noordhuis aka `pietern`](https://github.com/pietern)\n- [nithesh aka `nithesh`](https://github.com/nithesh)\n- [Andy Ray aka `andy2ray`](https://github.com/andy2ray)\n- [unknown aka `unknowdna`](https://github.com/unknowdna)\n- [Dave Hoover aka `redsquirrel`](https://github.com/redsquirrel)\n- [Vladimir Dronnikov aka `dvv`](https://github.com/dvv)\n- [Umair Siddique aka `umairsiddique`](https://github.com/umairsiddique)\n- [Louis-Philippe Perron aka `lp`](https://github.com/lp)\n- [Mark Dawson aka `markdaws`](https://github.com/markdaws)\n- [Ian Babrou aka `bobrik`](https://github.com/bobrik)\n- [Felix Geisendörfer aka `felixge`](https://github.com/felixge)\n- [Jean-Hugues Pinson aka `undefined`](https://github.com/undefined)\n- [Maksim Lin aka `maks`](https://github.com/maks)\n- [Owen Smith aka `orls`](https://github.com/orls)\n- [Zachary Scott aka `zzak`](https://github.com/zzak)\n- [TEHEK Firefox aka `TEHEK`](https://github.com/TEHEK)\n- [Isaac Z. Schlueter aka `isaacs`](https://github.com/isaacs)\n- [David Trejo aka `DTrejo`](https://github.com/DTrejo)\n- [Brian Noguchi aka `bnoguchi`](https://github.com/bnoguchi)\n- [Philip Tellis aka `bluesmoon`](https://github.com/bluesmoon)\n- [Marcus Westin aka `marcuswestin2`](https://github.com/marcuswestin2)\n- [Jed Schmidt aka `jed`](https://github.com/jed)\n- [Dave Peticolas aka `jdavisp3`](https://github.com/jdavisp3)\n- [Trae Robrock aka `trobrock`](https://github.com/trobrock)\n- [Shankar Karuppiah aka `shankar0306`](https://github.com/shankar0306)\n- [Ignacio Burgueño aka `ignacio`](https://github.com/ignacio)\n\nThanks.\n\n## LICENSE - "MIT License"\n\nCopyright (c) 2010 Matthew Ranney, http://ranney.com/\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the "Software"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n![spacer](http://ranney.com/1px.gif)\n',
246 silly resolved     readmeFilename: 'README.md',
246 silly resolved     bugs: { url: 'https://github.com/mranney/node_redis/issues' },
246 silly resolved     _id: 'redis@0.8.2',
246 silly resolved     _from: 'redis@0.8.2' },
246 silly resolved   { name: 'request',
246 silly resolved     description: 'Simplified HTTP request client.',
246 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
246 silly resolved     version: '2.12.0',
246 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
246 silly resolved     repository: { type: 'git', url: 'http://github.com/mikeal/request.git' },
246 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
246 silly resolved     engines: [ 'node >= 0.3.6' ],
246 silly resolved     main: './main',
246 silly resolved     dependencies: { 'form-data': '~0.0.3', mime: '~1.2.7' },
246 silly resolved     bundleDependencies: [ 'form-data', 'mime' ],
246 silly resolved     scripts: { test: 'node tests/run.js' },
246 silly resolved     readme: '# Request -- Simplified HTTP request method\n\n## Install\n\n<pre>\n  npm install request\n</pre>\n\nOr from source:\n\n<pre>\n  git clone git://github.com/mikeal/request.git \n  cd request\n  npm link\n</pre>\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types, in this case `application/json`, and use the proper content-type in the PUT request if one is not already provided in the headers.\n\n```javascript\nfs.createReadStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also pipe to itself. When doing so the content-type and content-length will be preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let\'s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    } \n  }\n})\n```\n\nYou can also pipe() from a http.ServerRequest instance and to a http.ServerResponse instance. The HTTP method and headers will be sent as well as the entity-body data. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since pipe() returns the destination stream in node 0.5.x you can do one line proxying :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\nUrl encoded forms are simple\n\n```javascript\nrequest.post(\'http://service.com/upload\', {form:{key:\'value\'}})\n// or\nrequest.post(\'http://service.com/upload\').form({key:\'value\'})\n```\n\nFor `multipart/form-data` we use the [form-data](https://github.com/felixge/node-form-data) library by [@felixge](https://github.com/felixge). You don\'t need to worry about piping the form object or setting the headers, `request` will handle that for you.\n\n```javascript\nvar r = request.post(\'http://service.com/upload\')\nvar form = r.form()\nform.append(\'my_field\', \'my_value\')\nform.append(\'my_buffer\', new Buffer([1, 2, 3]))\nform.append(\'my_file\', fs.createReadStream(path.join(__dirname, \'doodle.png\'))\nform.append(\'remote_file\', request(\'http://google.com/doodle.png\'))\n```\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Assume by some stretch of magic you aquired the verifier\n  var access_token = qs.parse(body)\n    , oauth = \n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: VERIFIER\n      , token_secret: access_token.oauth_token_secret\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth = \n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1/users/show.json?\'\n      , params = \n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n\n\n### request(options, callback)\n\nThe first argument can be either a url or an options object. The only required option is uri, all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from url.parse()\n* `qs` - object containing querystring values to be appended to the uri\n* `method` - http method, defaults to GET\n* `headers` - http headers, defaults to {}\n* `body` - entity body for POST and PUT requests. Must be buffer or string.\n* `form` - when passed an object this will set `body` but to a querystring representation of value and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header. When passed no option a FormData instance is returned that will be piped to request.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.  Additionally, parses the response body as json.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects. defaults to true.\n* `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects. defaults to false.\n* `maxRedirects` - the maximum number of redirects to follow, defaults to 10.\n* `encoding` - Encoding to be used on `setEncoding` of response data. If set to `null`, the body is returned as a Buffer.\n* `pool` - A hash object containing the agents for these requests. If omitted this request will use the global pool which is set to node\'s default maxSockets.\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\t\n* `proxy` - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it\'s supported with the `url` parameter by embedding the auth info in the uri.\n* `oauth` - Options for OAuth HMAC-SHA1 signing, see documentation above.\n* `strictSSL` - Set to `true` to require that SSL certificates be valid. Note: to use your own certificate authority, you need to specify an agent that was created with that ca as an option.\n* `jar` - Set to `false` if you don\'t want cookies to be remembered for future use or define your custom cookie jar (see examples section)\n* `aws` - object containing aws signing information, should have the properties `key` and `secret` as well as `bucket` unless you\'re specifying your bucket as part of the path, or you are making a request that doesn\'t use a bucket (i.e. GET Services)\n\n\nThe callback argument gets 3 arguments. The first is an error when applicable (usually from the http.Client option not the http.ClientRequest object). The second in an http.ClientResponse object. The third is the response body String or Buffer.\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)  \n  \nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as request() but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.post\n\nSame as request() but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as request() but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nAlias to normal request method for uniformity.\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart: \n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ] \n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\nCookies are enabled by default (so they can be used in subsequent requests). To disable cookies set jar to false (either in defaults or in the options sent).\n\n```javascript\nvar request = request.defaults({jar: false})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nIf you to use a custom cookie jar (instead of letting request use its own global cookie jar) you do so by setting the jar default or by specifying it as an option:\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.add(cookie)\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n',
246 silly resolved     readmeFilename: 'README.md',
246 silly resolved     _id: 'request@2.12.0',
246 silly resolved     _from: 'request@2.12.0' },
246 silly resolved   { name: 'winston',
246 silly resolved     description: 'A multi-transport async logging library for Node.js',
246 silly resolved     version: '0.6.2',
246 silly resolved     author: { name: 'Nodejitsu Inc.', email: 'info@nodejitsu.com' },
246 silly resolved     maintainers: [ [Object] ],
246 silly resolved     repository: { type: 'git', url: 'https://github.com/flatiron/winston.git' },
246 silly resolved     keywords: [ 'logging', 'sysadmin', 'tools' ],
246 silly resolved     dependencies:
246 silly resolved      { async: '0.1.x',
246 silly resolved        colors: '0.x.x',
246 silly resolved        cycle: '1.0.x',
246 silly resolved        eyes: '0.1.x',
246 silly resolved        pkginfo: '0.2.x',
246 silly resolved        request: '2.9.x',
246 silly resolved        'stack-trace': '0.0.x' },
246 silly resolved     devDependencies: { vows: '0.6.x' },
246 silly resolved     main: './lib/winston',
246 silly resolved     scripts: { test: 'vows --spec --isolate' },
246 silly resolved     engines: { node: '>= 0.4.0' },
246 silly resolved     readme: '# winston [![Build Status](https://secure.travis-ci.org/flatiron/winston.png)](http://travis-ci.org/flatiron/winston)\n\nA multi-transport async logging library for node.js. <span style="font-size:28px; font-weight:bold;">&quot;CHILL WINSTON! ... I put it in the logs.&quot;</span>\n\n## Motivation\nWinston is designed to be a simple and universal logging library with support for multiple transports. A transport is essentially a storage device for your logs. Each instance of a winston logger can have multiple transports configured at different levels. For example, one may want error logs to be stored in a persistent remote location (like a database), but all logs output to the console or a local file.\n\nThere also seemed to be a lot of logging libraries out there that coupled their implementation of logging (i.e. how the logs are stored / indexed) to the API that they exposed to the programmer. This library aims to decouple those parts of the process to make it more flexible and extensible.\n\n## Usage\nThere are two different ways to use winston: directly via the default logger, or by instantiating your own Logger. The former is merely intended to be a convenient shared logger to use throughout your application if you so choose.\n\n* [Logging](#logging)\n  * [Using the Default Logger](#using-the-default-logger)\n  * [Instantiating your own Logger](#instantiating-your-own-logger)\n  * [Logging with Metadata](#logging-with-metadata)\n* [Transports](https://github.com/flatiron/winston/blob/master/docs/transports.md)\n* [Profiling](#profiling)\n* [Streaming Logs](#streaming-logs)\n* [Querying Logs](#querying-logs)  \n* [Exceptions](#exceptions)\n  * [Handling Uncaught Exceptions with winston](#handling-uncaught-exceptions-with-winston)\n  * [To Exit or Not to Exit](#to-exit-or-not-to-exit)\n* [Logging Levels](#logging-levels)\n  * [Using Logging Levels](#using-logging-levels)\n  * [Using Custom Logging Levels](#using-custom-logging-levels)\n* [Further Reading](#further-reading)\n  * [Events and Callbacks in Winston](#events-and-callbacks-in-winston)\n  * [Working with multiple Loggers in winston](#working-with-multiple-loggers-in-winston)\n  * [Using winston in a CLI tool](#using-winston-in-a-cli-tool)\n  * [Extending another object with Logging](#extending-another-object-with-logging)\n  * [Adding Custom Transports](#adding-custom-transports)\n\n## Logging\n\n### Using the Default Logger\nThe default logger is accessible through the winston module directly. Any method that you could call on an instance of a logger is available on the default logger:\n\n``` js\n  var winston = require(\'winston\');\n\n  winston.log(\'info\', \'Hello distributed log files!\');\n  winston.info(\'Hello again distributed logs\');\n```\n\nBy default, only the Console transport is set on the default logger. You can add or remove transports via the add() and remove() methods:\n\n``` js\n  winston.add(winston.transports.File, { filename: \'somefile.log\' });\n  winston.remove(winston.transports.Console);\n```\n\nFor more documenation about working with each individual transport supported by Winston see the "Working with Transports" section below.\n\n### Instantiating your own Logger\nIf you would prefer to manage the object lifetime of loggers you are free to instantiate them yourself:\n\n``` js\n  var logger = new (winston.Logger)({\n    transports: [\n      new (winston.transports.Console)(),\n      new (winston.transports.File)({ filename: \'somefile.log\' })\n    ]\n  });\n```\n\nYou can work with this logger in the same way that you work with the default logger:\n\n``` js\n  //\n  // Logging\n  //\n  logger.log(\'info\', \'Hello distributed log files!\');\n  logger.info(\'Hello again distributed logs\');\n\n  //\n  // Adding / Removing Transports\n  //   (Yes It\'s chainable)\n  //\n  logger.add(winston.transports.File)\n        .remove(winston.transports.Console);\n```\n\n### Logging with Metadata\nIn addition to logging string messages, winston will also optionally log additional JSON metadata objects. Adding metadata is simple:\n\n``` js\n  winston.log(\'info\', \'Test Log Message\', { anything: \'This is metadata\' });\n```\n\nThe way these objects is stored varies from transport to transport (to best support the storage mechanisms offered). Here\'s a quick summary of how each transports handles metadata:\n\n1. __Console:__ Logged via util.inspect(meta)\n2. __File:__ Logged via util.inspect(meta)\n\n## Profiling\nIn addition to logging messages and metadata, winston also has a simple profiling mechanism implemented for any logger:\n\n``` js\n  //\n  // Start profile of \'test\'\n  // Remark: Consider using Date.now() with async operations\n  //\n  winston.profile(\'test\');\n\n  setTimeout(function () {\n    //\n    // Stop profile of \'test\'. Logging will now take place:\n    //   "17 Jan 21:00:00 - info: test duration=1000ms"\n    //\n    winston.profile(\'test\');\n  }, 1000);\n```\n\nAll profile messages are set to the \'info\' by default and both message and metadata are optional There are no plans in the Roadmap to make this configurable, but I\'m open to suggestions / issues.\n\n\n## Querying Logs\nWinston supports querying of logs with Loggly-like options.\nSpecifically: `File`, `Couchdb`, `Redis`, `Loggly`, `Nssocket`, and `Http`.\n\n``` js\n  var options = {\n    from: new Date - 24 * 60 * 60 * 1000,\n    until: new Date\n  };\n\n  //\n  // Find items logged between today and yesterday.\n  //\n  winston.query(options, function (err, results) {\n    if (err) {\n      throw err;\n    }\n    \n    console.log(results);\n  });\n```\n\n## Streaming Logs\nStreaming allows you to stream your logs back from your chosen transport.\n\n``` js\n  //\n  // Start at the end.\n  //\n  winston.stream({ start: -1 }).on(\'log\', function(log) {\n    console.log(log);\n  });\n```\n\n## Exceptions\n\n### Handling Uncaught Exceptions with winston\n\nWith `winston`, it is possible to catch and log `uncaughtException` events from your process. There are two distinct ways of enabling this functionality either through the default winston logger or your own logger instance.\n\nIf you want to use this feature with the default logger simply call `.handleExceptions()` with a transport instance.\n\n``` js\n  //\n  // You can add a separate exception logger by passing it to `.handleExceptions`\n  //\n  winston.handleExceptions(new winston.transports.File({ filename: \'path/to/exceptions.log\' }))\n\n  //\n  // Alternatively you can set `.handleExceptions` to true when adding transports to winston\n  //\n  winston.add(winston.transports.File, {\n    filename: \'path/to/all-logs.log\',\n    handleExceptions: true\n  });\n```\n\n### To Exit or Not to Exit\n\nby default, winston will exit after logging an uncaughtException. if this is not the behavior you want,\nset `exitOnError = false`\n\n``` js\n  var logger = new (winston.Logger)({ exitOnError: false });\n\n  //\n  // or, like this:\n  //\n  logger.exitOnError = false;\n```\n\nWhen working with custom logger instances, you can pass in separate transports to the `exceptionHandlers` property or set `.handleExceptions` on any transport.\n\nExample 1\n\n``` js\n  var logger = new (winston.Logger)({\n    transports: [\n      new winston.transports.File({ filename: \'path/to/all-logs.log\' })\n    ]\n    exceptionHandlers: [\n      new winston.transports.File({ filename: \'path/to/exceptions.log\' })\n    ]\n  });\n```\n\nExample 2\n\n```\nvar logger = new winston.Logger({\n  transports: [\n    new winston.transports.Console({\n      handleExceptions: true,\n      json: true\n    })\n  ],\n  exitOnError: false\n});\n```\n\nThe `exitOnError` option can also be a function to prevent exit on only certain types of errors:\n\n``` js\n  function ignoreEpipe(err) {\n    return err.code !== \'EPIPE\';\n  }\n\n  var logger = new (winston.Logger)({ exitOnError: ignoreEpipe });\n\n  //\n  // or, like this:\n  //\n  logger.exitOnError = ignoreEpipe;\n```\n\n## Logging Levels\n\n### Using Logging Levels\nSetting the level for your logging message can be accomplished in one of two ways. You can pass a string representing the logging level to the log() method or use the level specified methods defined on every winston Logger.\n\n``` js\n  //\n  // Any logger instance\n  //\n  logger.log(\'info\', "127.0.0.1 - there\'s no place like home");\n  logger.log(\'warn\', "127.0.0.1 - there\'s no place like home");\n  logger.log(\'error\', "127.0.0.1 - there\'s no place like home");\n  logger.info("127.0.0.1 - there\'s no place like home");\n  logger.warn("127.0.0.1 - there\'s no place like home");\n  logger.error("127.0.0.1 - there\'s no place like home");\n\n  //\n  // Default logger\n  //\n  winston.log(\'info\', "127.0.0.1 - there\'s no place like home");\n  winston.info("127.0.0.1 - there\'s no place like home");\n```\n\nWinston allows you to set a `level` on each transport that specifies the level of messages this transport should log. For example, you could log only errors to the console, with the full logs in a file:\n\n``` js\n  var logger = new (winston.Logger)({\n    transports: [\n      new (winston.transports.Console)({ level: \'error\' }),\n      new (winston.transports.File)({ filename: \'somefile.log\' })\n    ]\n  });\n```\n\nAs of 0.2.0, winston supports customizable logging levels, defaulting to [npm][0] style logging levels. Changing logging levels is easy:\n\n``` js\n  //\n  // Change levels on the default winston logger\n  //\n  winston.setLevels(winston.config.syslog.levels);\n\n  //\n  // Change levels on an instance of a logger\n  //\n  logger.setLevels(winston.config.syslog.levels);\n```\n\nCalling `.setLevels` on a logger will remove all of the previous helper methods for the old levels and define helper methods for the new levels. Thus, you should be careful about the logging statements you use when changing levels. For example, if you ran this code after changing to the syslog levels:\n\n``` js\n  //\n  // Logger does not have \'silly\' defined since that level is not in the syslog levels\n  //\n  logger.silly(\'some silly message\');\n```\n\n### Using Custom Logging Levels\nIn addition to the predefined `npm` and `syslog` levels available in Winston, you can also choose to define your own:\n\n``` js\n  var myCustomLevels = {\n    levels: {\n      foo: 0,\n      bar: 1,\n      baz: 2,\n      foobar: 3\n    },\n    colors: {\n      foo: \'blue\',\n      bar: \'green\',\n      baz: \'yellow\',\n      foobar: \'red\'\n    }\n  };\n\n  var customLevelLogger = new (winston.Logger)({ levels: myCustomLevels.levels });\n  customLevelLogger.foobar(\'some foobar level-ed message\');\n```\n\nAlthough there is slight repetition in this data structure, it enables simple encapsulation if you not to have colors. If you do wish to have colors, in addition to passing the levels to the Logger itself, you must make winston aware of them:\n\n``` js\n  //\n  // Make winston aware of these colors\n  //\n  winston.addColors(myCustomLevels.colors);\n```\n\nThis enables transports with the \'colorize\' option set to appropriately color the output of custom levels.\n\n## Further Reading\n\n### Events and Callbacks in Winston\nEach instance of winston.Logger is also an instance of an [EventEmitter][1]. A log event will be raised each time a transport successfully logs a message:\n\n``` js\n  logger.on(\'logging\', function (transport, level, msg, meta) {\n    // [msg] and [meta] have now been logged at [level] to [transport]\n  });\n\n  logger.info(\'CHILL WINSTON!\', { seriously: true });\n```\n\nIt is also worth mentioning that the logger also emits an \'error\' event which you should handle or suppress if you don\'t want unhandled exceptions:\n\n``` js\n  //\n  // Handle errors\n  //\n  logger.on(\'error\', function (err) { /* Do Something */ });\n\n  //\n  // Or just suppress them.\n  //\n  logger.emitErrs = false;\n```\n\nEvery logging method described in the previous section also takes an optional callback which will be called only when all of the transports have logged the specified message.\n\n``` js\n  logger.info(\'CHILL WINSTON!\', { seriously: true }, function (err, level, msg, meta) {\n    // [msg] and [meta] have now been logged at [level] to **every** transport.\n  });\n```\n\n### Working with multiple Loggers in winston\n\nOften in larger, more complex applications it is necessary to have multiple logger instances with different settings. Each logger is responsible for a different feature area (or category). This is exposed in `winston` in two ways: through `winston.loggers` and instances of `winston.Container`. In fact, `winston.loggers` is just a predefined instance of `winston.Container`:\n\n``` js\n  var winston = require(\'winston\');\n\n  //\n  // Configure the logger for `category1`\n  //\n  winston.loggers.add(\'category1\', {\n    console: {\n      level: \'silly\',\n      colorize: \'true\'\n    },\n    file: {\n      filename: \'/path/to/some/file\'\n    }\n  });\n\n  //\n  // Configure the logger for `category2`\n  //\n  winston.loggers.add(\'category2\', {\n    couchdb: {\n      host: \'127.0.0.1\',\n      port: 5984\n    }\n  });\n```\n\nNow that your loggers are setup you can require winston _in any file in your application_ and access these pre-configured loggers:\n\n``` js\n  var winston = require(\'winston\');\n\n  //\n  // Grab your preconfigured logger\n  //\n  var category1 = winston.loggers.get(\'category1\');\n\n  category1.info(\'logging from your IoC container-based logger\');\n```\n\nIf you prefer to manage the `Container` yourself you can simply instantiate one:\n\n``` js\n  var winston = require(\'winston\'),\n      container = new winston.Container();\n\n  container.add(\'category1\', {\n    console: {\n      level: \'silly\',\n      colorize: \'true\'\n    },\n    file: {\n      filename: \'/path/to/some/file\'\n    }\n  });\n```\n\n### Sharing transports between Loggers in winston\n\n``` js\n  var winston = require(\'winston\');\n\n  //\n  // Setup transports to be shared across all loggers\n  // in three ways:\n  //\n  // 1. By setting it on the default Container\n  // 2. By passing `transports` into the constructor function of winston.Container\n  // 3. By passing `transports` into the `.get()` or `.add()` methods\n  //\n\n  //\n  // 1. By setting it on the default Container\n  //\n  winston.loggers.options.transports = [\n    // Setup your shared transports here\n  ];\n\n  //\n  // 2. By passing `transports` into the constructor function of winston.Container\n  //\n  var container = new winston.Container({\n    transports: [\n      // Setup your shared transports here\n    ]\n  });\n\n  //\n  // 3. By passing `transports` into the `.get()` or `.add()` methods\n  //\n  winston.loggers.add(\'some-category\', {\n    transports: [\n      // Setup your shared transports here\n    ]\n  });\n\n  container.add(\'some-category\', {\n    transports: [\n      // Setup your shared transports here\n    ]\n  });\n```\n\n### Using winston in a CLI tool\nA common use-case for logging is output to a CLI tool. Winston has a special helper method which will pretty print output from your CLI tool. Here\'s an example from the [require-analyzer][2] written by [Nodejitsu][3]:\n\n```\n  info:   require-analyzer starting in /Users/Charlie/Nodejitsu/require-analyzer\n  info:   Found existing dependencies\n  data:   {\n  data:     colors: \'0.x.x\',\n  data:     eyes: \'0.1.x\',\n  data:     findit: \'0.0.x\',\n  data:     npm: \'1.0.x\',\n  data:     optimist: \'0.2.x\',\n  data:     semver: \'1.0.x\',\n  data:     winston: \'0.2.x\'\n  data:   }\n  info:   Analyzing dependencies...\n  info:   Done analyzing raw dependencies\n  info:   Retrieved packages from npm\n  warn:   No additional dependencies found\n```\n\nConfiguring output for this style is easy, just use the `.cli()` method on `winston` or an instance of `winston.Logger`:\n\n``` js\n  var winston = require(\'winston\');\n\n  //\n  // Configure CLI output on the default logger\n  //\n  winston.cli();\n\n  //\n  // Configure CLI on an instance of winston.Logger\n  //\n  var logger = new winston.Logger({\n    transports: [\n      new (winston.transports.Console)()\n    ]\n  });\n\n  logger.cli();\n```\n\n### Extending another object with Logging\nOften in a given code base with lots of Loggers it is useful to add logging methods a different object so that these methods can be called with less syntax. Winston exposes this functionality via the \'extend\' method:\n\n``` js\n  var myObject = {};\n\n  logger.extend(myObject);\n\n  //\n  // You can now call logger methods on \'myObject\'\n  //\n  myObject.info(\'127.0.0.1 - there\'s no place like home\');\n```\n\n## Working with Transports\nRight now there are four transports supported by winston core. If you have a transport you would like to add either open an issue or fork and submit a pull request. Commits are welcome, but I\'ll give you extra street cred if you __add tests too :D__\n   \n1. __Console:__ Output to the terminal\n2. __Files:__ Append to a file\n3. __Loggly:__ Log to Logging-as-a-Service platform Loggly\n\n### Console Transport\n``` js\n  winston.add(winston.transports.Console, options)\n```\n\nThe Console transport takes two simple options:\n\n* __level:__ Level of messages that this transport should log (default \'info\').\n* __silent:__ Boolean flag indicating whether to suppress output (default false).\n* __colorize:__ Boolean flag indicating if we should colorize output (default false).\n* __timestamp:__ Boolean flag indicating if we should prepend output with timestamps (default false). If function is specified, its return value will be used instead of timestamps.\n\n*Metadata:* Logged via util.inspect(meta);\n\n### File Transport\n``` js\n  winston.add(winston.transports.File, options)\n```\n\nThe File transport should really be the \'Stream\' transport since it will accept any [WritableStream][14]. It is named such because it will also accept filenames via the \'filename\' option:\n\n* __level:__ Level of messages that this transport should log.\n* __silent:__ Boolean flag indicating whether to suppress output.\n* __colorize:__ Boolean flag indicating if we should colorize output.\n* __timestamp:__ Boolean flag indicating if we should prepend output with timestamps (default true). If function is specified, its return value will be used instead of timestamps.\n* __filename:__ The filename of the logfile to write output to.\n* __maxsize:__ Max size in bytes of the logfile, if the size is exceeded then a new file is created.\n* __maxFiles:__ Limit the number of files created when the size of the logfile is exceeded.\n* __stream:__ The WriteableStream to write output to.\n* __json:__ If true, messages will be logged as JSON (default true).\n\n*Metadata:* Logged via util.inspect(meta);\n\n### Loggly Transport\n``` js\n  var Loggly = require(\'winston-loggly\').Loggly\n  winston.add(Loggly, options);\n```\n\nThe Loggly transport is based on [Nodejitsu\'s][5] [node-loggly][6] implementation of the [Loggly][7] API. If you haven\'t heard of Loggly before, you should probably read their [value proposition][8]. The Loggly transport takes the following options. Either \'inputToken\' or \'inputName\' is required:\n\n* __level:__ Level of messages that this transport should log. \n* __subdomain:__ The subdomain of your Loggly account. *[required]*\n* __auth__: The authentication information for your Loggly account. *[required with inputName]*\n* __inputName:__ The name of the input this instance should log to.\n* __inputToken:__ The input token of the input this instance should log to.\n* __json:__ If true, messages will be sent to Loggly as JSON.\n\n*Metadata:* Logged in suggested [Loggly format][2]\n\n### Riak Transport\nAs of `0.3.0` the Riak transport has been broken out into a new module: [winston-riak][17]. Using it is just as easy:\n\n``` js\n  var Riak = require(\'winston-riak\').Riak;\n  winston.add(Riak, options);\n```\n\nIn addition to the options accepted by the [riak-js][3] [client][4], the Riak transport also accepts the following options. It is worth noting that the riak-js debug option is set to *false* by default:\n\n* __level:__ Level of messages that this transport should log.\n* __bucket:__ The name of the Riak bucket you wish your logs to be in or a function to generate bucket names dynamically.\n\n``` js\n  // Use a single bucket for all your logs\n  var singleBucketTransport = new (Riak)({ bucket: \'some-logs-go-here\' });\n  \n  // Generate a dynamic bucket based on the date and level\n  var dynamicBucketTransport = new (Riak)({\n    bucket: function (level, msg, meta, now) {\n      var d = new Date(now);\n      return level + [d.getDate(), d.getMonth(), d.getFullYear()].join(\'-\');\n    }\n  });\n```\n\n*Metadata:* Logged as JSON literal in Riak\n\n### MongoDB Transport\nAs of `0.3.0` the MongoDB transport has been broken out into a new module: [winston-mongodb][16]. Using it is just as easy:\n\n``` js\n  var MongoDB = require(\'winston-mongodb\').MongoDB;\n  winston.add(MongoDB, options);\n```\n\nThe MongoDB transport takes the following options. \'db\' is required:\n\n* __level:__ Level of messages that this transport should log. \n* __silent:__ Boolean flag indicating whether to suppress output.\n* __db:__ The name of the database you want to log to. *[required]*\n* __collection__: The name of the collection you want to store log messages in, defaults to \'log\'.\n* __safe:__ Boolean indicating if you want eventual consistency on your log messages, if set to true it requires an extra round trip to the server to ensure the write was committed, defaults to true.\n* __host:__ The host running MongoDB, defaults to localhost.\n* __port:__ The port on the host that MongoDB is running on, defaults to MongoDB\'s default port.\n\n*Metadata:* Logged as a native JSON object.\n\n### SimpleDB Transport\n\nThe [winston-simpledb][18] transport is just as easy:\n\n``` js\n  var SimpleDB = require(\'winston-simpledb\').SimpleDB;\n  winston.add(SimpleDB, options);\n```\n\nThe SimpleDB transport takes the following options. All items marked with an asterisk are required:\n\n* __awsAccessKey__:* your AWS Access Key\n* __secretAccessKey__:* your AWS Secret Access Key\n* __awsAccountId__:* your AWS Account Id\n* __domainName__:* a string or function that returns the domain name to log to\n* __region__:* the region your domain resides in\n* __itemName__: a string (\'uuid\', \'epoch\', \'timestamp\') or function that returns the item name to log\n\n*Metadata:* Logged as a native JSON object to the \'meta\' attribute of the item.\n\n### Mail Transport\n\nThe [winston-mail][19] is an email transport:\n\n``` js\n  var Mail = require(\'winston-mail\').Mail;\n  winston.add(Mail, options);\n```\n\nThe Mail transport uses [emailjs](https://github.com/eleith/emailjs) behind the scenes.  Options are the following:\n\n* __to:__ The address(es) you want to send to. *[required]*\n* __from:__ The address you want to send from. (default: `winston@[server-host-name]`)\n* __host:__ SMTP server hostname (default: localhost)\n* __port:__ SMTP port (default: 587 or 25)\n* __username__ User for server auth\n* __password__ Password for server auth\n* __ssl:__ Use SSL (boolean or object { key, ca, cert })\n* __tls:__ Boolean (if true, use starttls)\n* __level:__ Level of messages that this transport should log. \n* __silent:__ Boolean flag indicating whether to suppress output.\n\n*Metadata:* Stringified as JSON in email.\n\n### Amazon SNS (Simple Notification System) Transport\n\nThe [winston-sns][21] transport uses amazon SNS to send emails, texts, or a bunch of other notifications.\n\n``` js\n  require(\'winston-sns\').SNS;\n  winston.add(winston.transports.SNS, options);\n```\n\nOptions:\n\n* __aws_key:__ Your Amazon Web Services Key. *[required]*\n* __aws_secret:__ Your Amazon Web Services Secret. *[required]*\n* __subscriber:__ Subscriber number - found in your SNS AWS Console, after clicking on a topic. Same as AWS Account ID. *[required]*\n* __topic_arn:__ Also found in SNS AWS Console - listed under a topic as Topic ARN. *[required]*\n* __region:__ AWS Region to use. Can be one of: `us-east-1`,`us-west-1`,`eu-west-1`,`ap-southeast-1`,`ap-northeast-1`,`us-gov-west-1`,`sa-east-1`. (default: `us-east-1`)\n* __subject:__ Subject for notifications. (default: "Winston Error Report")\n* __message:__ Message of notifications. Uses placeholders for level (%l), error message (%e), and metadata (%m). (default: "Level \'%l\' Error:\\n%e\\n\\nMetadata:\\n%m")\n* __level:__ lowest level this transport will log. (default: `info`)\n\n### Graylog2 Transport\n\n[winston-graylog2][22] is a Graylog2 transport:\n\n``` js\n  var Graylog2 = require(\'winston-graylog2\').Graylog2;\n  winston.add(Graylog2, options);\n```\n\nThe Graylog2 transport connects to a Graylog2 server over UDP using the following options:\n\n* __level:__ Level of messages this transport should log. (default: info)\n* __silent:__ Boolean flag indicating whether to suppress output. (default: false)\n\n* __graylogHost:__ IP address or hostname of the graylog2 server. (default: localhost)\n* __graylogPort:__ Port to send messages to on the graylog2 server. (default: 12201)\n* __graylogHostname:__ The hostname associated with graylog2 messages. (default: require(\'os\').hostname())\n* __graylogFacility:__ The graylog2 facility to send log messages.. (default: nodejs)\n\n*Metadata:* Stringified as JSON in the full message GELF field.\n\n### Adding Custom Transports\nAdding a custom transport (say for one of the datastore on the Roadmap) is actually pretty easy. All you need to do is accept a couple of options, set a name, implement a log() method, and add it to the set of transports exposed by winston.\n\n``` js\n  var util = require(\'util\'),\n      winston = require(\'winston\');\n\n  var CustomLogger = winston.transports.CustomerLogger = function (options) {\n    //\n    // Name this logger\n    //\n    this.name = \'customLogger\';\n\n    //\n    // Set the level from your options\n    //\n    this.level = options.level || \'info\';\n\n    //\n    // Configure your storage backing as you see fit\n    //\n  };\n\n  //\n  // Inherit from `winston.Transport` so you can take advantage\n  // of the base functionality and `.handleExceptions()`.\n  //\n  util.inherits(CustomLogger, winston.Transport);\n\n  CustomLogger.prototype.log = function (level, msg, meta, callback) {\n    //\n    // Store this message and metadata, maybe use some custom logic\n    // then callback indicating success.\n    //\n    callback(null, true);\n  };\n```\n\n### Inspirations\n1. [npm][0]\n2. [log.js][4]\n3. [socket.io][5]\n4. [node-rlog][6]\n5. [BigBrother][7]\n6. [Loggly][8]\n\n## Installation\n\n### Installing npm (node package manager)\n```\n  curl http://npmjs.org/install.sh | sh\n```\n\n### Installing winston\n```\n  [sudo] npm install winston\n```\n\n## Run Tests\nAll of the winston tests are written in [vows][9], and designed to be run with npm. \n\n``` bash\n  $ npm test\n```\n\n#### Author: [Charlie Robbins](http://twitter.com/indexzero)\n#### Contributors: [Matthew Bergman](http://github.com/fotoverite), [Marak Squires](http://github.com/marak)\n\n[0]: https://github.com/isaacs/npm/blob/master/lib/utils/log.js\n[1]: http://nodejs.org/docs/v0.3.5/api/events.html#events.EventEmitter\n[2]: http://github.com/nodejitsu/require-analyzer\n[3]: http://nodejitsu.com\n[4]: https://github.com/visionmedia/log.js\n[5]: http://socket.io\n[6]: https://github.com/jbrisbin/node-rlog\n[7]: https://github.com/feisty/BigBrother\n[8]: http://loggly.com\n[9]: http://vowsjs.org\n',
246 silly resolved     readmeFilename: 'README.md',
246 silly resolved     bugs: { url: 'https://github.com/flatiron/winston/issues' },
246 silly resolved     _id: 'winston@0.6.2',
246 silly resolved     _from: 'winston@0.6.2' },
246 silly resolved   { name: 'moment',
246 silly resolved     version: '2.0.0',
246 silly resolved     description: 'Parse, manipulate, and display dates.',
246 silly resolved     homepage: 'http://momentjs.com',
246 silly resolved     author:
246 silly resolved      { name: 'Tim Wood',
246 silly resolved        email: 'washwithcare@gmail.com',
246 silly resolved        url: 'http://timwoodcreates.com/' },
246 silly resolved     contributors: [ [Object], [Object] ],
246 silly resolved     keywords:
246 silly resolved      [ 'moment',
246 silly resolved        'date',
246 silly resolved        'time',
246 silly resolved        'parse',
246 silly resolved        'format',
246 silly resolved        'validate',
246 silly resolved        'i18n',
246 silly resolved        'l10n',
246 silly resolved        'ender' ],
246 silly resolved     main: './moment.js',
246 silly resolved     engines: { node: '*' },
246 silly resolved     repository: { type: 'git', url: 'https://github.com/timrwood/moment.git' },
246 silly resolved     bugs: { url: 'https://github.com/timrwood/moment/issues' },
246 silly resolved     licenses: [ [Object] ],
246 silly resolved     devDependencies: { 'uglify-js': 'latest', nodeunit: 'latest', grunt: 'latest' },
246 silly resolved     scripts: { test: 'grunt' },
246 silly resolved     ender: './ender.js',
246 silly resolved     dojoBuild: 'package.js',
246 silly resolved     readme: 'A lightweight javascript date library for parsing, validating, manipulating, and formatting dates.\n\n# [Documentation](http://momentjs.com/docs/)\n\nUpgrading to 2.0.0\n==================\n\nThere are a number of small backwards incompatible changes with version 2.0.0.\n\n[See them and their descriptions here](https://gist.github.com/timrwood/e72f2eef320ed9e37c51#backwards-incompatible-changes)\n\nChanged language ordinal method to return the number + ordinal instead of just the ordinal.\n\nChanged two digit year parsing cutoff to match strptime.\n\nRemoved `moment#sod` and `moment#eod` in favor of `moment#startOf` and `moment#endOf`.\n\nRemoved `moment.humanizeDuration()` in favor of `moment.duration().humanize()`.\n\nRemoved the lang data objects from the top level namespace.\n\nDuplicate `Date` passed to `moment()` instead of referencing it.\n\n\nUpgrading to 1.6.0\n==================\n\nThere are a few things being deprecated in the 1.6.0 release.\n\n1. The format tokens `z` and `zz` (timezone abbreviations like EST CST MST etc) will no longer be supported. Due to inconsistent browser support, we are unable to consistently produce this value. See [this issue](https://github.com/timrwood/moment/issues/162) for more background.\n\n2. The method `moment.fn.native` is deprecated in favor of `moment.fn.toDate`. There continue to be issues with Google Closure Compiler throwing errors when using `native`, even in valid instances.\n\n3. The way to customize am/pm strings is being changed. This would only affect you if you created a custom language file. For more information, see [this issue](https://github.com/timrwood/moment/pull/222).\n\n\nChangelog\n=========\n\n\n### 2.0.0 [See changelog](https://gist.github.com/timrwood/e72f2eef320ed9e37c51)\n\nAdded short form localized tokens.\n\nAdded ability to define language a string should be parsed in.\n\nAdded support for reversed add/subtract arguments.\n\nAdded support for `endOf(\'week\')` and `startOf(\'week\')`.\n\nFixed the logic for `moment#diff(Moment, \'months\')` and `moment#diff(Moment, \'years\')`\n\n`moment#diff` now floors instead of rounds.\n\nNormalized `moment#toString`.\n\nAdded `isSame`, `isAfter`, and `isBefore` methods.\n\nAdded better week support.\n\nAdded `moment#toJSON`\n\nBugfix: Fixed parsing of first century dates\n\nBugfix: Parsing 10Sep2001 should work as expected\n\nBugfix: Fixed wierdness with `moment.utc()` parsing.\n\nChanged language ordinal method to return the number + ordinal instead of just the ordinal.\n\nChanged two digit year parsing cutoff to match strptime.\n\nRemoved `moment#sod` and `moment#eod` in favor of `moment#startOf` and `moment#endOf`.\n\nRemoved `moment.humanizeDuration()` in favor of `moment.duration().humanize()`.\n\nRemoved the lang data objects from the top level namespace.\n\nDuplicate `Date` passed to `moment()` instead of referencing it.\n\n### 1.7.2 [See discussion](https://github.com/timrwood/moment/issues/456)\n\nBugfixes\n\n### 1.7.1 [See discussion](https://github.com/timrwood/moment/issues/384)\n\nBugfixes\n\n### 1.7.0 [See discussion](https://github.com/timrwood/moment/issues/288)\n\nAdded `moment.fn.endOf()` and `moment.fn.startOf()`.\n\nAdded validation via `moment.fn.isValid()`.\n\nMade formatting method 3x faster. http://jsperf.com/momentjs-cached-format-functions\n\nAdd support for month/weekday callbacks in `moment.fn.format()`\n\nAdded instance specific languages.\n\nAdded two letter weekday abbreviations with the formatting token `dd`.\n\nVarious language updates.\n\nVarious bugfixes.\n\n### 1.6.0 [See discussion](https://github.com/timrwood/moment/pull/268)\n\nAdded Durations.\n\nRevamped parser to support parsing non-separated strings (YYYYMMDD vs YYYY-MM-DD).\n\nAdded support for millisecond parsing and formatting tokens (S SS SSS)\n\nAdded a getter for `moment.lang()`\n\nVarious bugfixes.\n\n### 1.5.0 [See milestone](https://github.com/timrwood/moment/issues?milestone=10&page=1&state=closed)\n\nAdded UTC mode.\n\nAdded automatic ISO8601 parsing.\n\nVarious bugfixes.\n\n### 1.4.0 [See milestone](https://github.com/timrwood/moment/issues?milestone=8&state=closed)\n\nAdded `moment.fn.toDate` as a replacement for `moment.fn.native`.\n\nAdded `moment.fn.sod` and `moment.fn.eod` to get the start and end of day.\n\nVarious bugfixes.\n\n### 1.3.0 [See milestone](https://github.com/timrwood/moment/issues?milestone=7&state=closed)\n\nAdded support for parsing month names in the current language.\n\nAdded escape blocks for parsing tokens.\n\nAdded `moment.fn.calendar` to format strings like \'Today 2:30 PM\', \'Tomorrow 1:25 AM\', and \'Last Sunday 4:30 AM\'.\n\nAdded `moment.fn.day` as a setter.\n\nVarious bugfixes\n\n### 1.2.0 [See milestone](https://github.com/timrwood/moment/issues?milestone=4&state=closed)\n\nAdded timezones to parser and formatter.\n\nAdded `moment.fn.isDST`.\n\nAdded `moment.fn.zone` to get the timezone offset in minutes.\n\n### 1.1.2 [See milestone](https://github.com/timrwood/moment/issues?milestone=6&state=closed)\n\nVarious bugfixes\n\n### 1.1.1 [See milestone](https://github.com/timrwood/moment/issues?milestone=5&state=closed)\n\nAdded time specific diffs (months, days, hours, etc)\n\n### 1.1.0\n\nAdded `moment.fn.format` localized masks. \'L LL LLL LLLL\' [issue 29](https://github.com/timrwood/moment/pull/29)\n\nFixed [issue 31](https://github.com/timrwood/moment/pull/31).\n\n### 1.0.1\n\nAdded `moment.version` to get the current version.\n\nRemoved `window !== undefined` when checking if module exists to support browserify. [issue 25](https://github.com/timrwood/moment/pull/25)\n\n### 1.0.0\n\nAdded convenience methods for getting and setting date parts.\n\nAdded better support for `moment.add()`.\n\nAdded better lang support in NodeJS.\n\nRenamed library from underscore.date to Moment.js\n\n### 0.6.1\n\nAdded Portuguese, Italian, and French language support\n\n### 0.6.0\n\nAdded _date.lang() support.\nAdded support for passing multiple formats to try to parse a date. _date("07-10-1986", ["MM-DD-YYYY", "YYYY-MM-DD"]);\nMade parse from string and single format 25% faster.\n\n### 0.5.2\n\nBugfix for [issue 8](https://github.com/timrwood/underscore.date/pull/8) and [issue 9](https://github.com/timrwood/underscore.date/pull/9).\n\n### 0.5.1\n\nBugfix for [issue 5](https://github.com/timrwood/underscore.date/pull/5).\n\n### 0.5.0\n\nDropped the redundant `_date.date()` in favor of `_date()`.\nRemoved `_date.now()`, as it is a duplicate of `_date()` with no parameters.\nRemoved `_date.isLeapYear(yearNumber)`. Use `_date([yearNumber]).isLeapYear()` instead.\nExposed customization options through the `_date.relativeTime`, `_date.weekdays`, `_date.weekdaysShort`, `_date.months`, `_date.monthsShort`, and `_date.ordinal` variables instead of the `_date.customize()` function.\n\n### 0.4.1\n\nAdded date input formats for input strings.\n\n### 0.4.0\n\nAdded underscore.date to npm. Removed dependencies on underscore.\n\n### 0.3.2\n\nAdded `\'z\'` and `\'zz\'` to `_.date().format()`. Cleaned up some redundant code to trim off some bytes.\n\n### 0.3.1\n\nCleaned up the namespace. Moved all date manipulation and display functions to the _.date() object.\n\n### 0.3.0\n\nSwitched to the Underscore methodology of not mucking with the native objects\' prototypes.\nMade chaining possible.\n\n### 0.2.1\n\nChanged date names to be a more pseudo standardized \'dddd, MMMM Do YYYY, h:mm:ss a\'.\nAdded `Date.prototype` functions `add`, `subtract`, `isdst`, and `isleapyear`.\n\n### 0.2.0\n\nChanged function names to be more concise.\nChanged date format from php date format to custom format.\n\n### 0.1.0\n\nInitial release\n\nLicense\n=======\n\nMoment.js is freely distributable under the terms of the MIT license.\n\nCopyright (c) 2011-2012 Tim Wood\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation\nfiles (the "Software"), to deal in the Software without restriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
246 silly resolved     readmeFilename: 'readme.md',
246 silly resolved     _id: 'moment@2.0.0',
246 silly resolved     _from: 'moment@2.0.0' },
246 silly resolved   { name: 'fh-amqp-js',
246 silly resolved     version: '0.2.1',
246 silly resolved     description: 'FeedHenry AMQP Client',
246 silly resolved     main: './lib/amqpjs.js',
246 silly resolved     bin: { 'fh-amqp-js': './fh-amqp-js.js' },
246 silly resolved     directories: { lib: './lib' },
246 silly resolved     dependencies: { async: '0.2.7', amqp: '0.1.6', rc: '0.1.1' },
246 silly resolved     devDependencies: { whiskey: '0.6.13', proxyquire: '0.4.0' },
246 silly resolved     private: false,
246 silly resolved     scripts: { test: 'make test' },
246 silly resolved     readme: 'fh-amqp-js\n==========\n\nFeedHenry AMQP client wrapper for communication with a Rabbit cluster. \n\nOverview\n--------\n\nThe FeedHenry Platform includes a RabbitMQ cluster, which is set up to have highly available [Mirrored Queues](http://www.rabbitmq.com/ha.html). The messaging pattern that best suits our development requirements is the \'Topic\' pattern, described in the RabbitMQ [documentation](http://www.rabbitmq.com/tutorials/tutorial-five-python.html). \n\nThis client library helps with the following:\n\n* Automatic detection of Rabbit node failure and reconnecting to another node in the Rabbit Cluster.\n\n* \'publishTopic\' and \'subscribeToTopic\' type functions that set up correct Exchange and Q configuration behind the scenes.\n\nYou probably won\'t, but if you think you need to use a different Q type or Message Q Pattern, you will need to either extend this library, or use the [AMQP driver](https://github.com/postwait/node-amqp) directly.\n\nThis module can also be used from the command line, to quick publish a message to the FeedHenry Rabbit Cluster, or also as a handy way to quickly subscribe to FeedHenry messages.\n\nModule Usage\n------------\n\nSample [sub.js](https://github.com/fheng/fh-amqp-js/blob/master/examples/sub.js):\n\n```javascript\nvar fhamqpjs = require(\'fh-amqp-js\');\nvar cfg = {\n  clusterNodes: ["amqp://guest:guest@dummy.feedhenry.me:5672/fh-events", "amqp://guest:guest@dummy.feedhenry.me:5673/fh-events"],\n  maxReconnectAttempts: 10  // specifies how may connection failures to attempt before giving up.\n};\n \nvar amqpManager = new fhamqpjs.AMQPManager(cfg);\namqpManager.connectToCluster();\n \n// Note that the \'connection\' event will fire every time a connection is made to a different Rabbit Node in the cluster (i.e. if the first node we\'re connected to fails, this connection event will fire when we get connected to the next node in the cluster. Somewhat suboptimal but can\'t do much about it currently.\namqpManager.on("connection", function(){\n  amqpManager.subscribeToTopic("fh-event-exchange", "my-event-q", "my-topic-filter.#", subscribeFunc, function(err){\n    if(err) console.error("Fatal error setting up subscriber: ", err); \n...\n  });\n});\n \n// error handler: something fatal (like can\'t connect to any nodes in a cluster) needs to happen for this to fire.\namqpManager.on("error", function(err){\n  console.error("Fatal error: ", err);\n});\n \n// the function that gets called each time a message is recieved\nfunction subscribeFunc (json, headers, deliveryInfo) {\n  console.log("GOT MESSAGE: ", json);\n};\n```\n\nSample [pub.js](https://github.com/fheng/fh-amqp-js/blob/master/examples/pub.js):\n\n```javascript\nvar fhamqpjs = require(\'fh-amqp-js\');\nvar cfg = {\n  clusterNodes: ["amqp://guest:guest@dummy.feedhenry.me:5672/fh-events", "amqp://guest:guest@dummy.feedhenry.me:5673/fh-events"],\n  maxReconnectAttempts: 10\n};\n \nvar amqpManager = new fhamqpjs.AMQPManager(cfg);\namqpManager.connectToCluster();\n \n// note we clear the timer on each (re)connection\nvar t; var count=0;\namqpManager.on("connection", function(){\n  if (t) clearInterval(t);\n  t = setInterval(function(){\n    amqpManager.publishTopic("fh-event-exchange", "topic", {count: count++}, function(err){\n      if (err) console.error("Fatal publishing error: ", err);\n    });\n  }, 1000);\n});\n \namqpManager.on("error", function(err){\n  console.error("Fatal error: ", err);\n});\n\n```\n\nNote that the vhosts, Exchange names and Topics used internally in FeedHenry are documented here: TODO.\n\nCLI Usage\n---------\n\n    Usage: fh-amqp-js pub <exchange> <topic> <message> --clusterNodes=[<amqp-url>,*]\n    fh-amqp-js sub <exchange> <topic> --clusterNodes=[<amqp-url>,*]\n\n\nThe Command Line Interface can be used to quickly publish messages, e.g.\n\n    $ fh-amqp-js pub "fh-topic2" "fh.event.count" \'{"count": 1}\' --clusterNodes=\'["amqp://guest:guest@dummy.feedhenry.me:5672"]\'\n\nThere is also a \'sub\' command, for quickly subscribing to messages:\n\n    $ fh-amqp-js sub "fh-topic2" "fh.event.count" --clusterNodes=\'["amqp://guest:guest@dummy.feedhenry.me:5672"]\'\n\nConfiguration:\n\nThe CLI uses the [RC](https://github.com/dominictarr/rc) node module for incredibly flexible config finding (see its documentation). Config options currently are:\n\n```javascript\n{\n  clusterNodes: ["amqp://guest:guest@dummy.feedhenry.me:5672/fh-events", "amqp://guest:guest@dummy.feedhenry.me:5673/fh-events"],\n  maxReconnectAttempts: 10  // specifies how may connection failures to attempt before giving up.\n}\n```\n\nDevelopment\n-----------\n\nTo run the tests:\n\n    make test\n\nor:\n\n    make test-coverage-cli\n\nor: \n\n    make test-coverage-html\n\nBuild artifacts are located on Denzil here: http://denzil.henora.net:8080/view/common/job/fh-amqp-js/',
246 silly resolved     readmeFilename: 'README.md',
246 silly resolved     _id: 'fh-amqp-js@0.2.1',
246 silly resolved     _from: 'fh-amqp-js@*' } ]
247 info install fh-statsc@0.2.1 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
248 info install fh-connect@1.8.6 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
249 info install fh-security@0.1.2-3 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
250 info install async@0.2.1 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
251 info install fh-reportingclient@0.2.2 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
252 info install redis@0.8.2 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
253 info install request@2.12.0 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
254 info install winston@0.6.2 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
255 info install moment@2.0.0 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
256 info install fh-amqp-js@0.2.1 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
257 info installOne fh-statsc@0.2.1
258 info installOne fh-connect@1.8.6
259 warn engine fh-connect@1.8.6: wanted: {"node":">= 0.6.0 < 0.9.0"} (current: {"node":"v0.10.11","npm":"1.2.30"})
260 info installOne fh-security@0.1.2-3
261 info installOne async@0.2.1
262 info installOne fh-reportingclient@0.2.2
263 info installOne redis@0.8.2
264 info installOne request@2.12.0
265 info installOne winston@0.6.2
266 info installOne moment@2.0.0
267 info installOne fh-amqp-js@0.2.1
268 verbose from cache /Users/bmackey/.npm/fh-statsc/0.2.1/package/package.json
269 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc unbuild
270 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/package.json
271 verbose from cache /Users/bmackey/.npm/fh-connect/1.8.6/package/package.json
272 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect unbuild
273 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/package.json
274 verbose from cache /Users/bmackey/.npm/fh-security/0.1.2-3/package/package.json
275 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security unbuild
276 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/package.json
277 verbose from cache /Users/bmackey/.npm/async/0.2.1/package/package.json
278 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async unbuild
279 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async/package.json
280 verbose from cache /Users/bmackey/.npm/fh-reportingclient/0.2.2/package/package.json
281 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient unbuild
282 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/package.json
283 verbose from cache /Users/bmackey/.npm/redis/0.8.2/package/package.json
284 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis unbuild
285 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis/package.json
286 verbose from cache /Users/bmackey/.npm/request/2.12.0/package/package.json
287 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/request unbuild
288 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/request/package.json
289 verbose from cache /Users/bmackey/.npm/winston/0.6.2/package/package.json
290 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston unbuild
291 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/package.json
292 verbose from cache /Users/bmackey/.npm/moment/2.0.0/package/package.json
293 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment unbuild
294 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment/package.json
295 verbose from cache /Users/bmackey/.npm/fh-amqp-js/0.2.1/package/package.json
296 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js unbuild
297 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/package.json
298 verbose tar unpack /Users/bmackey/.npm/fh-statsc/0.2.1/package.tgz
299 silly lockFile 21d1f4f8-h-nodeapp-node-modules-fh-statsc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
300 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc /Users/bmackey/.npm/21d1f4f8-h-nodeapp-node-modules-fh-statsc.lock
301 silly lockFile d47320fe--npm-fh-statsc-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-statsc/0.2.1/package.tgz
302 verbose lock tar:///Users/bmackey/.npm/fh-statsc/0.2.1/package.tgz /Users/bmackey/.npm/d47320fe--npm-fh-statsc-0-2-1-package-tgz.lock
303 verbose tar unpack /Users/bmackey/.npm/fh-connect/1.8.6/package.tgz
304 silly lockFile 6ba771ee--nodeapp-node-modules-fh-connect tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
305 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect /Users/bmackey/.npm/6ba771ee--nodeapp-node-modules-fh-connect.lock
306 silly lockFile 82617ff2-npm-fh-connect-1-8-6-package-tgz tar:///Users/bmackey/.npm/fh-connect/1.8.6/package.tgz
307 verbose lock tar:///Users/bmackey/.npm/fh-connect/1.8.6/package.tgz /Users/bmackey/.npm/82617ff2-npm-fh-connect-1-8-6-package-tgz.lock
308 verbose tar unpack /Users/bmackey/.npm/fh-security/0.1.2-3/package.tgz
309 silly lockFile 9ddf865e-nodeapp-node-modules-fh-security tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security
310 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security /Users/bmackey/.npm/9ddf865e-nodeapp-node-modules-fh-security.lock
311 silly lockFile c87c8948--fh-security-0-1-2-3-package-tgz tar:///Users/bmackey/.npm/fh-security/0.1.2-3/package.tgz
312 verbose lock tar:///Users/bmackey/.npm/fh-security/0.1.2-3/package.tgz /Users/bmackey/.npm/c87c8948--fh-security-0-1-2-3-package-tgz.lock
313 verbose tar unpack /Users/bmackey/.npm/async/0.2.1/package.tgz
314 silly lockFile 79321267-es-fh-nodeapp-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async
315 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async /Users/bmackey/.npm/79321267-es-fh-nodeapp-node-modules-async.lock
316 silly lockFile c37f89a4-ckey-npm-async-0-2-1-package-tgz tar:///Users/bmackey/.npm/async/0.2.1/package.tgz
317 verbose lock tar:///Users/bmackey/.npm/async/0.2.1/package.tgz /Users/bmackey/.npm/c37f89a4-ckey-npm-async-0-2-1-package-tgz.lock
318 verbose tar unpack /Users/bmackey/.npm/fh-reportingclient/0.2.2/package.tgz
319 silly lockFile 03189c61--node-modules-fh-reportingclient tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
320 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient /Users/bmackey/.npm/03189c61--node-modules-fh-reportingclient.lock
321 silly lockFile 4cef1e07-eportingclient-0-2-2-package-tgz tar:///Users/bmackey/.npm/fh-reportingclient/0.2.2/package.tgz
322 verbose lock tar:///Users/bmackey/.npm/fh-reportingclient/0.2.2/package.tgz /Users/bmackey/.npm/4cef1e07-eportingclient-0-2-2-package-tgz.lock
323 verbose tar unpack /Users/bmackey/.npm/redis/0.8.2/package.tgz
324 silly lockFile 3cfc7fba-es-fh-nodeapp-node-modules-redis tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis
325 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis /Users/bmackey/.npm/3cfc7fba-es-fh-nodeapp-node-modules-redis.lock
326 silly lockFile 48bff734-ckey-npm-redis-0-8-2-package-tgz tar:///Users/bmackey/.npm/redis/0.8.2/package.tgz
327 verbose lock tar:///Users/bmackey/.npm/redis/0.8.2/package.tgz /Users/bmackey/.npm/48bff734-ckey-npm-redis-0-8-2-package-tgz.lock
328 verbose tar unpack /Users/bmackey/.npm/request/2.12.0/package.tgz
329 silly lockFile d21ec71e--fh-nodeapp-node-modules-request tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/request
330 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/request /Users/bmackey/.npm/d21ec71e--fh-nodeapp-node-modules-request.lock
331 silly lockFile dace1ac6-y-npm-request-2-12-0-package-tgz tar:///Users/bmackey/.npm/request/2.12.0/package.tgz
332 verbose lock tar:///Users/bmackey/.npm/request/2.12.0/package.tgz /Users/bmackey/.npm/dace1ac6-y-npm-request-2-12-0-package-tgz.lock
333 verbose tar unpack /Users/bmackey/.npm/winston/0.6.2/package.tgz
334 silly lockFile 9e7c30cc--fh-nodeapp-node-modules-winston tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
335 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston /Users/bmackey/.npm/9e7c30cc--fh-nodeapp-node-modules-winston.lock
336 silly lockFile bf707e49-ey-npm-winston-0-6-2-package-tgz tar:///Users/bmackey/.npm/winston/0.6.2/package.tgz
337 verbose lock tar:///Users/bmackey/.npm/winston/0.6.2/package.tgz /Users/bmackey/.npm/bf707e49-ey-npm-winston-0-6-2-package-tgz.lock
338 verbose tar unpack /Users/bmackey/.npm/moment/2.0.0/package.tgz
339 silly lockFile cee45a8a-s-fh-nodeapp-node-modules-moment tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment
340 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment /Users/bmackey/.npm/cee45a8a-s-fh-nodeapp-node-modules-moment.lock
341 silly lockFile f0da5709-key-npm-moment-2-0-0-package-tgz tar:///Users/bmackey/.npm/moment/2.0.0/package.tgz
342 verbose lock tar:///Users/bmackey/.npm/moment/2.0.0/package.tgz /Users/bmackey/.npm/f0da5709-key-npm-moment-2-0-0-package-tgz.lock
343 verbose tar unpack /Users/bmackey/.npm/fh-amqp-js/0.2.1/package.tgz
344 silly lockFile 730b588c--nodeapp-node-modules-fh-amqp-js tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
345 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js /Users/bmackey/.npm/730b588c--nodeapp-node-modules-fh-amqp-js.lock
346 silly lockFile de0c74e0-npm-fh-amqp-js-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-amqp-js/0.2.1/package.tgz
347 verbose lock tar:///Users/bmackey/.npm/fh-amqp-js/0.2.1/package.tgz /Users/bmackey/.npm/de0c74e0-npm-fh-amqp-js-0-2-1-package-tgz.lock
348 silly gunzTarPerm modes [ '755', '644' ]
349 silly gunzTarPerm modes [ '755', '644' ]
350 silly gunzTarPerm modes [ '755', '644' ]
351 silly gunzTarPerm modes [ '755', '644' ]
352 silly gunzTarPerm modes [ '755', '644' ]
353 silly gunzTarPerm modes [ '755', '644' ]
354 silly gunzTarPerm modes [ '755', '644' ]
355 silly gunzTarPerm modes [ '755', '644' ]
356 silly gunzTarPerm modes [ '755', '644' ]
357 silly gunzTarPerm modes [ '755', '644' ]
358 silly gunzTarPerm extractEntry package.json
359 silly gunzTarPerm extractEntry package.json
360 silly gunzTarPerm extractEntry package.json
361 silly gunzTarPerm extractEntry package.json
362 silly gunzTarPerm extractEntry package.json
363 silly gunzTarPerm extractEntry package.json
364 silly gunzTarPerm extractEntry package.json
365 silly gunzTarPerm extractEntry package.json
366 silly gunzTarPerm extractEntry package.json
367 silly gunzTarPerm extractEntry package.json
368 silly gunzTarPerm extractEntry CHANGELOG.txt
369 silly gunzTarPerm extractEntry VERSION.txt
370 silly gunzTarPerm extractEntry .npmignore
371 silly gunzTarPerm extractEntry LICENSE
372 silly gunzTarPerm extractEntry VERSION.txt
373 silly gunzTarPerm extractEntry lib/security.js
374 silly gunzTarPerm extractEntry CHANGELOG.txt
375 silly gunzTarPerm extractEntry VERSION.txt
376 silly gunzTarPerm extractEntry README.md
377 silly gunzTarPerm extractEntry LICENSE
378 silly gunzTarPerm extractEntry lib/async.js
379 silly gunzTarPerm extractEntry .npmignore
380 silly gunzTarPerm extractEntry README.md
381 silly gunzTarPerm extractEntry .npmignore
382 silly gunzTarPerm extractEntry README.md
383 silly gunzTarPerm extractEntry README.md
384 silly gunzTarPerm extractEntry LICENSE
385 silly gunzTarPerm extractEntry .npmignore
386 silly gunzTarPerm extractEntry LICENSE
387 silly gunzTarPerm extractEntry .npmignore
388 silly gunzTarPerm extractEntry README.md
389 silly gunzTarPerm extractEntry bin/fh-statsc.js
390 silly gunzTarPerm extractEntry lib/stats.js
391 silly gunzTarPerm extractEntry example/package.json
392 silly gunzTarPerm extractEntry example/bin/fh-reptest.js
393 silly gunzTarPerm extractEntry man/fh-security.1
394 silly gunzTarPerm extractEntry test.js
395 silly gunzTarPerm extractEntry index.js
396 silly gunzTarPerm extractEntry Readme.md
397 silly gunzTarPerm extractEntry LICENSE
398 silly gunzTarPerm extractEntry aws.js
399 silly gunzTarPerm extractEntry fh-amqp-js.js
400 silly gunzTarPerm extractEntry LICENSE.txt
401 silly gunzTarPerm extractEntry ender.js
402 silly gunzTarPerm extractEntry grunt.js
403 silly gunzTarPerm extractEntry lib/fh-reporting.js
404 silly gunzTarPerm extractEntry man/fh-reportingclient.1
405 silly gunzTarPerm extractEntry diff_multi_bench_output.js
406 silly gunzTarPerm extractEntry multi_bench.js
407 silly gunzTarPerm extractEntry man/fh-statsc.1
408 silly gunzTarPerm extractEntry package.json.bak
409 silly gunzTarPerm extractEntry lib/cache.js
410 silly gunzTarPerm extractEntry lib/connect.js
411 silly gunzTarPerm extractEntry .travis.yml
412 silly gunzTarPerm extractEntry docs/transports.md
413 silly gunzTarPerm extractEntry Makefile
414 silly gunzTarPerm extractEntry dfc-debug.log
415 silly gunzTarPerm extractEntry dist/fh-amqp-js-0.1.0-DEV-VERSION.tar.gz
416 silly gunzTarPerm extractEntry lib/amqpjs.js
417 silly gunzTarPerm extractEntry lib/fhevents.js
418 silly gunzTarPerm extractEntry output/fh-amqp-js-0.1.0-DEV-VERSION/package.json
419 silly gunzTarPerm extractEntry output/fh-amqp-js-0.1.0-DEV-VERSION/fh-amqp-js.js
420 silly gunzTarPerm extractEntry output/fh-amqp-js-0.1.0-DEV-VERSION/VERSION.txt
421 silly gunzTarPerm extractEntry output/fh-amqp-js-0.1.0-DEV-VERSION/lib/amqpjs.js
422 silly gunzTarPerm extractEntry moment.js
423 silly gunzTarPerm extractEntry package.js
424 silly gunzTarPerm extractEntry package.json.bak
425 silly gunzTarPerm extractEntry lib/http.js
426 silly gunzTarPerm extractEntry .travis.yml
427 silly gunzTarPerm extractEntry CONTRIBUTING.md
428 silly gunzTarPerm extractEntry lib/https.js
429 silly gunzTarPerm extractEntry lib/index.js
430 silly gunzTarPerm extractEntry lib/patch.js
431 silly gunzTarPerm extractEntry test/lang/ar-ma.js
432 silly gunzTarPerm extractEntry test/lang/gl.js
433 silly gunzTarPerm extractEntry forever.js
434 silly gunzTarPerm extractEntry main.js
435 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/package.json
436 silly gunzTarPerm extractEntry lib/utils.js
437 silly gunzTarPerm extractEntry lib/middleware/basicAuth.js
438 silly gunzTarPerm extractEntry test/lang/he.js
439 silly gunzTarPerm extractEntry test/lang/hu.js
440 silly lockFile 9ddf865e-nodeapp-node-modules-fh-security tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security
441 silly lockFile 9ddf865e-nodeapp-node-modules-fh-security tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security
442 silly lockFile c87c8948--fh-security-0-1-2-3-package-tgz tar:///Users/bmackey/.npm/fh-security/0.1.2-3/package.tgz
443 silly lockFile c87c8948--fh-security-0-1-2-3-package-tgz tar:///Users/bmackey/.npm/fh-security/0.1.2-3/package.tgz
444 info preinstall fh-security@0.1.2-3
445 silly gunzTarPerm extractEntry lib/middleware/errorHandler.js
446 silly gunzTarPerm extractEntry lib/middleware/favicon.js
447 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/package.json
448 verbose readDependencies using package.json deps
449 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/package.json
450 verbose readDependencies using package.json deps
451 silly gunzTarPerm extractEntry uuid.js
452 silly gunzTarPerm extractEntry tunnel.js
453 verbose cache add [ 'ursa@*', null ]
454 verbose cache add name=undefined spec="ursa@*" args=["ursa@*",null]
455 verbose parsed url { protocol: null,
455 verbose parsed url   slashes: null,
455 verbose parsed url   auth: null,
455 verbose parsed url   host: null,
455 verbose parsed url   port: null,
455 verbose parsed url   hostname: null,
455 verbose parsed url   hash: null,
455 verbose parsed url   search: null,
455 verbose parsed url   query: null,
455 verbose parsed url   pathname: 'ursa@*',
455 verbose parsed url   path: 'ursa@*',
455 verbose parsed url   href: 'ursa@*' }
456 verbose cache add name="ursa" spec="*" args=["ursa","*"]
457 verbose parsed url { protocol: null,
457 verbose parsed url   slashes: null,
457 verbose parsed url   auth: null,
457 verbose parsed url   host: null,
457 verbose parsed url   port: null,
457 verbose parsed url   hostname: null,
457 verbose parsed url   hash: null,
457 verbose parsed url   search: null,
457 verbose parsed url   query: null,
457 verbose parsed url   pathname: '*',
457 verbose parsed url   path: '*',
457 verbose parsed url   href: '*' }
458 verbose addNamed [ 'ursa', '*' ]
459 verbose addNamed [ null, '' ]
460 silly lockFile 537bca9f-ursa ursa@*
461 verbose lock ursa@* /Users/bmackey/.npm/537bca9f-ursa.lock
462 silly addNameRange { name: 'ursa', range: '', hasData: false }
463 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/package.json
464 verbose registry.get ursa not expired, no request
465 silly addNameRange number 2 { name: 'ursa', range: '', hasData: true }
466 silly addNameRange versions [ 'ursa',
466 silly addNameRange   [ '0.4.10',
466 silly addNameRange     '0.4.11',
466 silly addNameRange     '0.4.12',
466 silly addNameRange     '0.4.13',
466 silly addNameRange     '0.6.0',
466 silly addNameRange     '0.6.1',
466 silly addNameRange     '0.6.2',
466 silly addNameRange     '0.6.3',
466 silly addNameRange     '0.6.4',
466 silly addNameRange     '0.6.5',
466 silly addNameRange     '0.6.6',
466 silly addNameRange     '0.6.7',
466 silly addNameRange     '0.6.8',
466 silly addNameRange     '0.6.9',
466 silly addNameRange     '0.7.0',
466 silly addNameRange     '0.8.0' ] ]
467 verbose addNamed [ 'ursa', '0.8.0' ]
468 verbose addNamed [ '0.8.0', '0.8.0' ]
469 silly lockFile ffd8e17f-ursa-0-8-0 ursa@0.8.0
470 verbose lock ursa@0.8.0 /Users/bmackey/.npm/ffd8e17f-ursa-0-8-0.lock
471 silly gunzTarPerm extractEntry lib/middleware/limit.js
472 silly gunzTarPerm extractEntry lib/middleware/directory.js
473 verbose read json /Users/bmackey/.npm/ursa/0.8.0/package/package.json
474 silly lockFile 21d1f4f8-h-nodeapp-node-modules-fh-statsc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
475 silly lockFile 21d1f4f8-h-nodeapp-node-modules-fh-statsc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
476 silly lockFile d47320fe--npm-fh-statsc-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-statsc/0.2.1/package.tgz
477 silly lockFile d47320fe--npm-fh-statsc-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-statsc/0.2.1/package.tgz
478 silly gunzTarPerm extractEntry index.js
479 silly gunzTarPerm extractEntry test3.js
480 silly gunzTarPerm extractEntry examples/couchdb.js
481 silly gunzTarPerm extractEntry examples/exception.js
482 silly gunzTarPerm extractEntry oauth.js
483 silly gunzTarPerm extractEntry tests/test-https-strict.js
484 info preinstall fh-statsc@0.2.1
485 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/package.json
486 silly lockFile ffd8e17f-ursa-0-8-0 ursa@0.8.0
487 silly lockFile ffd8e17f-ursa-0-8-0 ursa@0.8.0
488 verbose readDependencies using package.json deps
489 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/package.json
490 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/package.json
491 verbose readDependencies using package.json deps
492 silly lockFile 537bca9f-ursa ursa@*
493 silly lockFile 537bca9f-ursa ursa@*
494 verbose cache add [ 'async@0.2.9', null ]
495 verbose cache add name=undefined spec="async@0.2.9" args=["async@0.2.9",null]
496 verbose parsed url { protocol: null,
496 verbose parsed url   slashes: null,
496 verbose parsed url   auth: null,
496 verbose parsed url   host: null,
496 verbose parsed url   port: null,
496 verbose parsed url   hostname: null,
496 verbose parsed url   hash: null,
496 verbose parsed url   search: null,
496 verbose parsed url   query: null,
496 verbose parsed url   pathname: 'async@0.2.9',
496 verbose parsed url   path: 'async@0.2.9',
496 verbose parsed url   href: 'async@0.2.9' }
497 verbose cache add name="async" spec="0.2.9" args=["async","0.2.9"]
498 verbose parsed url { protocol: null,
498 verbose parsed url   slashes: null,
498 verbose parsed url   auth: null,
498 verbose parsed url   host: null,
498 verbose parsed url   port: null,
498 verbose parsed url   hostname: null,
498 verbose parsed url   hash: null,
498 verbose parsed url   search: null,
498 verbose parsed url   query: null,
498 verbose parsed url   pathname: '0.2.9',
498 verbose parsed url   path: '0.2.9',
498 verbose parsed url   href: '0.2.9' }
499 verbose addNamed [ 'async', '0.2.9' ]
500 verbose addNamed [ '0.2.9', '0.2.9' ]
501 silly lockFile be62480b-async-0-2-9 async@0.2.9
502 verbose lock async@0.2.9 /Users/bmackey/.npm/be62480b-async-0-2-9.lock
503 silly resolved [ { name: 'ursa',
503 silly resolved     version: '0.8.0',
503 silly resolved     keywords:
503 silly resolved      [ 'crypto',
503 silly resolved        'key',
503 silly resolved        'openssl',
503 silly resolved        'private',
503 silly resolved        'public',
503 silly resolved        'rsa',
503 silly resolved        'sign',
503 silly resolved        'signature',
503 silly resolved        'verify',
503 silly resolved        'verification',
503 silly resolved        'hash',
503 silly resolved        'digest' ],
503 silly resolved     description: 'RSA public/private key crypto',
503 silly resolved     homepage: 'https://github.com/Obvious/ursa',
503 silly resolved     repository: { type: 'git', url: 'https://github.com/Obvious/ursa.git' },
503 silly resolved     licenses: [ [Object] ],
503 silly resolved     author:
503 silly resolved      { name: 'Dan Bornstein',
503 silly resolved        email: 'danfuzz@milk.com',
503 silly resolved        url: 'http://www.milk.com/' },
503 silly resolved     maintainers: [ [Object] ],
503 silly resolved     main: 'lib/ursa.js',
503 silly resolved     engine: { node: '>=0.6.0' },
503 silly resolved     scripts:
503 silly resolved      { install: 'node-gyp configure build && node install.js',
503 silly resolved        test: 'node test/test.js' },
503 silly resolved     readme: 'ursa\n====\n\nThis Node module provides a fairly complete set of wrappers for the\nRSA public/private key crypto functionality of OpenSSL.\n\nIt has been tested by the maintainer on both Node 0.6.* and Node 0.8.*,\non both Linux and OS X (the latter in several configurations, including\nNode built from source as well as installed via MacPorts and Homebrew).\nIf you find it doesn\'t work for you, please file a bug (see below).\n\nIt has been tested on Windows by [SLaks](https://github.com/SLaks).  (see additional installation requirements)\n\n\nBuilding and Installing\n-----------------------\n\n```shell\nnpm install ursa\n```\n\nOr grab the source and\n\n```shell\nnpm install\n```\n\nTesting\n-------\n\n```shell\nnpm test\n```\n\nOr\n\n```shell\nnode ./test/test.js\n```\n\nOn Windows, you\'ll need to install some dependencies first:\n - [node-gyp](https://github.com/TooTallNate/node-gyp/) (`npm install -g node-gyp`)\n   - [Python 2.7](http://www.python.org/download/releases/2.7.3#download) (not 3.3)\n   - Vistual Studio 2010 or higher (including Express editions)\n     - Windows XP/Vista/7:\n        - Microsoft Visual Studio C++ 2010 ([Express](http://go.microsoft.com/?linkid=9709949) version works well)\n        - For 64-bit builds of node and native modules you will _**also**_ need the [Windows 7 64-bit SDK](http://www.microsoft.com/en-us/download/details.aspx?id=8279)\n        - If you get errors that the 64-bit compilers are not installed you may also need the [compiler update for the Windows SDK 7.1](http://www.microsoft.com/en-us/download/details.aspx?id=4422)\n     - Windows 8:\n        - Microsoft Visual Studio C++ 2012 for Windows Desktop ([Express](http://go.microsoft.com/?linkid=9816758) version works well)\n - [OpenSSL](http://slproweb.com/products/Win32OpenSSL.html) (normal, not light)\nin the same bitness as your Node.js installation.\n  - The build script looks for OpenSSL in the default install directory  \n  (`C:\\OpenSSL-Win32` or `C:\\OpenSSL-Win64`)\n  - If you get `Error: The specified module could not be found.`, copy `libeay32.dll` from the OpenSSL bin directory to this module\'s bin directory, or to Windows\\System3.\n\nUsage\n-----\n\nThis library aims to be convenient to use, allowing one to pass in and\nget back regular string objects. However, it is also meant to be reasonably\neasy to use efficiently, allowing one to pass in and get back Buffer\nobjects. Using Buffers is always the more efficient option.\n\nAll methods that can deal with strings take one or more arguments indicating\nthe encoding to use when interpreting an argument or generating a result.\nThese are limited to the usual encoding names that are valid for use with\nBuffers: `base64` `binary` `hex` and `utf8`. If an encoding is left undefined\nand the argument is a string, then the encoding is *always* assumed to be\n`utf8`. If an argument is a Buffer, then the encoding (if defined at all)\nis ignored. An undefined output encoding is *always* interpreted as a request\nfor a Buffer result.\n\nThe library knows how to read and output PEM format files for both\npublic and private keys, and it can generate new private keys (aka\nkeypairs).\n\nThe usual public-encryption / private-decryption operations by default\nuse padding mode `RSA_PKCS1_OAEP_PADDING`, which is the recommended\nmode for all new applications (as of this writing). Note that this mode\nbuilds-in a random element into every encryption operation, making it\nunnecessary to waste time or effort adding randomness in at a higher layer.\nThis default may be overridden to use the older mode `RSA_PKCS1_PADDING`\nif needed.\n\nThe less well-understood private-encryption / public-decryption operations\n(used for building signature mechanisms) are always done using padding\nmode `RSA_PKCS1_PADDING`. This doesn\'t build in any randomness (but that\'s\nnot usually a problem for applications that use these operations).\n\nSee the doc comments and tests for the excruciating details, but here\'s\na quick rundown of the available top-level exports and instance methods:\n\nTop-Level Exports\n-----------------\n\n### ursa.createPrivateKey(pem, password, encoding)\n\nCreate and return a private key (aka a keypair) read in from the given\nPEM-format file.  If defined, the given password is used to decrypt\nthe PEM file.\n\nThe encoding, if specified, applies to both other arguments.\n\nSee "Public Key Methods" below for more details.\n\n### ursa.assertKey(obj)\n\nConvenient shorthand for `assert(ursa.isKey(obj))`.\n\n### ursa.assertPrivateKey(obj)\n\nConvenient shorthand for `assert(ursa.isPrivateKey(obj))`.\n\n### ursa.assertPublicKey(obj)\n\nConvenient shorthand for `assert(ursa.isPublicKey(obj))`.\n\n### ursa.coerceKey(orig)\n\nCoerce the given key value into a key object (either public or\nprivate), returning it. If given a private key object, this just\nreturns it as-is. If given a string or Buffer, it tries to parse it as\nPEM. Anything else will result in an error.\n\n### ursa.coercePrivateKey(orig)\n\nCoerce the given key value into a private key object, returning it. If\ngiven a private key object, this just returns it as-is. If given a\nstring or Buffer, it tries to parse it as PEM. Anything else will\nresult in an error.\n\n### ursa.coercePublicKey(orig)\n\nCoerce the given key value into a public key object, returning it. If\ngiven a private key object, this just returns it as-is. If given a\nstring or Buffer, it tries to parse it as PEM. Anything else will\nresult in an error.\n\n### ursa.createPublicKey(pem, encoding)\n\nCreate and return a public key read in from the given PEM-format file.\nSee "Public Key Methods" below for more details.\n\n### ursa.createSigner(algorithm)\n\nCreate and return a signer which can sign a hash generated with the named\nalgorithm (such as `"sha256"` or `"md5"`). See "Signer Methods" below\nfor more details.\n\nThis function is similar to `crypto.createSign()`, except this function\ntakes a hash algorithm name (e.g., `"sha256"`) and not a crypto+hash name\ncombination (e.g., `"RSA-SHA256"`).\n\n### ursa.createVerifier(algorithm)\n\nCreate and return a verifier which can verify a hash generated with the\nnamed algorithm (such as `"sha256"` or `"md5"`). See "Verifier Methods" below\nfor more details.\n\nThis function is similar to `crypto.createVerify()`, except this function\ntakes a hash algorithm name (e.g., `"sha256"`) and not a crypto+hash name\ncombination (e.g., `"RSA-SHA256"`).\n\n### ursa.equalKeys(key1, key2)\n\nThis returns `true` if and only if both arguments are key objects of\nthe same type (public or private) and their contents match.\n\n### ursa.generatePrivateKey(modulusBits, exponent)\n\nCreate and return a freshly-generated private key (aka a keypair).\nThe first argument indicates the number of bits in the modulus (1024\nor more is generally considered secure). The second argument indicates\nthe exponent value, which must be odd (65537 is the typical value; 3\nand 17 are also common).  Both arguments are optional and default to\n2048 and 65537 (respectively).\n\nThis method will throw if `modulusBits` is less than `512` (because\nit\'s pretty crazy to want a key with that few bits) or if `exponent`\nis even (because RSA only works for odd exponents).\n\nUsing the command-line `openssl` tool, this operation is\nequivalent to:\n\n```shell\nopenssl genrsa -out key-name.pem <modulusBits>\n```\n\nfor exponent 65537, or for exponent 3 with the additional option\n`-3`. (That tool doesn\'t support other exponents.)\n\n### ursa.isKey(obj)\n\nReturn `true` if the given object is a key object (public or private) that\nwas created by this module. Return `false` if not.\n\n### ursa.isPrivateKey(obj)\n\nReturn `true` if the given object is a private key object that\nwas created by this module. Return `false` if not.\n\n### ursa.isPublicKey(obj)\n\nReturn `true` if the given object is a public key object that\nwas created by this module. Return `false` if not.\n\nNote that, even though all the public key operations work on private\nkeys, this function only returns true if the given object is a\npublic key, per se.\n\n### ursa.matchingPublicKeys(key1, key2)\n\nThis returns `true` if and only if both arguments are key objects of\nsome sort (either can be public or private, and they don\'t have to\nbe the same) and their public aspects match each other.\n\n### ursa.sshFingerprint(sshKey, sshEncoding, outEncoding)\n\nReturn the SSH-style public key fingerprint of the given SSH-format\npublic key (which was, perhaps, the result of a call to\n`toPublicSsh()` on a key object).\n\nThis is no more and no less than an MD5 hash of the given SSH-format\npublic key. This function doesn\'t actually check to see if the given\nkey is valid (garbage in, garbage out).\n\nUsing the command-line `ssh-keygen` tool, this operation is\nequivalent to:\n\n```shell\nssh-keygen -l -f key-name.sshpub\n```\n\nThis operation is also equivalent to this:\n\n```shell\ncat key-name.sshpub | awk \'{print $2}\' | base64 --decode | md5\n```\n\nPublic Key Methods\n------------------\n\nThese are all the methods available on public keys. These methods are\n*also* available on private keys (since private keys have all the\nunderlying data necessary to perform the public-side operations).\n\n### encrypt(buf, bufEncoding, outEncoding, padding)\n\nThis performs the "public encrypt" operation on the given buffer. The\nresult is always a byte sequence that is the same size as the key\nassociated with the instance. (For example, if the key is 2048 bits,\nthen the result of this operation will be 2048 bits, aka 256 bytes.)\n\nThe input buffer is limited to be no larger than the key size\nminus 41 bytes.\n\nIf no padding mode is specified, the default, and recommended, mode\nis `ursa.RSA_PKCS1_OAEP_PADDING`. The mode\n`ursa.RSA_PKCS1_PADDING` is also supported.\n\n### getExponent(encoding)\n\nGet the public exponent as an unsigned big-endian byte sequence.\n\n### getModulus(encoding)\n\nGet the public modulus as an unsigned big-endian byte sequence.\n\n### hashAndVerify(algorithm, buf, sig, encoding)\n\nThis is a friendly wrapper for verifying signatures. The given buffer\nis hashed using the named algorithm, and the result is verified\nagainst the given signature. This returns `true` if the hash and\nsignature match and the signature was produced by the appropriate\nprivate key. This returns `false` if the signature is a valid signature\n(structurally) but doesn\'t match. This throws an exception in other\ncases.\n\nThe encoding, if specified, applies to both buffer-like arguments. The\nalgorithm must always be a string.\n\n### publicDecrypt(buf, bufEncoding, outEncoding)\n\nThis performs the "public decrypt" operation on the given buffer. The\nresult is always a byte sequence that is no more than the size of the\nkey associated with the instance. (For example, if the key is 2048\nbits, then the result of this operation will be no more than 2048\nbits, aka 256 bytes.)\n\nThis operation is always performed using padding mode\n`RSA_PKCS1_PADDING`.\n\n### toPublicPem(encoding)\n\nThis converts the public key data into a PEM-format file.\n\n### toPublicSsh(encoding)\n\nThis converts the public key data into an SSH-format file. This is the\nfile format one finds in SSH\'s `authorized_keys` and `known_hosts` files.\nWhen used in such files, the contents are base64-encoded and prefixed with\nthe label `ssh-rsa`. Depending on context, the line a key appears on may\nalso have a host name prefix (in `known_hosts`) or comment suffix\n(in `authorized_keys`).\n\nUsing the command-line `ssh-keygen` tool, this operation is equivalent to:\n\n```shell\nssh-keygen -y -f key-name.pem > key-name.sshpub\n```\n\n### toPublicSshFingerprint(encoding)\n\nReturn the SSH-style public key fingerprint of this key. See\n`ursa.sshFingerprint()`, above, for more details.\n\n### verify(algorithm, hash, sig, encoding)\n\nThis performs an RSA public-verify on the given hash buffer, which\nshould be the result of performing the hash operation named by\nthe algorithm (such as `"sha256"` or `"md5"`) on some data. The\nsignature buffer is checked to see if it contains a private-signed\nstatement of the algorithm and hash. The method returns `true` if\nthe signature and hash match, or `false` if the signature and hash\ndon\'t match but the signature is at least a valid signature of\nsome sort. In any other situation, this throws an exception.\n\nThe encoding, if specified, applies to both buffer-like arguments. The\nalgorithm must always be a string.\n\nThis method is the underlying one used as part of the implementation\nof the higher-level and much friendlier `ursa.createVerifier()` and\n`hashAndVerify()`.\n\n### ununseal(ununsealer)\n\nThis is an internal method that is used in the implementation of\n`ursa.isKey()` `ursa.isPrivateKey()` `ursa.isPublicKey()` and\nassociated assertion functions. When called externally, it will\nalways return `undefined`.\n\n\nPrivate Key Methods\n-------------------\n\nThese are the methods available on private keys, above and beyond\nwhat is available for public keys.\n\n### decrypt(buf, bufEncoding, outEncoding, padding)\n\nThis performs the "private decrypt" operation on the given buffer. The\nresult is always a byte sequence that is no more than the size of the\nkey associated with the instance. (For example, if the key is 2048\nbits, then the result of this operation will be no more than 2048\nbits, aka 256 bytes.)\n\nIf no padding mode is specified, the default, and recommended, mode\nis `ursa.RSA_PKCS1_OAEP_PADDING`. The mode\n`ursa.RSA_PKCS1_PADDING` is also supported.\n\n### hashAndSign(algorithm, buf, bufEncoding, outEncoding)\n\nThis is a friendly wrapper for producing signatures. The given buffer\nis hashed using the named algorithm, and the result is signed using\nthe private key held by this instance. The return value of this method\nis the signature.\n\n### privateEncrypt(buf, bufEncoding, outEncoding)\n\nThis performs the "private encrypt" operation on the given buffer. The\nresult is always a byte sequence that is the same size as the key\nassociated with the instance. (For example, if the key is 2048 bits,\nthen the result of this operation will be 2048 bits, aka 256 bytes.)\n\nThe input buffer is limited to be no larger than the key size\nminus 12 bytes.\n\nThis operation is always performed using padding mode\n`RSA_PKCS1_PADDING`.\n\n### sign(algorithm, hash, hashEncoding, outEncoding)\n\nThis performs an RSA private-sign on the given hash buffer, which\nshould be the result of performing the hash operation named by\nthe algorithm (such as `"sha256"` or `"md5"`) on some data. The\nresult of this operation may later be passed to `verify()` on the\ncorresponding public key.\n\nThis method is the underlying one used as part of the implementation\nof the higher-level and much friendlier `ursa.createSigner()` and\n`hashAndSign()`.\n\n### toPrivatePem(encoding)\n\nThis converts the private key data into a PEM-format file. The result\nis not encrypted, so it behooves the user of this method to take care\nwith the result if the key is sensitive from a security standpoint,\nwhich is often the case with such things. (YMMV of course.)\n\n\nSigner Methods\n--------------\n\nThese are the methods available on signer objects, which are returned\nby `ursa.createSigner()`. These are similar to the objects returned\nfrom `crypto.createSign()`.\n\n### update(buf, bufEncoding)\n\nUpdate the hash in-progress with the given data.\n\n### sign(privateKey, outEncoding)\n\nGet the final hash of the data, and sign it using the private key. The\nreturn value is the signature, suitable for later verification.\n\n\nVerifier Methods\n----------------\n\nThese are the methods available on verifier objects, which are returned\nby `ursa.createVerifier()`. These are similar to the objects returned\nfrom `crypto.createVerify()`.\n\n### update(buf, bufEncoding)\n\nUpdate the hash in-progress with the given data.\n\n### verify(publicKey, sig, sigEncoding)\n\nGet the final hash of the data, and verify that the given signature\nboth matches it and was produced by the private key corresponding to\nthe given public key.\n\nThis returns `true` if the signature and hash match appropriately,\nor `false` if the signature appears to be generally valid (e.g.\nstructurally) yet doesn\'t match. This throws an exception in all\nother cases.\n\n\nConstants\n---------\n\nAllowed padding modes for public encryption and\nprivate decryption:\n\n* `ursa.RSA_PKCS1_PADDING`\n* `ursa.RSA_PKCS1_OAEP_PADDING`\n\n\nContributing\n------------\n\nQuestions, comments, bug reports, and pull requests are all welcome.\nSubmit them at [the project on GitHub](https://github.com/Obvious/ursa/).\n\nBug reports that include steps-to-reproduce (including code) are the\nbest. Even better, make them in the form of pull requests that update\nthe test suite. Thanks!\n\n\nAuthors\n-------\n\n[Dan Bornstein](https://github.com/danfuzz)\n([personal website](http://www.milk.com/)), supported by\n[The Obvious Corporation](http://obvious.com/).\n\nWith contribution from:\n\n* [Tyler Neylon](https://github.com/tylerneylon)\n\nWith thanks to:\n\n* [node-rsa](https://github.com/chrisa/node-rsa) by Chris Andrews,\n  for inspiration\n\n\nLicense\n-------\n\nCopyright 2012 [The Obvious Corporation](http://obvious.com/).\n\nLicensed under the Apache License, Version 2.0. \nSee the top-level file `LICENSE.txt` and\n(http://www.apache.org/licenses/LICENSE-2.0).\n',
503 silly resolved     readmeFilename: 'README.md',
503 silly resolved     bugs: { url: 'https://github.com/Obvious/ursa/issues' },
503 silly resolved     _id: 'ursa@0.8.0',
503 silly resolved     _from: 'ursa@*' } ]
504 info install ursa@0.8.0 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security
505 info installOne ursa@0.8.0
506 verbose from cache /Users/bmackey/.npm/ursa/0.8.0/package/package.json
507 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa unbuild
508 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa/package.json
509 silly gunzTarPerm extractEntry examples/raw-mode.js
510 silly gunzTarPerm extractEntry examples/webhook-post.js
511 silly lockFile 03189c61--node-modules-fh-reportingclient tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
512 silly lockFile 03189c61--node-modules-fh-reportingclient tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
513 silly gunzTarPerm extractEntry lib/middleware/bodyParser.js
514 silly gunzTarPerm extractEntry lib/middleware/profiler.js
515 verbose tar unpack /Users/bmackey/.npm/ursa/0.8.0/package.tgz
516 silly lockFile 57d070d2-es-fh-security-node-modules-ursa tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa
517 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa /Users/bmackey/.npm/57d070d2-es-fh-security-node-modules-ursa.lock
518 silly lockFile 2e1679f8-ackey-npm-ursa-0-8-0-package-tgz tar:///Users/bmackey/.npm/ursa/0.8.0/package.tgz
519 verbose lock tar:///Users/bmackey/.npm/ursa/0.8.0/package.tgz /Users/bmackey/.npm/2e1679f8-ackey-npm-ursa-0-8-0-package-tgz.lock
520 silly lockFile 4cef1e07-eportingclient-0-2-2-package-tgz tar:///Users/bmackey/.npm/fh-reportingclient/0.2.2/package.tgz
521 silly lockFile 4cef1e07-eportingclient-0-2-2-package-tgz tar:///Users/bmackey/.npm/fh-reportingclient/0.2.2/package.tgz
522 verbose registry.get async/0.2.9 not expired, no request
523 silly gunzTarPerm modes [ '755', '644' ]
524 silly gunzTarPerm extractEntry tests/test-headers.js
525 silly gunzTarPerm extractEntry tests/test-httpModule.js
526 verbose read json /Users/bmackey/.npm/async/0.2.9/package/package.json
527 silly gunzTarPerm extractEntry lib/winston.js
528 silly gunzTarPerm extractEntry lib/winston/common.js
529 info preinstall fh-reportingclient@0.2.2
530 silly gunzTarPerm extractEntry package.json
531 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/package.json
532 silly gunzTarPerm extractEntry lib/middleware/query.js
533 silly gunzTarPerm extractEntry lib/middleware/responseTime.js
534 verbose readDependencies using package.json deps
535 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/package.json
536 verbose readDependencies using package.json deps
537 silly gunzTarPerm extractEntry .npmignore
538 silly gunzTarPerm extractEntry README.md
539 verbose cache add [ 'async@0.1.16', null ]
540 verbose cache add name=undefined spec="async@0.1.16" args=["async@0.1.16",null]
541 verbose parsed url { protocol: null,
541 verbose parsed url   slashes: null,
541 verbose parsed url   auth: null,
541 verbose parsed url   host: null,
541 verbose parsed url   port: null,
541 verbose parsed url   hostname: null,
541 verbose parsed url   hash: null,
541 verbose parsed url   search: null,
541 verbose parsed url   query: null,
541 verbose parsed url   pathname: 'async@0.1.16',
541 verbose parsed url   path: 'async@0.1.16',
541 verbose parsed url   href: 'async@0.1.16' }
542 verbose cache add name="async" spec="0.1.16" args=["async","0.1.16"]
543 verbose parsed url { protocol: null,
543 verbose parsed url   slashes: null,
543 verbose parsed url   auth: null,
543 verbose parsed url   host: null,
543 verbose parsed url   port: null,
543 verbose parsed url   hostname: null,
543 verbose parsed url   hash: null,
543 verbose parsed url   search: null,
543 verbose parsed url   query: null,
543 verbose parsed url   pathname: '0.1.16',
543 verbose parsed url   path: '0.1.16',
543 verbose parsed url   href: '0.1.16' }
544 verbose addNamed [ 'async', '0.1.16' ]
545 verbose addNamed [ '0.1.16', '0.1.16' ]
546 silly lockFile a5ad263c-async-0-1-16 async@0.1.16
547 verbose lock async@0.1.16 /Users/bmackey/.npm/a5ad263c-async-0-1-16.lock
548 verbose cache add [ 'request@2.9.100', null ]
549 verbose cache add name=undefined spec="request@2.9.100" args=["request@2.9.100",null]
550 verbose parsed url { protocol: null,
550 verbose parsed url   slashes: null,
550 verbose parsed url   auth: null,
550 verbose parsed url   host: null,
550 verbose parsed url   port: null,
550 verbose parsed url   hostname: null,
550 verbose parsed url   hash: null,
550 verbose parsed url   search: null,
550 verbose parsed url   query: null,
550 verbose parsed url   pathname: 'request@2.9.100',
550 verbose parsed url   path: 'request@2.9.100',
550 verbose parsed url   href: 'request@2.9.100' }
551 verbose cache add name="request" spec="2.9.100" args=["request","2.9.100"]
552 verbose parsed url { protocol: null,
552 verbose parsed url   slashes: null,
552 verbose parsed url   auth: null,
552 verbose parsed url   host: null,
552 verbose parsed url   port: null,
552 verbose parsed url   hostname: null,
552 verbose parsed url   hash: null,
552 verbose parsed url   search: null,
552 verbose parsed url   query: null,
552 verbose parsed url   pathname: '2.9.100',
552 verbose parsed url   path: '2.9.100',
552 verbose parsed url   href: '2.9.100' }
553 verbose addNamed [ 'request', '2.9.100' ]
554 verbose addNamed [ '2.9.100', '2.9.100' ]
555 silly lockFile 66486f29-request-2-9-100 request@2.9.100
556 verbose lock request@2.9.100 /Users/bmackey/.npm/66486f29-request-2-9-100.lock
557 silly lockFile be62480b-async-0-2-9 async@0.2.9
558 silly lockFile be62480b-async-0-2-9 async@0.2.9
559 silly resolved [ { name: 'async',
559 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
559 silly resolved     main: './lib/async',
559 silly resolved     author: { name: 'Caolan McMahon' },
559 silly resolved     version: '0.2.9',
559 silly resolved     repository: { type: 'git', url: 'https://github.com/caolan/async.git' },
559 silly resolved     bugs: { url: 'https://github.com/caolan/async/issues' },
559 silly resolved     licenses: [ [Object] ],
559 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
559 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
559 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
559 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser. Also supports [component](https://github.com/component/component).\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], fs.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like fs.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], fs.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\');\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
559 silly resolved     readmeFilename: 'README.md',
559 silly resolved     _id: 'async@0.2.9',
559 silly resolved     _from: 'async@0.2.9' } ]
560 info install async@0.2.9 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
561 info installOne async@0.2.9
562 verbose from cache /Users/bmackey/.npm/async/0.2.9/package/package.json
563 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async unbuild
564 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async/package.json
565 verbose registry.get async/0.1.16 not expired, no request
566 verbose registry.get request/2.9.100 not expired, no request
567 verbose read json /Users/bmackey/.npm/async/0.1.16/package/package.json
568 verbose read json /Users/bmackey/.npm/request/2.9.100/package/package.json
569 verbose tar unpack /Users/bmackey/.npm/async/0.2.9/package.tgz
570 silly lockFile 4899ca41-les-fh-statsc-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async
571 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async /Users/bmackey/.npm/4899ca41-les-fh-statsc-node-modules-async.lock
572 silly lockFile 6661fedd-ckey-npm-async-0-2-9-package-tgz tar:///Users/bmackey/.npm/async/0.2.9/package.tgz
573 verbose lock tar:///Users/bmackey/.npm/async/0.2.9/package.tgz /Users/bmackey/.npm/6661fedd-ckey-npm-async-0-2-9-package-tgz.lock
574 silly gunzTarPerm extractEntry lib/middleware/router.js
575 silly gunzTarPerm extractEntry lib/middleware/csrf.js
576 silly gunzTarPerm extractEntry install.js
577 silly gunzTarPerm modes [ '755', '644' ]
578 silly gunzTarPerm extractEntry package.json
579 silly gunzTarPerm extractEntry LICENSE.txt
580 silly gunzTarPerm extractEntry binding.gyp
581 silly lockFile a5ad263c-async-0-1-16 async@0.1.16
582 silly lockFile a5ad263c-async-0-1-16 async@0.1.16
583 silly lockFile 66486f29-request-2-9-100 request@2.9.100
584 silly lockFile 66486f29-request-2-9-100 request@2.9.100
585 silly gunzTarPerm extractEntry lib/middleware/staticCache.js
586 silly gunzTarPerm extractEntry lib/middleware/cookieParser.js
587 silly gunzTarPerm extractEntry README.md
588 silly gunzTarPerm extractEntry LICENSE
589 silly gunzTarPerm extractEntry component.json
590 silly gunzTarPerm extractEntry lib/async.js
591 silly resolved [ { name: 'async',
591 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
591 silly resolved     main: './index',
591 silly resolved     author: { name: 'Caolan McMahon' },
591 silly resolved     version: '0.1.16',
591 silly resolved     repository: { type: 'git', url: 'http://github.com/caolan/async.git' },
591 silly resolved     bugs: { url: 'http://github.com/caolan/async/issues' },
591 silly resolved     licenses: [ [Object] ],
591 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser.\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, forEach…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n    async.parallel([\n        function(){ ... },\n        function(){ ... }\n    ], callback);\n\n    async.series([\n        function(){ ... },\n        function(){ ... }\n    ]);\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n\n## Download\n\nReleases are available for download from\n[GitHub](http://github.com/caolan/async/downloads).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 17.5kb Uncompressed\n\n__Production:__ [async.min.js](https://github.com/caolan/async/raw/master/dist/async.min.js) - 1.7kb Packed and Gzipped\n\n\n## In the Browser\n\nSo far its been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n    <script type="text/javascript" src="async.js"></script>\n    <script type="text/javascript">\n\n        async.map(data, asyncProcess, function(err, results){\n            alert(results);\n        });\n\n    </script>\n\n\n## Documentation\n\n### Collections\n\n* [forEach](#forEach)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [until](#until)\n* [waterfall](#waterfall)\n* [queue](#queue)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n### forEach(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the forEach function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // assuming openFiles is an array of file names and saveFile is a function\n    // to save the modified contents of that file:\n\n    async.forEach(openFiles, saveFile, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n\n---------------------------------------\n\n<a name="forEachSeries" />\n### forEachSeries(arr, iterator, callback)\n\nThe same as forEach only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n### forEachLimit(arr, limit, iterator, callback)\n\nThe same as forEach only the iterator is applied to batches of items in the\narray, in series. The next batch of iterators is only called once the current\none has completed processing.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - How many items should be in each batch.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // Assume documents is an array of JSON objects and requestApi is a\n    // function that interacts with a rate-limited REST api.\n\n    async.forEachLimit(documents, 20, requestApi, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as filter, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then its probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback which accepts an optional error as its first argument, and the state\n  of the reduction as the second. If an error is passed to the callback, the\n  reduction is stopped and the main callback is immediately called with the\n  error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n    async.reduce([1,2,3], 0, function(memo, item, callback){\n        // pointless async:\n        process.nextTick(function(){\n            callback(null, memo + item)\n        });\n    }, function(err, result){\n        // result is now equal to the last value of memo, which is 6\n    });\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n    async.detect([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // result now equals the first file in the list that exists\n    });\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a value to use as the sort criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n    async.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n        fs.stat(file, function(err, stats){\n            callback(err, stats.mtime);\n        });\n    }, function(err, results){\n        // results is now the original array of files sorted by\n        // modified date\n    });\n\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n    async.some([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then at least one of the files exists\n    });\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n    async.every([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then every file exists\n    });\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n    async.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n        // files is now a list of filenames that exist in the 3 directories\n    });\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.series([\n        function(callback){\n            // do some stuff ...\n            callback(null, \'one\');\n        },\n        function(callback){\n            // do some more stuff ...\n            callback(null, \'two\');\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // results is now equal to [\'one\', \'two\']\n    });\n\n\n    // an example using an object instead of an array\n    async.series({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equal to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed a\n  callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.parallel([\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'one\');\n            }, 200);\n        },\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'two\');\n            }, 100);\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // in this case, the results array will equal [\'two\',\'one\']\n        // because the functions were run in parallel and the second\n        // function had a shorter timeout before calling the callback.\n    });\n\n\n    // an example using an object instead of an array\n    async.parallel({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equals to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback which must be called once it has completed with an optional\n  error as the first argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n    var count = 0;\n\n    async.whilst(\n        function () { return count < 5; },\n        function (callback) {\n            count++;\n            setTimeout(callback, 1000);\n        },\n        function (err) {\n            // 5 seconds have passed\n        }\n    );\n\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n    async.waterfall([\n        function(callback){\n            callback(null, \'one\', \'two\');\n        },\n        function(arg1, arg2, callback){\n            callback(null, \'three\');\n        },\n        function(arg1, callback){\n            // arg1 now equals \'three\'\n            callback(null, \'done\');\n        }\n    ], function (err, result) {\n       // result now equals \'done\'    \n    });\n\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n    // create a queue object with concurrency 2\n\n    var q = async.queue(function (task, callback) {\n        console.log(\'hello \' + task.name);\n        callback();\n    }, 2);\n\n\n    // assign a callback\n    q.drain = function() {\n        console.log(\'all items have been processed\');\n    }\n\n    // add some items to the queue\n\n    q.push({name: \'foo\'}, function (err) {\n        console.log(\'finished processing foo\');\n    });\n    q.push({name: \'bar\'}, function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n    // add some items to the queue (batch-wise)\n\n    q.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The\n  syntax is easier to understand by looking at the example.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. If all tasks complete\n  successfully, it will receive an object containing their results.\n\n__Example__\n\n    async.auto({\n        get_data: function(callback){\n            // async code to get some data\n        },\n        make_folder: function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        },\n        write_file: [\'get_data\', \'make_folder\', function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n            callback(null, filename);\n        }],\n        email_link: [\'write_file\', function(callback, results){\n            // once the file is written let\'s email a link to it...\n            // results.write_file contains the filename returned by write_file.\n        }]\n    });\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n    async.parallel([\n        function(callback){\n            // async code to get some data\n        },\n        function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        }\n    ],\n    function(results){\n        async.series([\n            function(callback){\n                // once there is some data and the directory exists,\n                // write the data to a file in the directory\n            },\n            email_link: function(callback){\n                // once the file is written let\'s email a link to it...\n            }\n        ]);\n    });\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. Its also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n\n__Example__\n\n    var iterator = async.iterator([\n        function(){ sys.p(\'one\'); },\n        function(){ sys.p(\'two\'); },\n        function(){ sys.p(\'three\'); }\n    ]);\n\n    node> var iterator2 = iterator();\n    \'one\'\n    node> var iterator3 = iterator2();\n    \'two\'\n    node> iterator3();\n    \'three\'\n    node> var nextfn = iterator2.next();\n    node> nextfn();\n    \'three\'\n\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n    // using apply\n\n    async.parallel([\n        async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n        async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n    ]);\n\n\n    // the same process without using apply\n\n    async.parallel([\n        function(callback){\n            fs.writeFile(\'testfile1\', \'test1\', callback);\n        },\n        function(callback){\n            fs.writeFile(\'testfile2\', \'test2\', callback);\n        },\n    ]);\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n    node> var fn = async.apply(sys.puts, \'one\');\n    node> fn(\'two\', \'three\');\n    one\n    two\n    three\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setTimeout(callback, 0),\nwhich means other higher priority events may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n    var call_order = [];\n    async.nextTick(function(){\n        call_order.push(\'two\');\n        // call_order now equals [\'one\',\'two]\n    });\n    call_order.push(\'one\')\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n    var slow_fn = function (name, callback) {\n        // do something\n        callback(null, result);\n    };\n    var fn = async.memoize(slow_fn);\n\n    // fn can now be used as if it were slow_fn\n    fn(\'some name\', function () {\n        // callback\n    });\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, \'hello \' + name);\n        }, 1000);\n    };\n\n    node> async.log(hello, \'world\');\n    \'hello world\'\n\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, {hello: name});\n        }, 1000);\n    };\n\n    node> async.dir(hello, \'world\');\n    {hello: \'world\'}\n\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
591 silly resolved     readmeFilename: 'README.md',
591 silly resolved     _id: 'async@0.1.16',
591 silly resolved     _from: 'async@0.1.16' },
591 silly resolved   { name: 'request',
591 silly resolved     description: 'Simplified HTTP request client.',
591 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
591 silly resolved     version: '2.9.100',
591 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
591 silly resolved     repository: { type: 'git', url: 'http://github.com/mikeal/request.git' },
591 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
591 silly resolved     engines: [ 'node >= 0.3.6' ],
591 silly resolved     main: './main',
591 silly resolved     scripts: { test: 'bash tests/run.sh' },
591 silly resolved     readme: '# Request -- Simplified HTTP request method\n\n## Install\n\n<pre>\n  npm install request\n</pre>\n\nOr from source:\n\n<pre>\n  git clone git://github.com/mikeal/request.git \n  cd request\n  npm link\n</pre>\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It support HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types, in this case `application/json`, and use the proper content-type in the PUT request if one is not already provided in the headers.\n\n```javascript\nfs.readStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also pipe to itself. When doing so the content-type and content-length will be preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let\'s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    } \n  }\n})\n```\n\nYou can also pipe() from a http.ServerRequest instance and to a http.ServerResponse instance. The HTTP method and headers will be sent as well as the entity-body data. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since pipe() returns the destination stream in node 0.5.x you can do one line proxying :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Assume by some stretch of magic you aquired the verifier\n  var access_token = qs.parse(body)\n    , oauth = \n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: VERIFIER\n      , token_secret: access_token.oauth_token_secret\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth = \n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1/users/show.json?\'\n      , params = \n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n\n\n### request(options, callback)\n\nThe first argument can be either a url or an options object. The only required option is uri, all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from url.parse()\n* `method` - http method, defaults to GET\n* `headers` - http headers, defaults to {}\n* `body` - entity body for POST and PUT requests. Must be buffer or string.\n* `form` - sets `body` but to querystring representation of value and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects. defaults to true.\n* `maxRedirects` - the maximum number of redirects to follow, defaults to 10.\n* `onResponse` - If true the callback will be fired on the "response" event instead of "end". If a function it will be called on "response" and not effect the regular semantics of the main callback on "end".\n* `encoding` - Encoding to be used on `setEncoding` of response data. If set to `null`, the body is returned as a Buffer.\n* `pool` - A hash object containing the agents for these requests. If omitted this request will use the global pool which is set to node\'s default maxSockets.\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\t\n* `proxy` - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it\'s supported with the `url` parameter by embedding the auth info in the uri.\n* `oauth` - Options for OAuth HMAC-SHA1 signing, see documentation above.\n* `strictSSL` - Set to `true` to require that SSL certificates be valid. Note: to use your own certificate authority, you need to specify an agent that was created with that ca as an option.\n* `jar` - Set to `false` if you don\'t want cookies to be remembered for future use or define your custom cookie jar (see examples section)\n\n\nThe callback argument gets 3 arguments. The first is an error when applicable (usually from the http.Client option not the http.ClientRequest object). The second in an http.ClientResponse object. The third is the response body String or Buffer.\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)  \n  \nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as request() but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.post\n\nSame as request() but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as request() but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nAlias to normal request method for uniformity.\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart: \n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ] \n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\nCookies are enabled by default (so they can be used in subsequent requests). To disable cookies set jar to false (either in defaults or in the options sent).\n\n```javascript\nvar request = request.defaults({jar: false})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nIf you to use a custom cookie jar (instead of letting request use its own global cookie jar) you do so by setting the jar default or by specifying it as an option:\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.add(cookie)\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n',
591 silly resolved     readmeFilename: 'README.md',
591 silly resolved     _id: 'request@2.9.100',
591 silly resolved     _from: 'request@2.9.100' } ]
592 info install async@0.1.16 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
593 info install request@2.9.100 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
594 info installOne async@0.1.16
595 info installOne request@2.9.100
596 verbose from cache /Users/bmackey/.npm/async/0.1.16/package/package.json
597 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async unbuild
598 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async/package.json
599 verbose from cache /Users/bmackey/.npm/request/2.9.100/package/package.json
600 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request unbuild
601 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request/package.json
602 verbose tar unpack /Users/bmackey/.npm/async/0.1.16/package.tgz
603 silly lockFile f4f0905d-portingclient-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async
604 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async /Users/bmackey/.npm/f4f0905d-portingclient-node-modules-async.lock
605 silly lockFile fd5f474c-key-npm-async-0-1-16-package-tgz tar:///Users/bmackey/.npm/async/0.1.16/package.tgz
606 verbose lock tar:///Users/bmackey/.npm/async/0.1.16/package.tgz /Users/bmackey/.npm/fd5f474c-key-npm-async-0-1-16-package-tgz.lock
607 verbose tar unpack /Users/bmackey/.npm/request/2.9.100/package.tgz
608 silly lockFile 05f23e67-rtingclient-node-modules-request tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request
609 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request /Users/bmackey/.npm/05f23e67-rtingclient-node-modules-request.lock
610 silly lockFile cecfa175--npm-request-2-9-100-package-tgz tar:///Users/bmackey/.npm/request/2.9.100/package.tgz
611 verbose lock tar:///Users/bmackey/.npm/request/2.9.100/package.tgz /Users/bmackey/.npm/cecfa175--npm-request-2-9-100-package-tgz.lock
612 silly gunzTarPerm modes [ '755', '644' ]
613 silly gunzTarPerm modes [ '755', '644' ]
614 silly gunzTarPerm extractEntry package.json
615 silly gunzTarPerm extractEntry package.json
616 silly gunzTarPerm extractEntry lib/winston/config.js
617 silly gunzTarPerm extractEntry lib/winston/container.js
618 silly gunzTarPerm extractEntry README.md
619 silly gunzTarPerm extractEntry LICENSE
620 silly gunzTarPerm extractEntry README.md
621 silly gunzTarPerm extractEntry LICENSE
622 silly gunzTarPerm extractEntry test/lang/id.js
623 silly gunzTarPerm extractEntry test/lang/fr.js
624 silly gunzTarPerm extractEntry lib/middleware/session.js
625 silly gunzTarPerm extractEntry lib/middleware/compiler.js
626 silly gunzTarPerm extractEntry index.js
627 silly gunzTarPerm extractEntry dist/async.min.js
628 silly gunzTarPerm extractEntry forever.js
629 silly gunzTarPerm extractEntry lib/winston/exception.js
630 silly gunzTarPerm extractEntry lib/winston/logger.js
631 silly gunzTarPerm extractEntry test/lang/it.js
632 silly gunzTarPerm extractEntry test/lang/ja.js
633 silly gunzTarPerm extractEntry lib/winston/transports.js
634 silly gunzTarPerm extractEntry lib/winston/config/cli-config.js
635 silly gunzTarPerm extractEntry lib/middleware/static.js
636 silly gunzTarPerm extractEntry lib/middleware/logger.js
637 silly gunzTarPerm extractEntry lib/ursa.js
638 silly gunzTarPerm extractEntry src/asprintf.cc
639 silly gunzTarPerm extractEntry test/lang/ko.js
640 silly gunzTarPerm extractEntry test/lang/lv.js
641 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async/package.json
642 silly gunzTarPerm extractEntry lib/winston/config/npm-config.js
643 silly gunzTarPerm extractEntry lib/winston/config/syslog-config.js
644 silly gunzTarPerm extractEntry tests/run.js
645 silly gunzTarPerm extractEntry tests/test-form.js
646 silly gunzTarPerm extractEntry src/asprintf.h
647 silly gunzTarPerm extractEntry src/ursaNative.cc
648 silly lockFile 79321267-es-fh-nodeapp-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async
649 silly lockFile 79321267-es-fh-nodeapp-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async
650 silly gunzTarPerm extractEntry test/lang/nb.js
651 silly gunzTarPerm extractEntry test/lang/fr-ca.js
652 silly gunzTarPerm extractEntry lib/winston/transports/console.js
653 silly gunzTarPerm extractEntry lib/winston/transports/file.js
654 silly gunzTarPerm extractEntry lib/middleware/vhost.js
655 silly gunzTarPerm extractEntry lib/middleware/methodOverride.js
656 silly gunzTarPerm extractEntry main.js
657 silly gunzTarPerm extractEntry mimetypes.js
658 silly lockFile c37f89a4-ckey-npm-async-0-2-1-package-tgz tar:///Users/bmackey/.npm/async/0.2.1/package.tgz
659 silly lockFile c37f89a4-ckey-npm-async-0-2-1-package-tgz tar:///Users/bmackey/.npm/async/0.2.1/package.tgz
660 silly gunzTarPerm extractEntry tests/test-oauth.js
661 silly gunzTarPerm extractEntry tests/test-params.js
662 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/package.json
663 info preinstall async@0.2.1
664 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async/package.json
665 verbose readDependencies using package.json deps
666 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async/package.json
667 verbose readDependencies using package.json deps
668 silly resolved []
669 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async
670 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async
671 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/async/package.json
672 verbose linkStuff [ false,
672 verbose linkStuff   false,
672 verbose linkStuff   false,
672 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules' ]
673 info linkStuff async@0.2.1
674 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
675 verbose linkBins async@0.2.1
676 verbose linkMans async@0.2.1
677 verbose rebuildBundles async@0.2.1
678 info install async@0.2.1
679 silly gunzTarPerm extractEntry lib/middleware/session/cookie.js
680 silly gunzTarPerm extractEntry lib/middleware/session/memory.js
681 info postinstall async@0.2.1
682 silly lockFile 730b588c--nodeapp-node-modules-fh-amqp-js tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
683 silly lockFile 730b588c--nodeapp-node-modules-fh-amqp-js tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
684 silly gunzTarPerm extractEntry lib/winston/transports/http.js
685 silly gunzTarPerm extractEntry lib/winston/transports/transport.js
686 silly lockFile de0c74e0-npm-fh-amqp-js-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-amqp-js/0.2.1/package.tgz
687 silly lockFile de0c74e0-npm-fh-amqp-js-0-2-1-package-tgz tar:///Users/bmackey/.npm/fh-amqp-js/0.2.1/package.tgz
688 info preinstall fh-amqp-js@0.2.1
689 silly gunzTarPerm extractEntry lib/middleware/session/session.js
690 silly gunzTarPerm extractEntry lib/middleware/session/store.js
691 silly gunzTarPerm extractEntry tests/test-piped-redirect.js
692 silly gunzTarPerm extractEntry tests/test-pipes.js
693 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/package.json
694 silly gunzTarPerm extractEntry src/ursaNative.h
695 silly gunzTarPerm extractEntry test/fixture.js
696 verbose readDependencies using package.json deps
697 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/package.json
698 silly gunzTarPerm extractEntry oauth.js
699 silly gunzTarPerm extractEntry uuid.js
700 verbose readDependencies using package.json deps
701 silly gunzTarPerm extractEntry generate_commands.js
702 silly gunzTarPerm extractEntry lib/commands.js
703 verbose cache add [ 'rc@0.1.1', null ]
704 verbose cache add name=undefined spec="rc@0.1.1" args=["rc@0.1.1",null]
705 verbose parsed url { protocol: null,
705 verbose parsed url   slashes: null,
705 verbose parsed url   auth: null,
705 verbose parsed url   host: null,
705 verbose parsed url   port: null,
705 verbose parsed url   hostname: null,
705 verbose parsed url   hash: null,
705 verbose parsed url   search: null,
705 verbose parsed url   query: null,
705 verbose parsed url   pathname: 'rc@0.1.1',
705 verbose parsed url   path: 'rc@0.1.1',
705 verbose parsed url   href: 'rc@0.1.1' }
706 verbose cache add name="rc" spec="0.1.1" args=["rc","0.1.1"]
707 verbose parsed url { protocol: null,
707 verbose parsed url   slashes: null,
707 verbose parsed url   auth: null,
707 verbose parsed url   host: null,
707 verbose parsed url   port: null,
707 verbose parsed url   hostname: null,
707 verbose parsed url   hash: null,
707 verbose parsed url   search: null,
707 verbose parsed url   query: null,
707 verbose parsed url   pathname: '0.1.1',
707 verbose parsed url   path: '0.1.1',
707 verbose parsed url   href: '0.1.1' }
708 verbose addNamed [ 'rc', '0.1.1' ]
709 verbose addNamed [ '0.1.1', '0.1.1' ]
710 silly lockFile 51b3509a-rc-0-1-1 rc@0.1.1
711 verbose lock rc@0.1.1 /Users/bmackey/.npm/51b3509a-rc-0-1-1.lock
712 verbose cache add [ 'async@0.2.7', null ]
713 verbose cache add name=undefined spec="async@0.2.7" args=["async@0.2.7",null]
714 verbose parsed url { protocol: null,
714 verbose parsed url   slashes: null,
714 verbose parsed url   auth: null,
714 verbose parsed url   host: null,
714 verbose parsed url   port: null,
714 verbose parsed url   hostname: null,
714 verbose parsed url   hash: null,
714 verbose parsed url   search: null,
714 verbose parsed url   query: null,
714 verbose parsed url   pathname: 'async@0.2.7',
714 verbose parsed url   path: 'async@0.2.7',
714 verbose parsed url   href: 'async@0.2.7' }
715 verbose cache add name="async" spec="0.2.7" args=["async","0.2.7"]
716 verbose parsed url { protocol: null,
716 verbose parsed url   slashes: null,
716 verbose parsed url   auth: null,
716 verbose parsed url   host: null,
716 verbose parsed url   port: null,
716 verbose parsed url   hostname: null,
716 verbose parsed url   hash: null,
716 verbose parsed url   search: null,
716 verbose parsed url   query: null,
716 verbose parsed url   pathname: '0.2.7',
716 verbose parsed url   path: '0.2.7',
716 verbose parsed url   href: '0.2.7' }
717 verbose addNamed [ 'async', '0.2.7' ]
718 verbose addNamed [ '0.2.7', '0.2.7' ]
719 silly lockFile 046e7838-async-0-2-7 async@0.2.7
720 verbose lock async@0.2.7 /Users/bmackey/.npm/046e7838-async-0-2-7.lock
721 verbose cache add [ 'amqp@0.1.6', null ]
722 verbose cache add name=undefined spec="amqp@0.1.6" args=["amqp@0.1.6",null]
723 verbose parsed url { protocol: null,
723 verbose parsed url   slashes: null,
723 verbose parsed url   auth: null,
723 verbose parsed url   host: null,
723 verbose parsed url   port: null,
723 verbose parsed url   hostname: null,
723 verbose parsed url   hash: null,
723 verbose parsed url   search: null,
723 verbose parsed url   query: null,
723 verbose parsed url   pathname: 'amqp@0.1.6',
723 verbose parsed url   path: 'amqp@0.1.6',
723 verbose parsed url   href: 'amqp@0.1.6' }
724 verbose cache add name="amqp" spec="0.1.6" args=["amqp","0.1.6"]
725 verbose parsed url { protocol: null,
725 verbose parsed url   slashes: null,
725 verbose parsed url   auth: null,
725 verbose parsed url   host: null,
725 verbose parsed url   port: null,
725 verbose parsed url   hostname: null,
725 verbose parsed url   hash: null,
725 verbose parsed url   search: null,
725 verbose parsed url   query: null,
725 verbose parsed url   pathname: '0.1.6',
725 verbose parsed url   path: '0.1.6',
725 verbose parsed url   href: '0.1.6' }
726 verbose addNamed [ 'amqp', '0.1.6' ]
727 verbose addNamed [ '0.1.6', '0.1.6' ]
728 silly lockFile aa0e0118-amqp-0-1-6 amqp@0.1.6
729 verbose lock amqp@0.1.6 /Users/bmackey/.npm/aa0e0118-amqp-0-1-6.lock
730 silly gunzTarPerm extractEntry test/native.js
731 silly gunzTarPerm extractEntry test/test.js
732 silly gunzTarPerm extractEntry tests/test-pool.js
733 silly gunzTarPerm extractEntry tests/test-follow-all.js
734 verbose registry.get rc/0.1.1 not expired, no request
735 verbose registry.get async/0.2.7 not expired, no request
736 verbose registry.get amqp/0.1.6 not expired, no request
737 verbose read json /Users/bmackey/.npm/rc/0.1.1/package/package.json
738 verbose read json /Users/bmackey/.npm/async/0.2.7/package/package.json
739 verbose read json /Users/bmackey/.npm/amqp/0.1.6/package/package.json
740 silly gunzTarPerm extractEntry tests/test-timeout.js
741 silly gunzTarPerm extractEntry tests/test-redirect.js
742 silly gunzTarPerm extractEntry lib/winston/transports/webhook.js
743 silly gunzTarPerm extractEntry test/cli-test.js
744 silly gunzTarPerm extractEntry lib/queue.js
745 silly gunzTarPerm extractEntry lib/to_array.js
746 silly gunzTarPerm extractEntry lib/public/directory.html
747 silly gunzTarPerm extractEntry lib/public/error.html
748 silly gunzTarPerm extractEntry Makefile
749 silly gunzTarPerm extractEntry .gitmodules
750 silly lockFile 51b3509a-rc-0-1-1 rc@0.1.1
751 silly lockFile 51b3509a-rc-0-1-1 rc@0.1.1
752 silly lockFile 046e7838-async-0-2-7 async@0.2.7
753 silly lockFile 046e7838-async-0-2-7 async@0.2.7
754 silly lockFile aa0e0118-amqp-0-1-6 amqp@0.1.6
755 silly lockFile aa0e0118-amqp-0-1-6 amqp@0.1.6
756 silly resolved [ { name: 'rc',
756 silly resolved     version: '0.1.1',
756 silly resolved     description: 'hardwired configuration loader',
756 silly resolved     main: 'index.js',
756 silly resolved     browserify: 'browser.js',
756 silly resolved     scripts: { test: 'set -e; node test/test.js; node test/ini.js' },
756 silly resolved     repository: { type: 'git', url: 'https://github.com/dominictarr/rc.git' },
756 silly resolved     keywords: [ 'config', 'rc', 'unix', 'defaults' ],
756 silly resolved     bin: { rc: './index.js' },
756 silly resolved     author:
756 silly resolved      { name: 'Dominic Tarr',
756 silly resolved        email: 'dominic.tarr@gmail.com',
756 silly resolved        url: 'dominictarr.com' },
756 silly resolved     license: 'BSD',
756 silly resolved     dependencies: { optimist: '~0.3.4', 'deep-extend': '~0.2.5', ini: '~1.1.0' },
756 silly resolved     readme: '# rc\n\nthe non configurable configuration loader for lazy people.\n\n# Usage\n\nthe only option is to pass rc the name of your app, and your default configuration.\n\n```\n  var rc = require(\'rc\')(appname, {\n    //defaults go here.\n    port: 2468\n  })\n```\n\n# Standards\n\nGiven your application name, rc will look in all the obvious places for configuration.\n\n\n  * command line arguments (parsed by optimist)\n  * enviroment variables prefixed with ${APPNAME}_\n  * if you passed an option `--config file` then from that file\n  * `$HOME/.${APPNAME}rc`\n  * `$HOME/.${APPNAME}/config`\n  * `$HOME/.config/${APPNAME}`\n  * `$HOME/.config/${APPNAME}/config`\n  * `/etc/${APPNAME}rc`\n  * `/etc/${APPNAME}/config`\n  * the defaults object you passed in.\n\nAll configuration sources that where found will be flattened into one object,\nso that sources earlier in this list override later ones.\n\n# Formats\n\nConfiguration files may be in either `json` or `ini` format.\nSince ini, and env variables do not have a standard for types,\nyour application needs be prepared for strings.\n\n# License\n\nBSD\n',
756 silly resolved     readmeFilename: 'README.md',
756 silly resolved     bugs: { url: 'https://github.com/dominictarr/rc/issues' },
756 silly resolved     _id: 'rc@0.1.1',
756 silly resolved     _from: 'rc@0.1.1' },
756 silly resolved   { name: 'async',
756 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
756 silly resolved     main: './lib/async',
756 silly resolved     author: { name: 'Caolan McMahon' },
756 silly resolved     version: '0.2.7',
756 silly resolved     repository: { type: 'git', url: 'http://github.com/caolan/async.git' },
756 silly resolved     bugs: { url: 'http://github.com/caolan/async/issues' },
756 silly resolved     licenses: [ [Object] ],
756 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
756 silly resolved     jam: { main: 'lib/async.js', include: [Object] },
756 silly resolved     scripts: { test: 'nodeunit test/test-async.js' },
756 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser.\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, each…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n```javascript\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n\nasync.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n    // results now equals an array of the existing files\n});\n\nasync.parallel([\n    function(){ ... },\n    function(){ ... }\n], callback);\n\nasync.series([\n    function(){ ... },\n    function(){ ... }\n]);\n```\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n## Common Pitfalls\n\n### Binding a context to an iterator\n\nThis section is really about bind, not about async. If you are wondering how to\nmake async execute your iterators in a given context, or are confused as to why\na method of another library isn\'t working as an iterator, study this example:\n\n```js\n// Here is a simple object with an (unnecessarily roundabout) squaring method\nvar AsyncSquaringLibrary = {\n  squareExponent: 2,\n  square: function(number, callback){ \n    var result = Math.pow(number, this.squareExponent);\n    setTimeout(function(){\n      callback(null, result);\n    }, 200);\n  }\n};\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square, function(err, result){\n  // result is [NaN, NaN, NaN]\n  // This fails because the `this.squareExponent` expression in the square\n  // function is not evaluated in the context of AsyncSquaringLibrary, and is\n  // therefore undefined.\n});\n\nasync.map([1, 2, 3], AsyncSquaringLibrary.square.bind(AsyncSquaringLibrary), function(err, result){\n  // result is [1, 4, 9]\n  // With the help of bind we can attach a context to the iterator before\n  // passing it to async. Now the square function will be executed in its \n  // \'home\' AsyncSquaringLibrary context and the value of `this.squareExponent`\n  // will be as expected.\n});\n```\n\n## Download\n\nThe source is available for download from\n[GitHub](http://github.com/caolan/async).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed\n\n## In the Browser\n\nSo far it\'s been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n```html\n<script type="text/javascript" src="async.js"></script>\n<script type="text/javascript">\n\n    async.map(data, asyncProcess, function(err, results){\n        alert(results);\n    });\n\n</script>\n```\n\n## Documentation\n\n### Collections\n\n* [each](#each)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [doWhilst](#doWhilst)\n* [until](#until)\n* [doUntil](#doUntil)\n* [forever](#forever)\n* [waterfall](#waterfall)\n* [compose](#compose)\n* [applyEach](#applyEach)\n* [queue](#queue)\n* [cargo](#cargo)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n* [times](#times)\n* [timesSeries](#timesSeries)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n<a name="each" />\n### each(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the each function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// assuming openFiles is an array of file names and saveFile is a function\n// to save the modified contents of that file:\n\nasync.each(openFiles, saveFile, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="forEachSeries" />\n<a name="eachSeries" />\n### eachSeries(arr, iterator, callback)\n\nThe same as each only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n<a name="eachLimit" />\n### eachLimit(arr, limit, iterator, callback)\n\nThe same as each only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err) which must be called once it has \n  completed. If no error has occured, the callback should be run without \n  arguments or with an explicit null argument.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n```js\n// Assume documents is an array of JSON objects and requestApi is a\n// function that interacts with a rate-limited REST api.\n\nasync.eachLimit(documents, 20, requestApi, function(err){\n    // if any of the saves produced an error, err would equal that error\n});\n```\n\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="mapLimit" />\n### mapLimit(arr, limit, iterator, callback)\n\nThe same as map only no more than "limit" iterators will be simultaneously \nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee that\n the first "limit" iterator functions will complete before any others are \nstarted.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - The maximum number of iterators to run at any time.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, transformed) which must be called once \n  it has completed with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n```js\nasync.map([\'file1\',\'file2\',\'file3\'], 1, fs.stat, function(err, results){\n    // results is now an array of stats for each file\n});\n```\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n```js\nasync.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n    // results now equals an array of the existing files\n});\n```\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as reject, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then it\'s probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback(err, reduction) which accepts an optional error as its first \n  argument, and the state of the reduction as the second. If an error is \n  passed to the callback, the reduction is stopped and the main callback is \n  immediately called with the error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n```js\nasync.reduce([1,2,3], 0, function(memo, item, callback){\n    // pointless async:\n    process.nextTick(function(){\n        callback(null, memo + item)\n    });\n}, function(err, result){\n    // result is now equal to the last value of memo, which is 6\n});\n```\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n```js\nasync.detect([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // result now equals the first file in the list that exists\n});\n```\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, sortValue) which must be called once it\n  has completed with an error (which can be null) and a value to use as the sort\n  criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n```js\nasync.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n    fs.stat(file, function(err, stats){\n        callback(err, stats.mtime);\n    });\n}, function(err, results){\n    // results is now the original array of files sorted by\n    // modified date\n});\n```\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n```js\nasync.some([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // if result is true then at least one of the files exists\n});\n```\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback(truthValue) which must be called with a \n  boolean argument once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n```js\nasync.every([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n    // if result is true then every file exists\n});\n```\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback(err, results) which must be called once it \n  has completed with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n```js\nasync.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n    // files is now a list of filenames that exist in the 3 directories\n});\n```\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.series([\n    function(callback){\n        // do some stuff ...\n        callback(null, \'one\');\n    },\n    function(callback){\n        // do some more stuff ...\n        callback(null, \'two\');\n    }\n],\n// optional callback\nfunction(err, results){\n    // results is now equal to [\'one\', \'two\']\n});\n\n\n// an example using an object instead of an array\nasync.series({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equal to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n__Example__\n\n```js\nasync.parallel([\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'one\');\n        }, 200);\n    },\n    function(callback){\n        setTimeout(function(){\n            callback(null, \'two\');\n        }, 100);\n    }\n],\n// optional callback\nfunction(err, results){\n    // the results array will equal [\'one\',\'two\'] even though\n    // the second function had a shorter timeout.\n});\n\n\n// an example using an object instead of an array\nasync.parallel({\n    one: function(callback){\n        setTimeout(function(){\n            callback(null, 1);\n        }, 200);\n    },\n    two: function(callback){\n        setTimeout(function(){\n            callback(null, 2);\n        }, 100);\n    }\n},\nfunction(err, results) {\n    // results is now equals to: {one: 1, two: 2}\n});\n```\n\n---------------------------------------\n\n<a name="parallel" />\n### parallelLimit(tasks, limit, [callback])\n\nThe same as parallel only the tasks are executed in parallel with a maximum of "limit" \ntasks executing at any time.\n\nNote that the tasks are not executed in batches, so there is no guarantee that \nthe first "limit" tasks will complete before any others are started.\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed \n  a callback(err, result) it must call on completion with an error (which can\n  be null) and an optional result value.\n* limit - The maximum number of tasks to run at any time.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets a results array (or object) containing all \n  the result arguments passed to the task callbacks.\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback(err) which must be called once it has completed with an \n  optional error argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n```js\nvar count = 0;\n\nasync.whilst(\n    function () { return count < 5; },\n    function (callback) {\n        count++;\n        setTimeout(callback, 1000);\n    },\n    function (err) {\n        // 5 seconds have passed\n    }\n);\n```\n\n---------------------------------------\n\n<a name="doWhilst" />\n### doWhilst(fn, test, callback)\n\nThe post check version of whilst. To reflect the difference in the order of operations `test` and `fn` arguments are switched. `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n---------------------------------------\n\n<a name="doUntil" />\n### doUntil(fn, test, callback)\n\nLike doWhilst except the test is inverted. Note the argument ordering differs from `until`.\n\n---------------------------------------\n\n<a name="forever" />\n### forever(fn, callback)\n\nCalls the asynchronous function \'fn\' repeatedly, in series, indefinitely.\nIf an error is passed to fn\'s callback then \'callback\' is called with the\nerror, otherwise it will never be called.\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a \n  callback(err, result1, result2, ...) it must call on completion. The first\n  argument is an error (which can be null) and any further arguments will be \n  passed as arguments in order to the next task.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n```js\nasync.waterfall([\n    function(callback){\n        callback(null, \'one\', \'two\');\n    },\n    function(arg1, arg2, callback){\n        callback(null, \'three\');\n    },\n    function(arg1, callback){\n        // arg1 now equals \'three\'\n        callback(null, \'done\');\n    }\n], function (err, result) {\n   // result now equals \'done\'    \n});\n```\n\n---------------------------------------\n<a name="compose" />\n### compose(fn1, fn2...)\n\nCreates a function which is a composition of the passed asynchronous\nfunctions. Each function consumes the return value of the function that\nfollows. Composing functions f(), g() and h() would produce the result of\nf(g(h())), only this version uses callbacks to obtain the return values.\n\nEach function is executed with the `this` binding of the composed function.\n\n__Arguments__\n\n* functions... - the asynchronous functions to compose\n\n\n__Example__\n\n```js\nfunction add1(n, callback) {\n    setTimeout(function () {\n        callback(null, n + 1);\n    }, 10);\n}\n\nfunction mul3(n, callback) {\n    setTimeout(function () {\n        callback(null, n * 3);\n    }, 10);\n}\n\nvar add1mul3 = async.compose(mul3, add1);\n\nadd1mul3(4, function (err, result) {\n   // result now equals 15\n});\n```\n\n---------------------------------------\n<a name="applyEach" />\n### applyEach(fns, args..., callback)\n\nApplies the provided arguments to each function in the array, calling the\ncallback after all functions have completed. If you only provide the first\nargument then it will return a function which lets you pass in the\narguments as if it were a single function call.\n\n__Arguments__\n\n* fns - the asynchronous functions to all call with the same arguments\n* args... - any number of separate arguments to pass to the function\n* callback - the final argument should be the callback, called when all\n  functions have completed processing\n\n\n__Example__\n\n```js\nasync.applyEach([enableSearch, updateSchema], \'bucket\', callback);\n\n// partial application example:\nasync.each(\n    buckets,\n    async.applyEach([enableSearch, updateSchema]),\n    callback\n);\n```\n\n---------------------------------------\n\n<a name="applyEachSeries" />\n### applyEachSeries(arr, iterator, callback)\n\nThe same as applyEach only the functions are applied in series.\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task, which must call its callback(err) argument when finished, with an \n  optional error as an argument.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* unshift(task, [callback]) - add a new task to the front of the queue.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a queue object with concurrency 2\n\nvar q = async.queue(function (task, callback) {\n    console.log(\'hello \' + task.name);\n    callback();\n}, 2);\n\n\n// assign a callback\nq.drain = function() {\n    console.log(\'all items have been processed\');\n}\n\n// add some items to the queue\n\nq.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\nq.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the queue (batch-wise)\n\nq.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n    console.log(\'finished processing bar\');\n});\n\n// add some items to the front of the queue\n\nq.unshift({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\n```\n\n---------------------------------------\n\n<a name="cargo" />\n### cargo(worker, [payload])\n\nCreates a cargo object with the specified payload. Tasks added to the\ncargo will be processed altogether (up to the payload limit). If the\nworker is in progress, the task is queued until it is available. Once\nthe worker has completed some tasks, each callback of those tasks is called.\n\n__Arguments__\n\n* worker(tasks, callback) - An asynchronous function for processing an array of\n  queued tasks, which must call its callback(err) argument when finished, with \n  an optional error as an argument.\n* payload - An optional integer for determining how many tasks should be\n  processed per round; if omitted, the default is unlimited.\n\n__Cargo objects__\n\nThe cargo object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* payload - an integer for determining how many tasks should be\n  process per round. This property can be changed after a cargo is created to\n  alter the payload on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n```js\n// create a cargo object with payload 2\n\nvar cargo = async.cargo(function (tasks, callback) {\n    for(var i=0; i<tasks.length; i++){\n      console.log(\'hello \' + tasks[i].name);\n    }\n    callback();\n}, 2);\n\n\n// add some items\n\ncargo.push({name: \'foo\'}, function (err) {\n    console.log(\'finished processing foo\');\n});\ncargo.push({name: \'bar\'}, function (err) {\n    console.log(\'finished processing bar\');\n});\ncargo.push({name: \'baz\'}, function (err) {\n    console.log(\'finished processing baz\');\n});\n```\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\nNote, all functions are called with a results object as a second argument, \nso it is unsafe to pass functions in the tasks object which cannot handle the\nextra argument. For example, this snippet of code:\n\n```js\nasync.auto({\n  readData: async.apply(fs.readFile, \'data.txt\', \'utf-8\');\n}, callback);\n```\n\nwill have the effect of calling readFile with the results object as the last\nargument, which will fail:\n\n```js\nfs.readFile(\'data.txt\', \'utf-8\', cb, {});\n```\n\nInstead, wrap the call to readFile in a function which does not forward the \nresults object:\n\n```js\nasync.auto({\n  readData: function(cb, results){\n    fs.readFile(\'data.txt\', \'utf-8\', cb);\n  }\n}, callback);\n```\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The \n  function receives two arguments: (1) a callback(err, result) which must be \n  called when finished, passing an error (which can be null) and the result of \n  the function\'s execution, and (2) a results object, containing the results of\n  the previously executed functions.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. Results will always be passed\n\tbut if an error occurred, no other tasks will be performed, and the results\n\tobject will only contain partial results.\n  \n\n__Example__\n\n```js\nasync.auto({\n    get_data: function(callback){\n        // async code to get some data\n    },\n    make_folder: function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    },\n    write_file: [\'get_data\', \'make_folder\', function(callback){\n        // once there is some data and the directory exists,\n        // write the data to a file in the directory\n        callback(null, filename);\n    }],\n    email_link: [\'write_file\', function(callback, results){\n        // once the file is written let\'s email a link to it...\n        // results.write_file contains the filename returned by write_file.\n    }]\n});\n```\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n```js\nasync.parallel([\n    function(callback){\n        // async code to get some data\n    },\n    function(callback){\n        // async code to create a directory to store a file in\n        // this is run at the same time as getting the data\n    }\n],\nfunction(err, results){\n    async.series([\n        function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n        },\n        function(callback){\n            // once the file is written let\'s email a link to it...\n        }\n    ]);\n});\n```\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. It\'s also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run.\n\n__Example__\n\n```js\nvar iterator = async.iterator([\n    function(){ sys.p(\'one\'); },\n    function(){ sys.p(\'two\'); },\n    function(){ sys.p(\'three\'); }\n]);\n\nnode> var iterator2 = iterator();\n\'one\'\nnode> var iterator3 = iterator2();\n\'two\'\nnode> iterator3();\n\'three\'\nnode> var nextfn = iterator2.next();\nnode> nextfn();\n\'three\'\n```\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n```js\n// using apply\n\nasync.parallel([\n    async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n    async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n]);\n\n\n// the same process without using apply\n\nasync.parallel([\n    function(callback){\n        fs.writeFile(\'testfile1\', \'test1\', callback);\n    },\n    function(callback){\n        fs.writeFile(\'testfile2\', \'test2\', callback);\n    }\n]);\n```\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n```js\nnode> var fn = async.apply(sys.puts, \'one\');\nnode> fn(\'two\', \'three\');\none\ntwo\nthree\n```\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setImmediate(callback)\nif available, otherwise setTimeout(callback, 0), which means other higher priority\nevents may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n```js\nvar call_order = [];\nasync.nextTick(function(){\n    call_order.push(\'two\');\n    // call_order now equals [\'one\',\'two\']\n});\ncall_order.push(\'one\')\n```\n\n<a name="times" />\n### times(n, callback)\n\nCalls the callback n times and accumulates results in the same manner\nyou would use with async.map.\n\n__Arguments__\n\n* n - The number of times to run the function.\n* callback - The function to call n times.\n\n__Example__\n\n```js\n// Pretend this is some complicated async factory\nvar createUser = function(id, callback) {\n  callback(null, {\n    id: \'user\' + id\n  })\n}\n// generate 5 users\nasync.times(5, function(n, next){\n    createUser(n, function(err, user) {\n      next(err, user)\n    })\n}, function(err, users) {\n  // we should now have 5 users\n});\n```\n\n<a name="timesSeries" />\n### timesSeries(n, callback)\n\nThe same as times only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\nThe cache of results is exposed as the `memo` property of the function returned\nby `memoize`.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n```js\nvar slow_fn = function (name, callback) {\n    // do something\n    callback(null, result);\n};\nvar fn = async.memoize(slow_fn);\n\n// fn can now be used as if it were slow_fn\nfn(\'some name\', function () {\n    // callback\n});\n```\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, \'hello \' + name);\n    }, 1000);\n};\n```\n```js\nnode> async.log(hello, \'world\');\n\'hello world\'\n```\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n```js\nvar hello = function(name, callback){\n    setTimeout(function(){\n        callback(null, {hello: name});\n    }, 1000);\n};\n```\n```js\nnode> async.dir(hello, \'world\');\n{hello: \'world\'}\n```\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
756 silly resolved     readmeFilename: 'README.md',
756 silly resolved     _id: 'async@0.2.7',
756 silly resolved     _from: 'async@0.2.7' },
756 silly resolved   { name: 'amqp',
756 silly resolved     description: 'AMQP driver for node',
756 silly resolved     keywords: [ 'amqp' ],
756 silly resolved     version: '0.1.6',
756 silly resolved     preferGlobal: true,
756 silly resolved     author: { name: 'Ryan Dahl' },
756 silly resolved     contributors:
756 silly resolved      [ [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object],
756 silly resolved        [Object] ],
756 silly resolved     repository: { type: 'git', url: 'git://github.com/postwait/node-amqp.git' },
756 silly resolved     bugs: { url: 'http://github.com/postwait/node-amqp/issues' },
756 silly resolved     main: './amqp',
756 silly resolved     engines: { node: '0.4 || 0.5 || 0.6 || 0.8' },
756 silly resolved     licenses: [ [Object] ],
756 silly resolved     readme: '[![build status](https://secure.travis-ci.org/postwait/node-amqp.png)](http://travis-ci.org/postwait/node-amqp)\n# node-amqp\n\nIMPORTANT: This module only works with node v0.4.0 and later.\n\nThis is a client for RabbitMQ (and maybe other servers?). It partially\nimplements the 0.9.1 version of the AMQP protocol.\n\n## Installation\n\n    npm install amqp\n\n## Synopsis\n\nAn example of connecting to a server and listening on a queue.\n\n```javascript\nvar amqp = require(\'amqp\');\n\nvar connection = amqp.createConnection({ host: \'dev.rabbitmq.com\' });\n\n// Wait for connection to become established.\nconnection.on(\'ready\', function () {\n  // Use the default \'amq.topic\' exchange\n  connection.queue(\'my-queue\', function(q){\n      // Catch all messages\n      q.bind(\'#\');\n    \n      // Receive messages\n      q.subscribe(function (message) {\n        // Print messages to stdout\n        console.log(message);\n      });\n  });\n});\n```\n\n## Connection\n\n`new amqp.Connection()` Instantiates a new connection. Use\n`connection.connect()` to connect to a server.\n\n`amqp.createConnection()` returns an instance of `amqp.Connection`, which is\na subclass of `net.Stream`. All the event and methods which work on\n`net.Stream` can also be used on an `amqp.Connection` instance. (e.g., the\nevents `\'connected\'` and `\'closed\'`.)\n\n### Connection options and URL\n\n`amqp.createConnection([options, [implOptions]])` takes two options\nobjects as parameters.  The first options object has these defaults:\n\n    { host: \'localhost\'\n    , port: 5672\n    , login: \'guest\'\n    , password: \'guest\'\n    , vhost: \'/\'\n    }\n\nAll of these can be passed in a single URL of the form\n\n    amqp[s]://[user:password@]hostname[:port][/vhost]\n\nNote that the vhost must be URL-encoded and appear as the only segment\nof the path, i.e., the only unencoded slash is that leading; leaving\nthe path entirely empty indicates that the vhost `/`, as\nabove, should be used (it could also be supplied as the path `/%2f`).\n\nThis URL is supplied as the field `url` in the options; for example\n\n```javascript\nvar conn =\n  amqp.createConnection({url: "amqp://guest:guest@localhost:5672"});\n\n```\n\n\nOptions provided as individual fields will override values given in\nthe URL.\n\nThe second options are specific to the node AMQP implementation. It has\nthe default values:\n\n    { defaultExchangeName: \'\' }\n\nThe defaultExchangeName is the default exchange to which\nconnection.publish will publish. In the past, the default exchange was\n`amq.topic`, which is not ideal.  To emulate this behaviour, one can\ncreate a connection like:\n\n```javascript\nvar conn =\n  amqp.createConnection({url: "amqp://guest:guest@localhost:5672"},\n                        {defaultExchangeName: "amq.topic"});\n```\n\n\nAfter a connection is established the `\'connect\'` event is fired as it is\nwith any `net.Connection` instance. AMQP requires a 7-way handshake which\nmust be completed before any communication can begin. `net.Connection` does\nthe handshake automatically and emits the `\'ready\'` event when the handshaking\nis complete.\n\nFor backward compatability, two additional options are available. Older\nversions of this library placed the routingKey and deliveryTag for incoming\nmessages into the JSON payload received. This module was changed to\nleave inbound JSON payloads pristine.  Some applications may need the\nold behaviour. If the key \'routingKeyInPayload\' is set to true in the\nconnection options, the messages resulting from a subscribe call will\ninclude a \'routingKey\' key in the JSON payload.  If the key\n\'devliryTagInPayload\' is set to true in the connection options, the\ndeliveryTag of the incoming message will be placed in the JSON payload.\n\n\n### connection.publish(queueName, body)\n\nPublishes a message to the default exchange; if the defaultExchange is\nleft as `\'\'`, this effectively publishes the message to the queue\nnamed.\n\n### connection.end()\n\n`amqp.Connection` is derived from `net.Stream` and has all the same methods.\nSo use `connection.end()` to terminate a connection gracefully.\n\n\n\n\n## Queue\n\nEvents: A queue will call the callback given to the `connection.queue()`\nmethod once it is usable. For example:\n\n```javascript\nvar q = connection.queue(\'my-queue\', function (queue) {\n  console.log(\'Queue \' + queue.name + \' is open\');\n});\n```\n\n\nDeclaring a queue with an empty name will make the server generate a\nrandom name.\n\n### connection.queue(name, options, openCallback)\n\nReturns a reference to a queue. The options are\n\n- `passive`: boolean, default false.\n    If set, the server will not create the queue.  The client can use\n    this to check whether a queue exists without modifying the server\n    state.\n- `durable`: boolean, default false.\n    Durable queues remain active when a server restarts.\n    Non-durable queues (transient queues) are purged if/when a\n    server restarts.  Note that durable queues do not necessarily\n    hold persistent messages, although it does not make sense to\n    send persistent messages to a transient queue.\n- `exclusive`: boolean, default false.\n    Exclusive queues may only be consumed from by the current connection.\n    Setting the \'exclusive\' flag always implies \'autoDelete\'.\n- `autoDelete`: boolean, default true.\n    If set, the queue is deleted when all consumers have finished\n    using it. Last consumer can be cancelled either explicitly or because\n    its channel is closed. If there was no consumer ever on the queue, it\n    won\'t be deleted.\n- `noDeclare`: boolean, default false.\n    If set, the queue will not be declared, this will allow a queue to be\n    deleted if you dont know its previous options.\n- `arguments`: a map of additional arguments to pass in when creating a queue.\n- `closeChannelOnUnsubscribe` : a boolean when true the channel will close on \n    unsubscrube, default false.\n\n### queue.subscribe([options,] listener)\n\nAn easy subscription command. It works like this\n\n```javascript\nq.subscribe(function (message, headers, deliveryInfo) {\n  console.log(\'Got a message with routing key \' + deliveryInfo.routingKey);\n});\n    \n```\n\nIt will automatically acknowledge receipt of each message.\n\nThere are several options available.  Setting the options argument to\n`{ ack: true }` (which defaults to false) will make it so that the AMQP\nserver only delivers a single message at a time. When you want the next\nmessage, call `q.shift()`. When `ack` is false then you will receive\nmessages as fast as they come in. \n\nYou can also use the prefetchCount option to increase the window of how\nmany messages the server will send you before you need to ack (quality of service).\n\'{ ack: true, prefetchCount: 1 }\' is the default and will only send you one\nmessage before you ack. Setting prefetchCount to 0 will make that window unlimited.\n\nThe \'routingKeyInPayload\' and \'deliveryKeyInPayload\' options determine\nif the reception process will inject the routingKey and deliveryKey,\nrespectively, into the JSON payload received.  These default to unset\nthus adopting the parent connection\'s values (which default to false).\nSetting these to true provide backward compability for older\napplications.\n\nThe \'exclusive\' option will subscribe to the queue in exclusive mode. Only one\nsubscriber is allowed at a time, and subsequent attempts to subscribe to the\nsame queue will result in an exception. This option differes from the exclusive\noption passed when creating in a queue in that the queue itself is not exclusive,\nonly the consumers. This means that long lived durable queues can be used\nas exclusive queues.\n\nThis method will emit `\'basicQosOk\'` when ready.\n\n\n### queue.subscribeRaw([options,] listener)\n\nSubscribes to a queue. The `listener` argument should be a function which\nreceives a message. This is a low-level interface - the message that the\nlistener receives will be a stream of binary data. You probably want to use\n`subscribe` instead. For now this low-level interface is left undocumented.\nLook at the source code if you need to do this.\n\nThis method will emit `\'basicConsumeOk\'` when ready.\n\n### queue.unsubscribe(consumerTag)\n\nUnsubscribe from a queue, given the consumer tag. The consumer tag is\nsupplied to the *promise callback* of `Queue.subscribeRaw` or\n`Queue.subscribe`:\n\n```javascript\nconnection.queue(\'foo\', function(queue) {\n  var ctag;\n  queue.subscribe(function(msg) {...})\n    .addCallback(function(ok) { ctag = ok.consumerTag; });\n  // ... and in some other callback\n  queue.unsubscribe(ctag);\n});\n```\n\nNote that `Queue.unsubscribe` will not requeue messages that have not\nbeen acknowledged. You need to close the queue or connection for that\nto happen. You may also receive messages after calling `unsubscribe`;\nyou will **not** receive messages from the queue after the unsubscribe\npromise callback has been invoked, however.\n\n### queue.shift()\n\nFor use with `subscribe({ack: true}, fn)`. Acknowledges the last\nmessage.\n\n\n### queue.bind([exchange,] routing)\n\nThis method binds a queue to an exchange.  Until a queue is\nbound it will not receive any messages, unless they are sent through\nthe unnamed exchange (see `defaultExchangeName` above).\n\nIf the `exchange` argument is left out `\'amq.topic\'` will be used.\n\nThis method will emit `\'queueBindOk\'` when complete.\n\n\n### queue.unbind([exchange,] routing)\n\nThis method unbinds a queue from an exchange.\n\nIf the exchange argument is left out `\'amq.topic\'` will be used.\n\nThs method will emit `\'queueUnbindOk\'` when complete.\n\n\n### queue.bind_headers([exchange,] routing)\n\nThis method binds a queue to an exchange.  Until a queue is\nbound it will not receive any messages.\n\nThis method is to be used on an "headers"-type exchange. The routing\nargument must contain the routing keys and the `x-match` value (`all` or `any`).\n\nIf the `exchange` argument is left out `\'amq.headers\'` will be used.\n\n### queue.destroy(options)\n\nDelete the queue. Without options, the queue will be deleted even if it has\npending messages or attached consumers. If +options.ifUnused+ is true, then\nthe queue will only be deleted if there are no consumers. If\n+options.ifEmpty+ is true, the queue will only be deleted if it has no\nmessages.\n\n\n\n\n## Exchange\n\nEvents: An exchange will call the callback given to the `connection.exchange()`\nmethod once it is usable. For example:\n\n```javascript\nvar exc = connection.exchange(\'my-exchange\', function (exchange) {\n  console.log(\'Exchange \' + exchange.name + \' is open\');\n});\n```\n\n### exchange.on(\'open\', callback)\n\nThe open event is emitted when the exchange is declared and ready to\nbe used. This interface is considered deprecated.\n\n\n### connection.exchange()\n### connection.exchange(name, options={}, openCallback)\n\nAn exchange can be created using `connection.exchange()`. The method returns\nan `amqp.Exchange` object.\n\nWithout any arguments, this method returns the default exchange.\nOtherwise a string, `name`, is given as the first argument and an `options`\nobject for the second. The options are\n\n- `type`: the type of exchange `\'direct\'`, `\'fanout\'`, or `\'topic\'` (default).\n- `passive`: boolean, default false.\n    If set, the server will not create the exchange.  The client can use\n    this to check whether an exchange exists without modifying the server\n    state.\n- `durable`: boolean, default false.\n    If set when creating a new exchange, the exchange will be marked as\n    durable.  Durable exchanges remain active when a server restarts.\n    Non-durable exchanges (transient exchanges) are purged if/when a\n    server restarts.\n- `confirm`: boolean, default false.\n    If set when connecting to a exchange the channel will send acks \n    for publishes. Published tasks will emit \'ack\' when it is acked.\n- `autoDelete`: boolean, default true.\n    If set, the exchange is deleted when there are no longer queues\n    bound to it.\n- `noDeclare`: boolean, default false.\n    If set, the exchange will not be declared, this will allow the exchange\n    to be deleted if you dont know its previous options.\n- `confirm`: boolean, default false.\n    If set, the exchange will be in confirm mode, and you will get a \n    \'ack\'|\'error\' event emitted on a publish, or the callback on the publish\n    will be called.\n\nAn exchange will emit the `\'open\'` event when it is finally declared.\n\n\n### exchange.publish(routingKey, message, options, callback)\n\nPublishes a message to the exchange. The `routingKey` argument is a string\nwhich helps routing in `topic` and `direct` exchanges. The `message` can be\neither a Buffer or Object. A Buffer is used for sending raw bytes; an Object\nis converted to JSON.\n\n`options` is an object with any of the following\n\n- `mandatory`: boolean, default false.\n    This flag tells the server how to react if the message cannot be\n    routed to a queue.  If this flag is set, the server will return an\n    unroutable message with a Return method.  If this flag is false, the\n    server silently drops the message.\n- `immediate`: boolean, default false.\n    This flag tells the server how to react if the message cannot be\n    routed to a queue consumer immediately.  If this flag is set, the\n    server will return an undeliverable message with a Return method.\n    If this flag is false, the server will queue the message, but with\n    no guarantee that it will ever be consumed.\n- `contentType`: default `\'application/octet-stream\'`\n- `contentEncoding`: default null.\n- `headers`: default `{}`. Arbitrary application-specific message headers.\n- `deliveryMode`: Non-persistent (1) or persistent (2)\n- `priority`: The message priority, 0 to 9.\n- `replyTo`: Usually used to name a reply queue for a request message.\n\n`callback` is a function that will get called if the exchange is in confirm mode,\nthe value sent will be true or false, this is the presense of a error so true, means\nan error occured and false, means the publish was successfull\n\n### exchange.destroy(ifUnused = true)\n\nDeletes an exchange.\nIf the optional boolean second argument is set, the server will only\ndelete the exchange if it has no queue bindings. If the exchange has queue\nbindings the server does not delete it but raises a channel exception\ninstead.\n\n### exchange.bind(srcExchange, routingKey [, callback])\n\nBinds the exchange (destination) to the given source exchange (srcExchange). \nWhen one exchange is bound to another, the destination (or receiving) exchange \nwill receive all messages published to the source exchange that match the \ngiven routingKey. \n\nThis method will emit `\'exchangeBindOk\'` when complete.\n\nPlease note that Exchange to Exchange Bindings (E2E) are an extension to the \nAMQP spec introduced by RabbitMQ, and that by using this feature, you will be \nreliant on RabbitMQ\'s AMQP implementation. For more information on E2E \nBindings with RabbitMQ see:\n\nhttp://www.rabbitmq.com/e2e.html\n\n### exchange.unbind(srcExchange, routingKey [, callback])\n\nUnbinds the exchange (destination) from the given source exchange (srcExchange). \nThis is the reverse of the exchange.bind method above, and will stop messages \nfrom srcExchange/routingKey from being sent to the destination exchange. \n\nThis method will emit `\'exchangeUnbindOk\'` when complete.\n',
756 silly resolved     readmeFilename: 'README.md',
756 silly resolved     _id: 'amqp@0.1.6',
756 silly resolved     _from: 'amqp@0.1.6' } ]
757 info install rc@0.1.1 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
758 info install async@0.2.7 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
759 info install amqp@0.1.6 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js
760 info installOne rc@0.1.1
761 info installOne async@0.2.7
762 info installOne amqp@0.1.6
763 warn engine amqp@0.1.6: wanted: {"node":"0.4 || 0.5 || 0.6 || 0.8"} (current: {"node":"v0.10.11","npm":"1.2.30"})
764 silly gunzTarPerm extractEntry test/lang/ne.js
765 silly gunzTarPerm extractEntry test/lang/fi.js
766 silly gunzTarPerm extractEntry tests/test-protocol-changing-redirect.js
767 silly gunzTarPerm extractEntry tests/test-follow-all-303.js
768 silly gunzTarPerm extractEntry test/custom-timestamp-test.js
769 silly gunzTarPerm extractEntry test/exception-test.js
770 verbose from cache /Users/bmackey/.npm/rc/0.1.1/package/package.json
771 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc unbuild
772 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/package.json
773 verbose from cache /Users/bmackey/.npm/async/0.2.7/package/package.json
774 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async unbuild
775 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async/package.json
776 verbose from cache /Users/bmackey/.npm/amqp/0.1.6/package/package.json
777 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/amqp unbuild
778 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/amqp/package.json
779 verbose tar unpack /Users/bmackey/.npm/rc/0.1.1/package.tgz
780 silly lockFile 7a30ad2d-dules-fh-amqp-js-node-modules-rc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
781 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc /Users/bmackey/.npm/7a30ad2d-dules-fh-amqp-js-node-modules-rc.lock
782 silly lockFile 363610a9-bmackey-npm-rc-0-1-1-package-tgz tar:///Users/bmackey/.npm/rc/0.1.1/package.tgz
783 verbose lock tar:///Users/bmackey/.npm/rc/0.1.1/package.tgz /Users/bmackey/.npm/363610a9-bmackey-npm-rc-0-1-1-package-tgz.lock
784 verbose tar unpack /Users/bmackey/.npm/async/0.2.7/package.tgz
785 silly lockFile 3a8a4c7f-es-fh-amqp-js-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async
786 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async /Users/bmackey/.npm/3a8a4c7f-es-fh-amqp-js-node-modules-async.lock
787 silly lockFile 4a504c44-ckey-npm-async-0-2-7-package-tgz tar:///Users/bmackey/.npm/async/0.2.7/package.tgz
788 verbose lock tar:///Users/bmackey/.npm/async/0.2.7/package.tgz /Users/bmackey/.npm/4a504c44-ckey-npm-async-0-2-7-package-tgz.lock
789 verbose tar unpack /Users/bmackey/.npm/amqp/0.1.6/package.tgz
790 silly lockFile 28f248f1-les-fh-amqp-js-node-modules-amqp tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/amqp
791 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/amqp /Users/bmackey/.npm/28f248f1-les-fh-amqp-js-node-modules-amqp.lock
792 silly lockFile 8df91b3b-ackey-npm-amqp-0-1-6-package-tgz tar:///Users/bmackey/.npm/amqp/0.1.6/package.tgz
793 verbose lock tar:///Users/bmackey/.npm/amqp/0.1.6/package.tgz /Users/bmackey/.npm/8df91b3b-ackey-npm-amqp-0-1-6-package-tgz.lock
794 silly gunzTarPerm modes [ '755', '644' ]
795 silly gunzTarPerm modes [ '755', '644' ]
796 silly gunzTarPerm extractEntry lib/async.js
797 silly gunzTarPerm extractEntry nodelint.cfg
798 silly gunzTarPerm extractEntry lib/public/favicon.ico
799 silly gunzTarPerm extractEntry lib/public/icons/page_white_edit.png
800 silly gunzTarPerm extractEntry package.json
801 silly gunzTarPerm extractEntry tests/test-proxy.js
802 silly gunzTarPerm extractEntry tests/test-errors.js
803 silly gunzTarPerm extractEntry package.json
804 silly gunzTarPerm extractEntry test/logger-test.js
805 silly gunzTarPerm extractEntry test/container-test.js
806 silly gunzTarPerm extractEntry deps/nodeunit.js
807 silly gunzTarPerm extractEntry deps/nodeunit.css
808 silly gunzTarPerm extractEntry test/test-async.js
809 silly gunzTarPerm extractEntry test/.swp
810 silly gunzTarPerm extractEntry test/test.html
811 silly gunzTarPerm extractEntry .npmignore
812 silly gunzTarPerm extractEntry README.md
813 silly gunzTarPerm extractEntry README.md
814 silly gunzTarPerm extractEntry LICENSE
815 silly gunzTarPerm extractEntry lib/async.js
816 silly gunzTarPerm extractEntry lib/util.js
817 silly gunzTarPerm extractEntry lib/parser/hiredis.js
818 silly gunzTarPerm extractEntry lib/public/icons/page.png
819 silly gunzTarPerm extractEntry lib/public/icons/page_attach.png
820 silly gunzTarPerm extractEntry browser.js
821 silly gunzTarPerm extractEntry index.js
822 silly gunzTarPerm extractEntry test/log-exception-test.js
823 silly gunzTarPerm extractEntry test/log-rewriter-test.js
824 silly gunzTarPerm extractEntry tests/test-qs.js
825 silly gunzTarPerm extractEntry tests/test-defaults.js
826 silly gunzTarPerm extractEntry test/blort-pass.pem
827 silly gunzTarPerm extractEntry test/blort.pem
828 silly gunzTarPerm extractEntry lib/public/icons/page_code.png
829 silly gunzTarPerm extractEntry lib/public/icons/page_copy.png
830 silly gunzTarPerm extractEntry lib/utils.js
831 silly gunzTarPerm extractEntry test/ini.js
832 silly gunzTarPerm extractEntry tests/test-redirect.js
833 silly gunzTarPerm extractEntry tests/test-cookiejar.js
834 silly gunzTarPerm extractEntry tests/test-body.js
835 silly gunzTarPerm extractEntry tests/test-cookie.js
836 silly gunzTarPerm extractEntry lib/public/icons/page_delete.png
837 silly gunzTarPerm extractEntry lib/public/icons/page_edit.png
838 silly gunzTarPerm extractEntry test/test.js
839 silly gunzTarPerm extractEntry test/lang/nl.js
840 silly gunzTarPerm extractEntry test/lang/eu.js
841 silly gunzTarPerm extractEntry test/blort.pub
842 silly gunzTarPerm extractEntry test/blort.sshpub
843 silly gunzTarPerm extractEntry tests/test-s3.js
844 silly gunzTarPerm extractEntry tests/test-cookie.js
845 silly gunzTarPerm extractEntry test/zorch.pem
846 silly gunzTarPerm extractEntry test/zorch.pub
847 silly gunzTarPerm extractEntry tests/server.js
848 silly gunzTarPerm extractEntry tests/test-proxy.js
849 silly gunzTarPerm extractEntry tests/test-timeout.js
850 silly gunzTarPerm extractEntry tests/test-body.js
851 silly gunzTarPerm extractEntry tests/test-httpModule.js
852 silly gunzTarPerm extractEntry tests/test-https.js
853 silly gunzTarPerm extractEntry lib/public/icons/page_error.png
854 silly gunzTarPerm extractEntry lib/public/icons/page_excel.png
855 silly gunzTarPerm extractEntry test/winston-test.js
856 silly gunzTarPerm extractEntry test/helpers.js
857 silly gunzTarPerm extractEntry tests/test-oauth.js
858 silly gunzTarPerm extractEntry tests/test-pipes.js
859 silly gunzTarPerm extractEntry test/fixtures/.gitkeep
860 silly gunzTarPerm extractEntry test/fixtures/keys/agent2-cert.pem
861 silly gunzTarPerm extractEntry tests/test-toJSON.js
862 silly gunzTarPerm extractEntry tests/server.js
863 silly gunzTarPerm extractEntry lib/public/icons/page_find.png
864 silly gunzTarPerm extractEntry lib/public/icons/page_gear.png
865 silly gunzTarPerm extractEntry test/lang/pl.js
866 silly gunzTarPerm extractEntry test/lang/et.js
867 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async/package.json
868 silly gunzTarPerm extractEntry test/fixtures/keys/agent2-key.pem
869 silly gunzTarPerm extractEntry test/fixtures/logs/.gitkeep
870 silly gunzTarPerm extractEntry tests/test-tunnel.js
871 silly gunzTarPerm extractEntry tests/test-https.js
872 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/package.json
873 silly gunzTarPerm extractEntry tests/test-cookiejar.js
874 silly gunzTarPerm extractEntry tests/test-errors.js
875 silly gunzTarPerm extractEntry test/fixtures/scripts/default-exceptions.js
876 silly gunzTarPerm extractEntry test/fixtures/scripts/exit-on-error.js
877 silly gunzTarPerm extractEntry lib/public/icons/page_go.png
878 silly gunzTarPerm extractEntry lib/public/icons/page_green.png
879 silly gunzTarPerm extractEntry tests/run.sh
880 silly gunzTarPerm extractEntry tests/ssl/test.crt
881 silly gunzTarPerm extractEntry test/fixtures/scripts/log-exceptions.js
882 silly gunzTarPerm extractEntry test/fixtures/scripts/unhandle-exceptions.js
883 silly gunzTarPerm extractEntry lib/public/icons/page_key.png
884 silly gunzTarPerm extractEntry lib/public/icons/page_lightning.png
885 silly gunzTarPerm extractEntry tests/squid.conf
886 silly gunzTarPerm extractEntry tests/ssl/ca/server.js
887 silly gunzTarPerm extractEntry lib/parser/javascript.js
888 silly gunzTarPerm extractEntry examples/auth.js
889 silly lockFile 4899ca41-les-fh-statsc-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async
890 silly lockFile 4899ca41-les-fh-statsc-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async
891 silly gunzTarPerm extractEntry tests/ssl/test.key
892 silly gunzTarPerm extractEntry tests/googledoodle.png
893 silly lockFile 6661fedd-ckey-npm-async-0-2-9-package-tgz tar:///Users/bmackey/.npm/async/0.2.9/package.tgz
894 silly lockFile 6661fedd-ckey-npm-async-0-2-9-package-tgz tar:///Users/bmackey/.npm/async/0.2.9/package.tgz
895 silly gunzTarPerm extractEntry tests/ssl/ca/ca.srl
896 silly gunzTarPerm extractEntry tests/ssl/ca/ca.crt
897 silly gunzTarPerm extractEntry examples/mget.js
898 silly gunzTarPerm extractEntry examples/monitor.js
899 info preinstall async@0.2.9
900 silly gunzTarPerm extractEntry test/transports/console-test.js
901 silly gunzTarPerm extractEntry test/transports/file-maxfiles-test.js
902 silly lockFile 7a30ad2d-dules-fh-amqp-js-node-modules-rc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
903 silly lockFile 7a30ad2d-dules-fh-amqp-js-node-modules-rc tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
904 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async/package.json
905 silly gunzTarPerm extractEntry vendor/cookie/index.js
906 silly gunzTarPerm extractEntry vendor/cookie/jar.js
907 silly lockFile 363610a9-bmackey-npm-rc-0-1-1-package-tgz tar:///Users/bmackey/.npm/rc/0.1.1/package.tgz
908 silly lockFile 363610a9-bmackey-npm-rc-0-1-1-package-tgz tar:///Users/bmackey/.npm/rc/0.1.1/package.tgz
909 verbose readDependencies using package.json deps
910 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async/package.json
911 verbose readDependencies using package.json deps
912 silly resolved []
913 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async
914 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async
915 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules/async/package.json
916 verbose linkStuff [ false,
916 verbose linkStuff   false,
916 verbose linkStuff   false,
916 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/node_modules' ]
917 info linkStuff async@0.2.9
918 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
919 verbose linkBins async@0.2.9
920 verbose linkMans async@0.2.9
921 verbose rebuildBundles async@0.2.9
922 silly gunzTarPerm extractEntry tests/ssl/ca/ca.csr
923 silly gunzTarPerm extractEntry tests/ssl/ca/ca.key
924 info install async@0.2.9
925 info postinstall async@0.2.9
926 silly gunzTarPerm extractEntry examples/multi.js
927 silly gunzTarPerm extractEntry examples/file.js
928 info preinstall rc@0.1.1
929 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
930 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc
931 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-statsc/package.json
932 verbose linkStuff [ false,
932 verbose linkStuff   false,
932 verbose linkStuff   false,
932 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules' ]
933 info linkStuff fh-statsc@0.2.1
934 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
935 verbose linkBins fh-statsc@0.2.1
936 verbose link bins [ { 'fh-statsc': './bin/fh-statsc.js' },
936 verbose link bins   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/.bin',
936 verbose link bins   false ]
937 verbose linkMans fh-statsc@0.2.1
938 verbose rebuildBundles fh-statsc@0.2.1
939 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/package.json
940 verbose rebuildBundles [ 'async' ]
941 silly gunzTarPerm extractEntry test/lang/pt-br.js
942 silly gunzTarPerm extractEntry test/lang/es.js
943 verbose readDependencies using package.json deps
944 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/package.json
945 verbose readDependencies using package.json deps
946 silly gunzTarPerm extractEntry lib/public/icons/page_link.png
947 silly gunzTarPerm extractEntry lib/public/icons/page_paintbrush.png
948 verbose cache add [ 'optimist@~0.3.4', null ]
949 verbose cache add name=undefined spec="optimist@~0.3.4" args=["optimist@~0.3.4",null]
950 verbose parsed url { protocol: null,
950 verbose parsed url   slashes: null,
950 verbose parsed url   auth: null,
950 verbose parsed url   host: null,
950 verbose parsed url   port: null,
950 verbose parsed url   hostname: null,
950 verbose parsed url   hash: null,
950 verbose parsed url   search: null,
950 verbose parsed url   query: null,
950 verbose parsed url   pathname: 'optimist@~0.3.4',
950 verbose parsed url   path: 'optimist@~0.3.4',
950 verbose parsed url   href: 'optimist@~0.3.4' }
951 verbose cache add name="optimist" spec="~0.3.4" args=["optimist","~0.3.4"]
952 verbose parsed url { protocol: null,
952 verbose parsed url   slashes: null,
952 verbose parsed url   auth: null,
952 verbose parsed url   host: null,
952 verbose parsed url   port: null,
952 verbose parsed url   hostname: null,
952 verbose parsed url   hash: null,
952 verbose parsed url   search: null,
952 verbose parsed url   query: null,
952 verbose parsed url   pathname: '~0.3.4',
952 verbose parsed url   path: '~0.3.4',
952 verbose parsed url   href: '~0.3.4' }
953 verbose addNamed [ 'optimist', '~0.3.4' ]
954 verbose addNamed [ null, '>=0.3.4- <0.4.0-' ]
955 silly lockFile 094c60bd-optimist-0-3-4 optimist@~0.3.4
956 verbose lock optimist@~0.3.4 /Users/bmackey/.npm/094c60bd-optimist-0-3-4.lock
957 verbose cache add [ 'deep-extend@~0.2.5', null ]
958 verbose cache add name=undefined spec="deep-extend@~0.2.5" args=["deep-extend@~0.2.5",null]
959 verbose parsed url { protocol: null,
959 verbose parsed url   slashes: null,
959 verbose parsed url   auth: null,
959 verbose parsed url   host: null,
959 verbose parsed url   port: null,
959 verbose parsed url   hostname: null,
959 verbose parsed url   hash: null,
959 verbose parsed url   search: null,
959 verbose parsed url   query: null,
959 verbose parsed url   pathname: 'deep-extend@~0.2.5',
959 verbose parsed url   path: 'deep-extend@~0.2.5',
959 verbose parsed url   href: 'deep-extend@~0.2.5' }
960 verbose cache add name="deep-extend" spec="~0.2.5" args=["deep-extend","~0.2.5"]
961 verbose parsed url { protocol: null,
961 verbose parsed url   slashes: null,
961 verbose parsed url   auth: null,
961 verbose parsed url   host: null,
961 verbose parsed url   port: null,
961 verbose parsed url   hostname: null,
961 verbose parsed url   hash: null,
961 verbose parsed url   search: null,
961 verbose parsed url   query: null,
961 verbose parsed url   pathname: '~0.2.5',
961 verbose parsed url   path: '~0.2.5',
961 verbose parsed url   href: '~0.2.5' }
962 verbose addNamed [ 'deep-extend', '~0.2.5' ]
963 verbose addNamed [ null, '>=0.2.5- <0.3.0-' ]
964 silly lockFile d89fdb6e-deep-extend-0-2-5 deep-extend@~0.2.5
965 verbose lock deep-extend@~0.2.5 /Users/bmackey/.npm/d89fdb6e-deep-extend-0-2-5.lock
966 silly addNameRange { name: 'optimist', range: '>=0.3.4- <0.4.0-', hasData: false }
967 verbose cache add [ 'ini@~1.1.0', null ]
968 verbose cache add name=undefined spec="ini@~1.1.0" args=["ini@~1.1.0",null]
969 verbose parsed url { protocol: null,
969 verbose parsed url   slashes: null,
969 verbose parsed url   auth: null,
969 verbose parsed url   host: null,
969 verbose parsed url   port: null,
969 verbose parsed url   hostname: null,
969 verbose parsed url   hash: null,
969 verbose parsed url   search: null,
969 verbose parsed url   query: null,
969 verbose parsed url   pathname: 'ini@~1.1.0',
969 verbose parsed url   path: 'ini@~1.1.0',
969 verbose parsed url   href: 'ini@~1.1.0' }
970 verbose cache add name="ini" spec="~1.1.0" args=["ini","~1.1.0"]
971 verbose parsed url { protocol: null,
971 verbose parsed url   slashes: null,
971 verbose parsed url   auth: null,
971 verbose parsed url   host: null,
971 verbose parsed url   port: null,
971 verbose parsed url   hostname: null,
971 verbose parsed url   hash: null,
971 verbose parsed url   search: null,
971 verbose parsed url   query: null,
971 verbose parsed url   pathname: '~1.1.0',
971 verbose parsed url   path: '~1.1.0',
971 verbose parsed url   href: '~1.1.0' }
972 verbose addNamed [ 'ini', '~1.1.0' ]
973 verbose addNamed [ null, '>=1.1.0- <1.2.0-' ]
974 silly lockFile d6a0c59d-ini-1-1-0 ini@~1.1.0
975 verbose lock ini@~1.1.0 /Users/bmackey/.npm/d6a0c59d-ini-1-1-0.lock
976 silly addNameRange { name: 'deep-extend',
976 silly addNameRange   range: '>=0.2.5- <0.3.0-',
976 silly addNameRange   hasData: false }
977 silly gunzTarPerm extractEntry tests/ssl/ca/ca.crl
978 silly gunzTarPerm extractEntry tests/ssl/ca/server.cnf
979 info install fh-statsc@0.2.1
980 silly addNameRange { name: 'ini', range: '>=1.1.0- <1.2.0-', hasData: false }
981 info postinstall fh-statsc@0.2.1
982 verbose registry.get optimist not expired, no request
983 silly addNameRange number 2 { name: 'optimist', range: '>=0.3.4- <0.4.0-', hasData: true }
984 silly addNameRange versions [ 'optimist',
984 silly addNameRange   [ '0.0.1',
984 silly addNameRange     '0.0.2',
984 silly addNameRange     '0.0.4',
984 silly addNameRange     '0.0.5',
984 silly addNameRange     '0.0.6',
984 silly addNameRange     '0.0.7',
984 silly addNameRange     '0.1.0',
984 silly addNameRange     '0.1.1',
984 silly addNameRange     '0.1.2',
984 silly addNameRange     '0.1.3',
984 silly addNameRange     '0.1.4',
984 silly addNameRange     '0.1.5',
984 silly addNameRange     '0.1.6',
984 silly addNameRange     '0.1.7',
984 silly addNameRange     '0.1.8',
984 silly addNameRange     '0.1.9',
984 silly addNameRange     '0.0.3',
984 silly addNameRange     '0.2.0',
984 silly addNameRange     '0.2.1',
984 silly addNameRange     '0.2.2',
984 silly addNameRange     '0.2.3',
984 silly addNameRange     '0.2.4',
984 silly addNameRange     '0.2.5',
984 silly addNameRange     '0.2.6',
984 silly addNameRange     '0.2.7',
984 silly addNameRange     '0.2.8',
984 silly addNameRange     '0.3.0',
984 silly addNameRange     '0.3.1',
984 silly addNameRange     '0.3.3',
984 silly addNameRange     '0.3.4',
984 silly addNameRange     '0.3.5',
984 silly addNameRange     '0.3.6',
984 silly addNameRange     '0.3.7',
984 silly addNameRange     '0.4.0',
984 silly addNameRange     '0.5.0',
984 silly addNameRange     '0.5.1',
984 silly addNameRange     '0.5.2',
984 silly addNameRange     '0.6.0',
984 silly addNameRange     '0.6.1' ] ]
985 verbose addNamed [ 'optimist', '0.3.7' ]
986 verbose addNamed [ '0.3.7', '0.3.7' ]
987 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
988 verbose lock optimist@0.3.7 /Users/bmackey/.npm/090e1d8d-optimist-0-3-7.lock
989 verbose registry.get deep-extend not expired, no request
990 silly addNameRange number 2 { name: 'deep-extend', range: '>=0.2.5- <0.3.0-', hasData: true }
991 silly addNameRange versions [ 'deep-extend',
991 silly addNameRange   [ '0.2.0',
991 silly addNameRange     '0.2.1',
991 silly addNameRange     '0.2.2',
991 silly addNameRange     '0.2.4',
991 silly addNameRange     '0.2.5',
991 silly addNameRange     '0.2.6',
991 silly addNameRange     '0.2.7',
991 silly addNameRange     '0.2.8' ] ]
992 verbose addNamed [ 'deep-extend', '0.2.8' ]
993 verbose addNamed [ '0.2.8', '0.2.8' ]
994 silly lockFile 97c8f8bc-deep-extend-0-2-8 deep-extend@0.2.8
995 verbose lock deep-extend@0.2.8 /Users/bmackey/.npm/97c8f8bc-deep-extend-0-2-8.lock
996 verbose registry.get ini not expired, no request
997 silly addNameRange number 2 { name: 'ini', range: '>=1.1.0- <1.2.0-', hasData: true }
998 silly addNameRange versions [ 'ini',
998 silly addNameRange   [ '1.0.0', '1.0.1', '1.0.2', '1.0.3', '1.0.4', '1.0.5', '1.1.0' ] ]
999 verbose addNamed [ 'ini', '1.1.0' ]
1000 verbose addNamed [ '1.1.0', '1.1.0' ]
1001 silly lockFile f80c58e4-ini-1-1-0 ini@1.1.0
1002 verbose lock ini@1.1.0 /Users/bmackey/.npm/f80c58e4-ini-1-1-0.lock
1003 verbose read json /Users/bmackey/.npm/optimist/0.3.7/package/package.json
1004 verbose read json /Users/bmackey/.npm/deep-extend/0.2.8/package/package.json
1005 silly gunzTarPerm extractEntry examples/psubscribe.js
1006 silly gunzTarPerm extractEntry examples/pub_sub.js
1007 verbose read json /Users/bmackey/.npm/ini/1.1.0/package/package.json
1008 silly gunzTarPerm extractEntry tests/ssl/ca/server.crt
1009 silly gunzTarPerm extractEntry tests/ssl/ca/server.csr
1010 silly gunzTarPerm extractEntry lib/public/icons/page_paste.png
1011 silly gunzTarPerm extractEntry lib/public/icons/page_red.png
1012 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
1013 silly lockFile 090e1d8d-optimist-0-3-7 optimist@0.3.7
1014 silly lockFile 97c8f8bc-deep-extend-0-2-8 deep-extend@0.2.8
1015 silly lockFile 97c8f8bc-deep-extend-0-2-8 deep-extend@0.2.8
1016 silly gunzTarPerm extractEntry examples/simple.js
1017 silly gunzTarPerm extractEntry examples/sort.js
1018 silly lockFile f80c58e4-ini-1-1-0 ini@1.1.0
1019 silly lockFile f80c58e4-ini-1-1-0 ini@1.1.0
1020 silly gunzTarPerm extractEntry tests/ssl/ca/ca.cnf
1021 silly gunzTarPerm extractEntry tests/ssl/ca/server.key
1022 silly lockFile 094c60bd-optimist-0-3-4 optimist@~0.3.4
1023 silly lockFile 094c60bd-optimist-0-3-4 optimist@~0.3.4
1024 silly lockFile d89fdb6e-deep-extend-0-2-5 deep-extend@~0.2.5
1025 silly lockFile d89fdb6e-deep-extend-0-2-5 deep-extend@~0.2.5
1026 silly gunzTarPerm extractEntry test/transports/file-maxsize-test.js
1027 silly gunzTarPerm extractEntry test/transports/file-test.js
1028 silly lockFile d6a0c59d-ini-1-1-0 ini@~1.1.0
1029 silly lockFile d6a0c59d-ini-1-1-0 ini@~1.1.0
1030 silly resolved [ { name: 'optimist',
1030 silly resolved     version: '0.3.7',
1030 silly resolved     description: 'Light-weight option parsing with an argv hash. No optstrings attached.',
1030 silly resolved     main: './index.js',
1030 silly resolved     dependencies: { wordwrap: '~0.0.2' },
1030 silly resolved     devDependencies: { hashish: '~0.0.4', tap: '~0.4.0' },
1030 silly resolved     scripts: { test: 'tap ./test/*.js' },
1030 silly resolved     repository:
1030 silly resolved      { type: 'git',
1030 silly resolved        url: 'http://github.com/substack/node-optimist.git' },
1030 silly resolved     keywords:
1030 silly resolved      [ 'argument',
1030 silly resolved        'args',
1030 silly resolved        'option',
1030 silly resolved        'parser',
1030 silly resolved        'parsing',
1030 silly resolved        'cli',
1030 silly resolved        'command' ],
1030 silly resolved     author:
1030 silly resolved      { name: 'James Halliday',
1030 silly resolved        email: 'mail@substack.net',
1030 silly resolved        url: 'http://substack.net' },
1030 silly resolved     license: 'MIT/X11',
1030 silly resolved     engine: { node: '>=0.4' },
1030 silly resolved     readme: 'optimist\n========\n\nOptimist is a node.js library for option parsing for people who hate option\nparsing. More specifically, this module is for people who like all the --bells\nand -whistlz of program usage but think optstrings are a waste of time.\n\nWith optimist, option parsing doesn\'t have to suck (as much).\n\n[![build status](https://secure.travis-ci.org/substack/node-optimist.png)](http://travis-ci.org/substack/node-optimist)\n\nexamples\n========\n\nWith Optimist, the options are just a hash! No optstrings attached.\n-------------------------------------------------------------------\n\nxup.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\n\nif (argv.rif - 5 * argv.xup > 7.138) {\n    console.log(\'Buy more riffiwobbles\');\n}\nelse {\n    console.log(\'Sell the xupptumblers\');\n}\n````\n\n***\n\n    $ ./xup.js --rif=55 --xup=9.52\n    Buy more riffiwobbles\n    \n    $ ./xup.js --rif 12 --xup 8.1\n    Sell the xupptumblers\n\n![This one\'s optimistic.](http://substack.net/images/optimistic.png)\n\nBut wait! There\'s more! You can do short options:\n-------------------------------------------------\n \nshort.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\n````\n\n***\n\n    $ ./short.js -x 10 -y 21\n    (10,21)\n\nAnd booleans, both long and short (and grouped):\n----------------------------------\n\nbool.js:\n\n````javascript\n#!/usr/bin/env node\nvar util = require(\'util\');\nvar argv = require(\'optimist\').argv;\n\nif (argv.s) {\n    util.print(argv.fr ? \'Le chat dit: \' : \'The cat says: \');\n}\nconsole.log(\n    (argv.fr ? \'miaou\' : \'meow\') + (argv.p ? \'.\' : \'\')\n);\n````\n\n***\n\n    $ ./bool.js -s\n    The cat says: meow\n    \n    $ ./bool.js -sp\n    The cat says: meow.\n\n    $ ./bool.js -sp --fr\n    Le chat dit: miaou.\n\nAnd non-hypenated options too! Just use `argv._`!\n-------------------------------------------------\n \nnonopt.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\').argv;\nconsole.log(\'(%d,%d)\', argv.x, argv.y);\nconsole.log(argv._);\n````\n\n***\n\n    $ ./nonopt.js -x 6.82 -y 3.35 moo\n    (6.82,3.35)\n    [ \'moo\' ]\n    \n    $ ./nonopt.js foo -x 0.54 bar -y 1.12 baz\n    (0.54,1.12)\n    [ \'foo\', \'bar\', \'baz\' ]\n\nPlus, Optimist comes with .usage() and .demand()!\n-------------------------------------------------\n\ndivide.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Usage: $0 -x [num] -y [num]\')\n    .demand([\'x\',\'y\'])\n    .argv;\n\nconsole.log(argv.x / argv.y);\n````\n\n***\n \n    $ ./divide.js -x 55 -y 11\n    5\n    \n    $ node ./divide.js -x 4.91 -z 2.51\n    Usage: node ./divide.js -x [num] -y [num]\n\n    Options:\n      -x  [required]\n      -y  [required]\n\n    Missing required arguments: y\n\nEVEN MORE HOLY COW\n------------------\n\ndefault_singles.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default(\'x\', 10)\n    .default(\'y\', 10)\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_singles.js -x 5\n    15\n\ndefault_hash.js:\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .default({ x : 10, y : 10 })\n    .argv\n;\nconsole.log(argv.x + argv.y);\n````\n\n***\n\n    $ ./default_hash.js -y 7\n    17\n\nAnd if you really want to get all descriptive about it...\n---------------------------------------------------------\n\nboolean_single.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean(\'v\')\n    .argv\n;\nconsole.dir(argv);\n````\n\n***\n\n    $ ./boolean_single.js -v foo bar baz\n    true\n    [ \'bar\', \'baz\', \'foo\' ]\n\nboolean_double.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .boolean([\'x\',\'y\',\'z\'])\n    .argv\n;\nconsole.dir([ argv.x, argv.y, argv.z ]);\nconsole.dir(argv._);\n````\n\n***\n\n    $ ./boolean_double.js -x -z one two three\n    [ true, false, true ]\n    [ \'one\', \'two\', \'three\' ]\n\nOptimist is here to help...\n---------------------------\n\nYou can describe parameters for help messages and set aliases. Optimist figures\nout how to format a handy help string automatically.\n\nline_count.js\n\n````javascript\n#!/usr/bin/env node\nvar argv = require(\'optimist\')\n    .usage(\'Count the lines in a file.\\nUsage: $0\')\n    .demand(\'f\')\n    .alias(\'f\', \'file\')\n    .describe(\'f\', \'Load a file\')\n    .argv\n;\n\nvar fs = require(\'fs\');\nvar s = fs.createReadStream(argv.file);\n\nvar lines = 0;\ns.on(\'data\', function (buf) {\n    lines += buf.toString().match(/\\n/g).length;\n});\n\ns.on(\'end\', function () {\n    console.log(lines);\n});\n````\n\n***\n\n    $ node line_count.js\n    Count the lines in a file.\n    Usage: node ./line_count.js\n\n    Options:\n      -f, --file  Load a file  [required]\n\n    Missing required arguments: f\n\n    $ node line_count.js --file line_count.js \n    20\n    \n    $ node line_count.js -f line_count.js \n    20\n\nmethods\n=======\n\nBy itself,\n\n````javascript\nrequire(\'optimist\').argv\n`````\n\nwill use `process.argv` array to construct the `argv` object.\n\nYou can pass in the `process.argv` yourself:\n\n````javascript\nrequire(\'optimist\')([ \'-x\', \'1\', \'-y\', \'2\' ]).argv\n````\n\nor use .parse() to do the same thing:\n\n````javascript\nrequire(\'optimist\').parse([ \'-x\', \'1\', \'-y\', \'2\' ])\n````\n\nThe rest of these methods below come in just before the terminating `.argv`.\n\n.alias(key, alias)\n------------------\n\nSet key names as equivalent such that updates to a key will propagate to aliases\nand vice-versa.\n\nOptionally `.alias()` can take an object that maps keys to aliases.\n\n.default(key, value)\n--------------------\n\nSet `argv[key]` to `value` if no option was specified on `process.argv`.\n\nOptionally `.default()` can take an object that maps keys to default values.\n\n.demand(key)\n------------\n\nIf `key` is a string, show the usage information and exit if `key` wasn\'t\nspecified in `process.argv`.\n\nIf `key` is a number, demand at least as many non-option arguments, which show\nup in `argv._`.\n\nIf `key` is an Array, demand each element.\n\n.describe(key, desc)\n--------------------\n\nDescribe a `key` for the generated usage information.\n\nOptionally `.describe()` can take an object that maps keys to descriptions.\n\n.options(key, opt)\n------------------\n\nInstead of chaining together `.alias().demand().default()`, you can specify\nkeys in `opt` for each of the chainable methods.\n\nFor example:\n\n````javascript\nvar argv = require(\'optimist\')\n    .options(\'f\', {\n        alias : \'file\',\n        default : \'/etc/passwd\',\n    })\n    .argv\n;\n````\n\nis the same as\n\n````javascript\nvar argv = require(\'optimist\')\n    .alias(\'f\', \'file\')\n    .default(\'f\', \'/etc/passwd\')\n    .argv\n;\n````\n\nOptionally `.options()` can take an object that maps keys to `opt` parameters.\n\n.usage(message)\n---------------\n\nSet a usage message to show which commands to use. Inside `message`, the string\n`$0` will get interpolated to the current script name or node command for the\npresent script similar to how `$0` works in bash or perl.\n\n.check(fn)\n----------\n\nCheck that certain conditions are met in the provided arguments.\n\nIf `fn` throws or returns `false`, show the thrown error, usage information, and\nexit.\n\n.boolean(key)\n-------------\n\nInterpret `key` as a boolean. If a non-flag option follows `key` in\n`process.argv`, that string won\'t get set as the value of `key`.\n\nIf `key` never shows up as a flag in `process.arguments`, `argv[key]` will be\n`false`.\n\nIf `key` is an Array, interpret all the elements as booleans.\n\n.string(key)\n------------\n\nTell the parser logic not to interpret `key` as a number or boolean.\nThis can be useful if you need to preserve leading zeros in an input.\n\nIf `key` is an Array, interpret all the elements as strings.\n\n.wrap(columns)\n--------------\n\nFormat usage output to wrap at `columns` many columns.\n\n.help()\n-------\n\nReturn the generated usage string.\n\n.showHelp(fn=console.error)\n---------------------------\n\nPrint the usage data using `fn` for printing.\n\n.parse(args)\n------------\n\nParse `args` instead of `process.argv`. Returns the `argv` object.\n\n.argv\n-----\n\nGet the arguments as a plain old object.\n\nArguments without a corresponding flag show up in the `argv._` array.\n\nThe script name or node command is available at `argv.$0` similarly to how `$0`\nworks in bash or perl.\n\nparsing tricks\n==============\n\nstop parsing\n------------\n\nUse `--` to stop parsing flags and stuff the remainder into `argv._`.\n\n    $ node examples/reflect.js -a 1 -b 2 -- -c 3 -d 4\n    { _: [ \'-c\', \'3\', \'-d\', \'4\' ],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: 1,\n      b: 2 }\n\nnegate fields\n-------------\n\nIf you want to explicity set a field to false instead of just leaving it\nundefined or to override a default you can do `--no-key`.\n\n    $ node examples/reflect.js -a --no-b\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n      a: true,\n      b: false }\n\nnumbers\n-------\n\nEvery argument that looks like a number (`!isNaN(Number(arg))`) is converted to\none. This way you can just `net.createConnection(argv.port)` and you can add\nnumbers out of `argv` with `+` without having that mean concatenation,\nwhich is super frustrating.\n\nduplicates\n----------\n\nIf you specify a flag multiple times it will get turned into an array containing\nall the values in order.\n\n    $ node examples/reflect.js -x 5 -x 8 -x 0\n    { _: [],\n      \'$0\': \'node ./examples/reflect.js\',\n        x: [ 5, 8, 0 ] }\n\ndot notation\n------------\n\nWhen you use dots (`.`s) in argument names, an implicit object path is assumed.\nThis lets you organize arguments into nested objects.\n\n     $ node examples/reflect.js --foo.bar.baz=33 --foo.quux=5\n     { _: [],\n       \'$0\': \'node ./examples/reflect.js\',\n         foo: { bar: { baz: 33 }, quux: 5 } }\n\ninstallation\n============\n\nWith [npm](http://github.com/isaacs/npm), just do:\n    npm install optimist\n \nor clone this project on github:\n\n    git clone http://github.com/substack/node-optimist.git\n\nTo run the tests with [expresso](http://github.com/visionmedia/expresso),\njust do:\n    \n    expresso\n\ninspired By\n===========\n\nThis module is loosely inspired by Perl\'s\n[Getopt::Casual](http://search.cpan.org/~photo/Getopt-Casual-0.13.1/Casual.pm).\n',
1030 silly resolved     readmeFilename: 'readme.markdown',
1030 silly resolved     bugs: { url: 'https://github.com/substack/node-optimist/issues' },
1030 silly resolved     _id: 'optimist@0.3.7',
1030 silly resolved     _from: 'optimist@~0.3.4' },
1030 silly resolved   { name: 'deep-extend',
1030 silly resolved     description: 'Recursive object extending.',
1030 silly resolved     license: 'MIT',
1030 silly resolved     version: '0.2.8',
1030 silly resolved     homepage: 'https://github.com/unclechu/node-deep-extend',
1030 silly resolved     repository:
1030 silly resolved      { type: 'git',
1030 silly resolved        url: 'git://github.com/unclechu/node-deep-extend.git' },
1030 silly resolved     author:
1030 silly resolved      { name: 'Viacheslav Lotsmanov',
1030 silly resolved        email: 'lotsmanov89@gmail.com',
1030 silly resolved        url: 'unclechu' },
1030 silly resolved     main: 'index',
1030 silly resolved     engines: { node: '>=0.4' },
1030 silly resolved     readme: 'Node.JS module “Deep Extend”\r\n============================\r\n\r\nRecursive object extending.\r\n\r\nInstall\r\n-----\r\n\r\n    npm install deep-extend\r\n\r\nUsage\r\n-----\r\n\r\n    var deepExtend = require(\'deep-extend\');\r\n    var obj1 = {\r\n        a: 1,\r\n        b: 2,\r\n        d: {\r\n            a: 1,\r\n            b: [],\r\n            c: { test1: 123, test2: 321 }\r\n        },\r\n        f: 5,\r\n        g: 123\r\n    };\r\n    var obj2 = {\r\n        b: 3,\r\n        c: 5,\r\n        d: {\r\n            b: { first: \'one\', second: \'two\' },\r\n            c: { test2: 222 }\r\n        },\r\n        e: { one: 1, two: 2 },\r\n        f: [],\r\n        g: (void 0)\r\n    };\r\n\r\n    deepExtend(obj1, obj2);\r\n\r\n    console.log(obj1);\r\n    /*\r\n        { a: 1,\r\n          b: 3,\r\n          d:\r\n           { a: 1,\r\n             b: { first: \'one\', second: \'two\' },\r\n             c: { test1: 123, test2: 222 } },\r\n          f: [],\r\n          c: 5,\r\n          e: { one: 1, two: 2 },\r\n          g: undefined }\r\n    */\r\n',
1030 silly resolved     readmeFilename: 'README.md',
1030 silly resolved     bugs: { url: 'https://github.com/unclechu/node-deep-extend/issues' },
1030 silly resolved     _id: 'deep-extend@0.2.8',
1030 silly resolved     _from: 'deep-extend@~0.2.5' },
1030 silly resolved   { author:
1030 silly resolved      { name: 'Isaac Z. Schlueter',
1030 silly resolved        email: 'i@izs.me',
1030 silly resolved        url: 'http://blog.izs.me/' },
1030 silly resolved     name: 'ini',
1030 silly resolved     description: 'An ini encoder/decoder for node',
1030 silly resolved     version: '1.1.0',
1030 silly resolved     repository: { type: 'git', url: 'git://github.com/isaacs/ini.git' },
1030 silly resolved     main: 'ini.js',
1030 silly resolved     scripts: { test: 'tap test/*.js' },
1030 silly resolved     engines: { node: '*' },
1030 silly resolved     dependencies: {},
1030 silly resolved     devDependencies: { tap: '~0.0.9' },
1030 silly resolved     readme: 'An ini format parser and serializer for node.\n\nSections are treated as nested objects.  Items before the first heading\nare saved on the object directly.\n\n## Usage\n\nConsider an ini-file `config.ini` that looks like this:\n\n    ; this comment is being ignored\n    scope = global\n\n    [database]\n    user = dbuser\n    password = dbpassword\n    database = use_this_database\n\n    [paths.default]\n    datadir = /var/lib/data\n    array[] = first value\n    array[] = second value\n    array[] = third value\n\nYou can read, manipulate and write the ini-file like so:\n\n    var fs = require(\'fs\')\n      , ini = require(\'ini\')\n\n    var config = ini.parse(fs.readFileSync(\'./config.ini\', \'utf-8\'))\n\n    config.scope = \'local\'\n    config.database.database = \'use_another_database\'\n    config.paths.default.tmpdir = \'/tmp\'\n    delete config.paths.default.datadir\n    config.paths.default.array.push(\'fourth value\')\n\n    fs.writeFileSync(\'./config_modified.ini\', ini.stringify(config, \'section\'))\n\nThis will result in a file called `config_modified.ini` being written to the filesystem with the following content:\n\n    [section]\n    scope = local\n    [section.database]\n    user = dbuser\n    password = dbpassword\n    database = use_another_database\n    [section.paths.default]\n    tmpdir = /tmp\n    array[] = first value\n    array[] = second value\n    array[] = third value\n    array[] = fourth value\n\n\n## API\n\n### decode(inistring)\nDecode the ini-style formatted `inistring` into a nested object.\n\n### parse(inistring)\nAlias for `decode(inistring)`\n\n### encode(object, [section])\nEncode the object `object` into an ini-style formatted string. If the optional parameter `section` is given, then all top-level properties of the object are put into this section and the `section`-string is prepended to all sub-sections, see the usage example above.\n\n### stringify(object, [section])\nAlias for `encode(object, [section])`\n\n### safe(val)\nEscapes the string `val` such that it is safe to be used as a key or value in an ini-file. Basically escapes quotes. For example\n\n    ini.safe(\'"unsafe string"\')\n\nwould result in\n\n    "\\"unsafe string\\""\n\n### unsafe(val)\nUnescapes the string `val`\n',
1030 silly resolved     readmeFilename: 'README.md',
1030 silly resolved     bugs: { url: 'https://github.com/isaacs/ini/issues' },
1030 silly resolved     _id: 'ini@1.1.0',
1030 silly resolved     _from: 'ini@~1.1.0' } ]
1031 info install optimist@0.3.7 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
1032 info install deep-extend@0.2.8 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
1033 info install ini@1.1.0 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
1034 info installOne optimist@0.3.7
1035 info installOne deep-extend@0.2.8
1036 info installOne ini@1.1.0
1037 verbose from cache /Users/bmackey/.npm/optimist/0.3.7/package/package.json
1038 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist unbuild
1039 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/package.json
1040 verbose from cache /Users/bmackey/.npm/deep-extend/0.2.8/package/package.json
1041 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend unbuild
1042 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend/package.json
1043 verbose from cache /Users/bmackey/.npm/ini/1.1.0/package/package.json
1044 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini unbuild
1045 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini/package.json
1046 silly gunzTarPerm extractEntry examples/subqueries.js
1047 silly gunzTarPerm extractEntry examples/extend.js
1048 verbose tar unpack /Users/bmackey/.npm/optimist/0.3.7/package.tgz
1049 silly lockFile fbffa7c5-modules-rc-node-modules-optimist tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist
1050 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist /Users/bmackey/.npm/fbffa7c5-modules-rc-node-modules-optimist.lock
1051 silly lockFile ec03181e-y-npm-optimist-0-3-7-package-tgz tar:///Users/bmackey/.npm/optimist/0.3.7/package.tgz
1052 verbose lock tar:///Users/bmackey/.npm/optimist/0.3.7/package.tgz /Users/bmackey/.npm/ec03181e-y-npm-optimist-0-3-7-package-tgz.lock
1053 verbose tar unpack /Users/bmackey/.npm/deep-extend/0.2.8/package.tgz
1054 silly lockFile 00fc26b3-ules-rc-node-modules-deep-extend tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend
1055 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend /Users/bmackey/.npm/00fc26b3-ules-rc-node-modules-deep-extend.lock
1056 silly lockFile eaa36f7f-pm-deep-extend-0-2-8-package-tgz tar:///Users/bmackey/.npm/deep-extend/0.2.8/package.tgz
1057 verbose lock tar:///Users/bmackey/.npm/deep-extend/0.2.8/package.tgz /Users/bmackey/.npm/eaa36f7f-pm-deep-extend-0-2-8-package-tgz.lock
1058 verbose tar unpack /Users/bmackey/.npm/ini/1.1.0/package.tgz
1059 silly lockFile d0d371ae-node-modules-rc-node-modules-ini tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini
1060 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini /Users/bmackey/.npm/d0d371ae-node-modules-rc-node-modules-ini.lock
1061 silly lockFile 48696dc1-mackey-npm-ini-1-1-0-package-tgz tar:///Users/bmackey/.npm/ini/1.1.0/package.tgz
1062 verbose lock tar:///Users/bmackey/.npm/ini/1.1.0/package.tgz /Users/bmackey/.npm/48696dc1-mackey-npm-ini-1-1-0-package-tgz.lock
1063 silly gunzTarPerm extractEntry tests/ssl/npm-ca.crt
1064 silly gunzTarPerm extractEntry tests/ssl/test.crt
1065 silly gunzTarPerm modes [ '755', '644' ]
1066 silly gunzTarPerm modes [ '755', '644' ]
1067 silly gunzTarPerm modes [ '755', '644' ]
1068 silly gunzTarPerm extractEntry examples/subquery.js
1069 silly gunzTarPerm extractEntry examples/eval.js
1070 silly gunzTarPerm extractEntry lib/public/icons/page_refresh.png
1071 silly gunzTarPerm extractEntry lib/public/icons/page_save.png
1072 silly gunzTarPerm extractEntry package.json
1073 silly gunzTarPerm extractEntry test/lang/pt.js
1074 silly gunzTarPerm extractEntry package.json
1075 silly gunzTarPerm extractEntry package.json
1076 silly gunzTarPerm extractEntry test/transports/transport.js
1077 silly gunzTarPerm extractEntry test/transports/webhook-test.js
1078 silly gunzTarPerm extractEntry tests/ssl/test.key
1079 silly gunzTarPerm extractEntry tests/googledoodle.png
1080 silly gunzTarPerm extractEntry LICENSE
1081 silly gunzTarPerm extractEntry index.js
1082 silly gunzTarPerm extractEntry README.md
1083 silly gunzTarPerm extractEntry LICENSE
1084 silly gunzTarPerm extractEntry README.md
1085 silly gunzTarPerm extractEntry LICENSE
1086 silly gunzTarPerm extractEntry examples/unix_socket.js
1087 silly gunzTarPerm extractEntry examples/backpressure_drain.js
1088 silly gunzTarPerm extractEntry index.js
1089 silly gunzTarPerm extractEntry .travis.yml
1090 silly gunzTarPerm extractEntry ini.js
1091 silly gunzTarPerm extractEntry test/bar.js
1092 silly gunzTarPerm extractEntry tests/unicycle.jpg
1093 silly gunzTarPerm extractEntry vendor/cookie/index.js
1094 silly gunzTarPerm extractEntry lib/public/icons/page_white.png
1095 silly gunzTarPerm extractEntry lib/public/icons/page_white_acrobat.png
1096 silly gunzTarPerm extractEntry example/bool.js
1097 silly gunzTarPerm extractEntry example/default_singles.js
1098 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async/package.json
1099 silly gunzTarPerm extractEntry test/foo.js
1100 silly gunzTarPerm extractEntry test/fixtures/foo.ini
1101 silly gunzTarPerm extractEntry lib/public/icons/page_white_actionscript.png
1102 silly gunzTarPerm extractEntry lib/public/icons/page_white_add.png
1103 silly gunzTarPerm extractEntry examples/web_server.js
1104 silly gunzTarPerm extractEntry examples/multi2.js
1105 silly lockFile 3a8a4c7f-es-fh-amqp-js-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async
1106 silly lockFile 3a8a4c7f-es-fh-amqp-js-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async
1107 silly lockFile 4a504c44-ckey-npm-async-0-2-7-package-tgz tar:///Users/bmackey/.npm/async/0.2.7/package.tgz
1108 silly lockFile 4a504c44-ckey-npm-async-0-2-7-package-tgz tar:///Users/bmackey/.npm/async/0.2.7/package.tgz
1109 silly gunzTarPerm extractEntry vendor/cookie/jar.js
1110 silly gunzTarPerm extractEntry node_modules/form-data/package.json
1111 silly gunzTarPerm extractEntry lib/public/icons/page_white_c.png
1112 silly gunzTarPerm extractEntry lib/public/icons/page_white_camera.png
1113 info preinstall async@0.2.7
1114 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend/package.json
1115 silly gunzTarPerm extractEntry test/lang/eo.js
1116 silly gunzTarPerm extractEntry test/lang/ro.js
1117 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async/package.json
1118 silly gunzTarPerm extractEntry changelog.md
1119 silly gunzTarPerm extractEntry benches/buffer_bench.js
1120 verbose readDependencies using package.json deps
1121 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async/package.json
1122 verbose readDependencies using package.json deps
1123 silly resolved []
1124 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async
1125 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async
1126 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/async/package.json
1127 verbose linkStuff [ false,
1127 verbose linkStuff   false,
1127 verbose linkStuff   false,
1127 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules' ]
1128 info linkStuff async@0.2.7
1129 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1130 verbose linkBins async@0.2.7
1131 verbose linkMans async@0.2.7
1132 verbose rebuildBundles async@0.2.7
1133 info install async@0.2.7
1134 info postinstall async@0.2.7
1135 silly gunzTarPerm extractEntry node_modules/form-data/.npmignore
1136 silly gunzTarPerm extractEntry node_modules/form-data/Makefile
1137 silly gunzTarPerm extractEntry benches/hiredis_parser.js
1138 silly gunzTarPerm extractEntry benches/re_sub_test.js
1139 silly gunzTarPerm extractEntry lib/public/icons/page_white_cd.png
1140 silly gunzTarPerm extractEntry lib/public/icons/page_white_code.png
1141 silly gunzTarPerm extractEntry example/divide.js
1142 silly gunzTarPerm extractEntry example/line_count.js
1143 silly gunzTarPerm extractEntry benches/reconnect_test.js
1144 silly gunzTarPerm extractEntry benches/sub_quit_test.js
1145 silly gunzTarPerm extractEntry node_modules/form-data/Readme.md
1146 silly gunzTarPerm extractEntry node_modules/form-data/lib/form_data.js
1147 silly gunzTarPerm extractEntry lib/public/icons/page_white_code_red.png
1148 silly gunzTarPerm extractEntry lib/public/icons/page_white_coldfusion.png
1149 silly gunzTarPerm extractEntry node_modules/form-data/node-form-data.sublime-project
1150 silly gunzTarPerm extractEntry node_modules/form-data/node-form-data.sublime-workspace
1151 silly gunzTarPerm extractEntry benches/stress/codec.js
1152 silly gunzTarPerm extractEntry benches/stress/pubsub/pub.js
1153 silly lockFile 00fc26b3-ules-rc-node-modules-deep-extend tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend
1154 silly lockFile 00fc26b3-ules-rc-node-modules-deep-extend tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend
1155 silly lockFile eaa36f7f-pm-deep-extend-0-2-8-package-tgz tar:///Users/bmackey/.npm/deep-extend/0.2.8/package.tgz
1156 silly lockFile eaa36f7f-pm-deep-extend-0-2-8-package-tgz tar:///Users/bmackey/.npm/deep-extend/0.2.8/package.tgz
1157 silly gunzTarPerm extractEntry example/default_hash.js
1158 silly gunzTarPerm extractEntry example/line_count_wrap.js
1159 silly gunzTarPerm extractEntry benches/stress/pubsub/server.js
1160 silly gunzTarPerm extractEntry benches/stress/pubsub/run
1161 info preinstall deep-extend@0.2.8
1162 silly gunzTarPerm extractEntry node_modules/form-data/test/common.js
1163 silly gunzTarPerm extractEntry node_modules/form-data/test/run.js
1164 silly gunzTarPerm extractEntry test/lang/en.js
1165 silly gunzTarPerm extractEntry test/lang/ru.js
1166 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend/package.json
1167 silly gunzTarPerm extractEntry lib/public/icons/page_white_compressed.png
1168 silly gunzTarPerm extractEntry lib/public/icons/page_white_copy.png
1169 verbose readDependencies using package.json deps
1170 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend/package.json
1171 verbose readDependencies using package.json deps
1172 silly resolved []
1173 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend
1174 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend
1175 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/deep-extend/package.json
1176 verbose linkStuff [ false,
1176 verbose linkStuff   false,
1176 verbose linkStuff   false,
1176 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules' ]
1177 info linkStuff deep-extend@0.2.8
1178 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1179 verbose linkBins deep-extend@0.2.8
1180 verbose linkMans deep-extend@0.2.8
1181 verbose rebuildBundles deep-extend@0.2.8
1182 info install deep-extend@0.2.8
1183 silly gunzTarPerm extractEntry example/nonopt.js
1184 silly gunzTarPerm extractEntry example/reflect.js
1185 info postinstall deep-extend@0.2.8
1186 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini/package.json
1187 silly gunzTarPerm extractEntry lib/public/icons/page_white_cplusplus.png
1188 silly gunzTarPerm extractEntry lib/public/icons/page_white_csharp.png
1189 silly gunzTarPerm extractEntry benches/stress/rpushblpop/pub.js
1190 silly gunzTarPerm extractEntry benches/stress/rpushblpop/server.js
1191 silly lockFile d0d371ae-node-modules-rc-node-modules-ini tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini
1192 silly lockFile d0d371ae-node-modules-rc-node-modules-ini tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini
1193 silly lockFile 48696dc1-mackey-npm-ini-1-1-0-package-tgz tar:///Users/bmackey/.npm/ini/1.1.0/package.tgz
1194 silly lockFile 48696dc1-mackey-npm-ini-1-1-0-package-tgz tar:///Users/bmackey/.npm/ini/1.1.0/package.tgz
1195 silly gunzTarPerm extractEntry node_modules/form-data/test/fixture/bacon.txt
1196 silly gunzTarPerm extractEntry node_modules/form-data/test/fixture/unicycle.jpg
1197 silly gunzTarPerm extractEntry example/short.js
1198 silly gunzTarPerm extractEntry example/string.js
1199 silly gunzTarPerm extractEntry lib/public/icons/page_white_cup.png
1200 silly gunzTarPerm extractEntry lib/public/icons/page_white_database.png
1201 silly gunzTarPerm extractEntry node_modules/form-data/test/integration/test-form-get-length.js
1202 silly gunzTarPerm extractEntry node_modules/form-data/test/integration/test-get-boundary.js
1203 silly gunzTarPerm extractEntry benches/stress/rpushblpop/run
1204 silly gunzTarPerm extractEntry benches/stress/speed/speed.js
1205 info preinstall ini@1.1.0
1206 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini/package.json
1207 verbose readDependencies using package.json deps
1208 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini/package.json
1209 verbose readDependencies using package.json deps
1210 silly resolved []
1211 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini
1212 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini
1213 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/ini/package.json
1214 verbose linkStuff [ false,
1214 verbose linkStuff   false,
1214 verbose linkStuff   false,
1214 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules' ]
1215 info linkStuff ini@1.1.0
1216 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1217 verbose linkBins ini@1.1.0
1218 verbose linkMans ini@1.1.0
1219 verbose rebuildBundles ini@1.1.0
1220 info install ini@1.1.0
1221 silly gunzTarPerm extractEntry test/lang/en-gb.js
1222 silly gunzTarPerm extractEntry test/lang/sl.js
1223 silly gunzTarPerm extractEntry example/boolean_single.js
1224 silly gunzTarPerm extractEntry example/usage-options.js
1225 silly gunzTarPerm extractEntry lib/public/icons/page_white_delete.png
1226 silly gunzTarPerm extractEntry lib/public/icons/page_white_dvd.png
1227 info postinstall ini@1.1.0
1228 silly gunzTarPerm extractEntry node_modules/form-data/test/integration/test-http-response.js
1229 silly gunzTarPerm extractEntry node_modules/form-data/test/integration/test-pipe.js
1230 silly gunzTarPerm extractEntry benches/stress/speed/00
1231 silly gunzTarPerm extractEntry benches/stress/speed/plot
1232 silly gunzTarPerm extractEntry lib/public/icons/page_add.png
1233 silly gunzTarPerm extractEntry lib/public/icons/page_white_error.png
1234 silly gunzTarPerm extractEntry benches/stress/speed/size-rate.png
1235 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa/package.json
1236 silly gunzTarPerm extractEntry example/boolean_double.js
1237 silly gunzTarPerm extractEntry example/xup.js
1238 silly lockFile 57d070d2-es-fh-security-node-modules-ursa tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa
1239 silly lockFile 57d070d2-es-fh-security-node-modules-ursa tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa
1240 silly gunzTarPerm extractEntry lib/public/icons/page_white_excel.png
1241 silly gunzTarPerm extractEntry lib/public/icons/page_white_find.png
1242 silly lockFile 2e1679f8-ackey-npm-ursa-0-8-0-package-tgz tar:///Users/bmackey/.npm/ursa/0.8.0/package.tgz
1243 silly lockFile 2e1679f8-ackey-npm-ursa-0-8-0-package-tgz tar:///Users/bmackey/.npm/ursa/0.8.0/package.tgz
1244 info preinstall ursa@0.8.0
1245 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa/package.json
1246 verbose readDependencies using package.json deps
1247 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa/package.json
1248 verbose readDependencies using package.json deps
1249 silly resolved []
1250 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa
1251 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa
1252 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules/ursa/package.json
1253 verbose linkStuff [ false,
1253 verbose linkStuff   false,
1253 verbose linkStuff   false,
1253 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-security/node_modules' ]
1254 info linkStuff ursa@0.8.0
1255 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1256 verbose linkBins ursa@0.8.0
1257 verbose linkMans ursa@0.8.0
1258 verbose rebuildBundles ursa@0.8.0
1259 info install ursa@0.8.0
1260 verbose unsafe-perm in lifecycle true
1261 silly gunzTarPerm extractEntry lib/public/icons/page_white_flash.png
1262 silly gunzTarPerm extractEntry lib/public/icons/page_white_freehand.png
1263 silly gunzTarPerm extractEntry test/lang/en-ca.js
1264 silly gunzTarPerm extractEntry test/lang/sv.js
1265 silly gunzTarPerm extractEntry node_modules/form-data/test/integration/test-submit.js
1266 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/package.json
1267 silly gunzTarPerm extractEntry example/line_count_options.js
1268 silly gunzTarPerm extractEntry readme.markdown
1269 silly gunzTarPerm extractEntry test/_.js
1270 silly gunzTarPerm extractEntry test/parse.js
1271 silly gunzTarPerm extractEntry lib/public/icons/page_white_gear.png
1272 silly gunzTarPerm extractEntry lib/public/icons/page_white_get.png
1273 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/README.md
1274 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/LICENSE
1275 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request/package.json
1276 silly gunzTarPerm extractEntry test/usage.js
1277 silly gunzTarPerm extractEntry test/_/argv.js
1278 silly gunzTarPerm extractEntry lib/public/icons/page_white_go.png
1279 silly gunzTarPerm extractEntry lib/public/icons/page_white_h.png
1280 silly lockFile 05f23e67-rtingclient-node-modules-request tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request
1281 silly lockFile 05f23e67-rtingclient-node-modules-request tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request
1282 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/index.js
1283 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/dist/async.min.js
1284 silly lockFile cecfa175--npm-request-2-9-100-package-tgz tar:///Users/bmackey/.npm/request/2.9.100/package.tgz
1285 silly lockFile cecfa175--npm-request-2-9-100-package-tgz tar:///Users/bmackey/.npm/request/2.9.100/package.tgz
1286 silly gunzTarPerm extractEntry test/lang/de.js
1287 silly gunzTarPerm extractEntry test/lang/th.js
1288 info preinstall request@2.9.100
1289 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request/package.json
1290 silly gunzTarPerm extractEntry lib/public/icons/page_white_horizontal.png
1291 silly gunzTarPerm extractEntry lib/public/icons/page_white_key.png
1292 verbose readDependencies using package.json deps
1293 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request/package.json
1294 silly gunzTarPerm extractEntry test/_/bin.js
1295 verbose readDependencies using package.json deps
1296 silly resolved []
1297 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request
1298 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request
1299 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/request/package.json
1300 verbose linkStuff [ false,
1300 verbose linkStuff   false,
1300 verbose linkStuff   false,
1300 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules' ]
1301 info linkStuff request@2.9.100
1302 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1303 verbose linkBins request@2.9.100
1304 verbose linkMans request@2.9.100
1305 verbose rebuildBundles request@2.9.100
1306 info install request@2.9.100
1307 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async/package.json
1308 info postinstall request@2.9.100
1309 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/deps/nodeunit.js
1310 silly gunzTarPerm extractEntry lib/public/icons/page_white_lightning.png
1311 silly gunzTarPerm extractEntry lib/public/icons/page_white_link.png
1312 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/deps/nodeunit.css
1313 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/Makefile
1314 silly lockFile f4f0905d-portingclient-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async
1315 silly lockFile f4f0905d-portingclient-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async
1316 silly lockFile fd5f474c-key-npm-async-0-1-16-package-tgz tar:///Users/bmackey/.npm/async/0.1.16/package.tgz
1317 silly lockFile fd5f474c-key-npm-async-0-1-16-package-tgz tar:///Users/bmackey/.npm/async/0.1.16/package.tgz
1318 silly gunzTarPerm extractEntry lib/public/icons/page_white_magnify.png
1319 silly gunzTarPerm extractEntry lib/public/icons/page_white_medal.png
1320 info preinstall async@0.1.16
1321 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/.gitmodules
1322 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/lib/async.js
1323 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async/package.json
1324 verbose readDependencies using package.json deps
1325 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async/package.json
1326 verbose readDependencies using package.json deps
1327 silly resolved []
1328 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async
1329 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async
1330 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules/async/package.json
1331 verbose linkStuff [ false,
1331 verbose linkStuff   false,
1331 verbose linkStuff   false,
1331 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/node_modules' ]
1332 info linkStuff async@0.1.16
1333 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1334 verbose linkBins async@0.1.16
1335 verbose linkMans async@0.1.16
1336 verbose rebuildBundles async@0.1.16
1337 info install async@0.1.16
1338 info postinstall async@0.1.16
1339 silly gunzTarPerm extractEntry lib/public/icons/page_white_office.png
1340 silly gunzTarPerm extractEntry lib/public/icons/page_white_paint.png
1341 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
1342 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient
1343 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-reportingclient/package.json
1344 verbose linkStuff [ false,
1344 verbose linkStuff   false,
1344 verbose linkStuff   false,
1344 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules' ]
1345 info linkStuff fh-reportingclient@0.2.2
1346 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1347 verbose linkBins fh-reportingclient@0.2.2
1348 verbose linkMans fh-reportingclient@0.2.2
1349 verbose rebuildBundles fh-reportingclient@0.2.2
1350 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/nodelint.cfg
1351 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/async.min.js.gzip
1352 verbose rebuildBundles [ 'async', 'request' ]
1353 info install fh-reportingclient@0.2.2
1354 info postinstall fh-reportingclient@0.2.2
1355 silly gunzTarPerm extractEntry lib/public/icons/page_white_paintbrush.png
1356 silly gunzTarPerm extractEntry lib/public/icons/page_white_paste.png
1357 silly gunzTarPerm extractEntry test/lang/da.js
1358 silly gunzTarPerm extractEntry test/lang/tr.js
1359 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/test/test-async.js
1360 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/test/.swp
1361 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/async/test/test.html
1362 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/package.json
1363 silly gunzTarPerm extractEntry lib/public/icons/page_white_php.png
1364 silly gunzTarPerm extractEntry lib/public/icons/page_white_picture.png
1365 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/.npmignore
1366 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/License
1367 silly gunzTarPerm extractEntry lib/public/icons/page_white_powerpoint.png
1368 silly gunzTarPerm extractEntry lib/public/icons/page_white_put.png
1369 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/Makefile
1370 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/Readme.md
1371 silly gunzTarPerm extractEntry lib/public/icons/page_white_ruby.png
1372 silly gunzTarPerm extractEntry lib/public/icons/page_white_stack.png
1373 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/lib/combined_stream.js
1374 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/common.js
1375 silly gunzTarPerm extractEntry lib/public/icons/page_white_star.png
1376 silly gunzTarPerm extractEntry lib/public/icons/page_white_swoosh.png
1377 silly gunzTarPerm extractEntry test/lang/cv.js
1378 silly gunzTarPerm extractEntry test/lang/tzm-la.js
1379 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/run.js
1380 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/fixture/file1.txt
1381 silly gunzTarPerm extractEntry lib/public/icons/page_white_text.png
1382 silly gunzTarPerm extractEntry lib/public/icons/page_white_text_width.png
1383 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/fixture/file2.txt
1384 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-callback-streams.js
1385 silly gunzTarPerm extractEntry lib/public/icons/page_white_tux.png
1386 silly gunzTarPerm extractEntry lib/public/icons/page_white_vector.png
1387 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-data-size.js
1388 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams-and-buffers-and-strings.js
1389 silly gunzTarPerm extractEntry lib/public/icons/page_white_visualstudio.png
1390 silly gunzTarPerm extractEntry lib/public/icons/page_white_width.png
1391 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-delayed-streams.js
1392 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-max-data-size.js
1393 silly gunzTarPerm extractEntry lib/public/icons/page_white_word.png
1394 silly gunzTarPerm extractEntry lib/public/icons/page_white_world.png
1395 silly gunzTarPerm extractEntry lib/public/icons/page_white_wrench.png
1396 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/test/integration/test-unpaused-streams.js
1397 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/package.json
1398 silly gunzTarPerm extractEntry lib/public/icons/page_white_zip.png
1399 silly gunzTarPerm extractEntry lib/public/icons/page_word.png
1400 silly gunzTarPerm extractEntry test/lang/cs.js
1401 silly gunzTarPerm extractEntry test/lang/tzm.js
1402 silly gunzTarPerm extractEntry lib/public/icons/page_world.png
1403 silly gunzTarPerm extractEntry lib/public/style.css
1404 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/package.json
1405 silly lockFile 9e7c30cc--fh-nodeapp-node-modules-winston tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1406 silly lockFile 9e7c30cc--fh-nodeapp-node-modules-winston tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1407 silly lockFile bf707e49-ey-npm-winston-0-6-2-package-tgz tar:///Users/bmackey/.npm/winston/0.6.2/package.tgz
1408 silly lockFile bf707e49-ey-npm-winston-0-6-2-package-tgz tar:///Users/bmackey/.npm/winston/0.6.2/package.tgz
1409 info preinstall winston@0.6.2
1410 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/package.json
1411 verbose readDependencies using package.json deps
1412 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/package.json
1413 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/package.json
1414 verbose readDependencies using package.json deps
1415 verbose cache add [ 'eyes@0.1.x', null ]
1416 verbose cache add name=undefined spec="eyes@0.1.x" args=["eyes@0.1.x",null]
1417 verbose parsed url { protocol: null,
1417 verbose parsed url   slashes: null,
1417 verbose parsed url   auth: null,
1417 verbose parsed url   host: null,
1417 verbose parsed url   port: null,
1417 verbose parsed url   hostname: null,
1417 verbose parsed url   hash: null,
1417 verbose parsed url   search: null,
1417 verbose parsed url   query: null,
1417 verbose parsed url   pathname: 'eyes@0.1.x',
1417 verbose parsed url   path: 'eyes@0.1.x',
1417 verbose parsed url   href: 'eyes@0.1.x' }
1418 verbose cache add name="eyes" spec="0.1.x" args=["eyes","0.1.x"]
1419 verbose parsed url { protocol: null,
1419 verbose parsed url   slashes: null,
1419 verbose parsed url   auth: null,
1419 verbose parsed url   host: null,
1419 verbose parsed url   port: null,
1419 verbose parsed url   hostname: null,
1419 verbose parsed url   hash: null,
1419 verbose parsed url   search: null,
1419 verbose parsed url   query: null,
1419 verbose parsed url   pathname: '0.1.x',
1419 verbose parsed url   path: '0.1.x',
1419 verbose parsed url   href: '0.1.x' }
1420 verbose addNamed [ 'eyes', '0.1.x' ]
1421 verbose addNamed [ null, '>=0.1.0- <0.2.0-' ]
1422 silly lockFile 81039dce-eyes-0-1-x eyes@0.1.x
1423 verbose lock eyes@0.1.x /Users/bmackey/.npm/81039dce-eyes-0-1-x.lock
1424 verbose cache add [ 'request@2.9.x', null ]
1425 verbose cache add name=undefined spec="request@2.9.x" args=["request@2.9.x",null]
1426 verbose parsed url { protocol: null,
1426 verbose parsed url   slashes: null,
1426 verbose parsed url   auth: null,
1426 verbose parsed url   host: null,
1426 verbose parsed url   port: null,
1426 verbose parsed url   hostname: null,
1426 verbose parsed url   hash: null,
1426 verbose parsed url   search: null,
1426 verbose parsed url   query: null,
1426 verbose parsed url   pathname: 'request@2.9.x',
1426 verbose parsed url   path: 'request@2.9.x',
1426 verbose parsed url   href: 'request@2.9.x' }
1427 verbose cache add name="request" spec="2.9.x" args=["request","2.9.x"]
1428 verbose parsed url { protocol: null,
1428 verbose parsed url   slashes: null,
1428 verbose parsed url   auth: null,
1428 verbose parsed url   host: null,
1428 verbose parsed url   port: null,
1428 verbose parsed url   hostname: null,
1428 verbose parsed url   hash: null,
1428 verbose parsed url   search: null,
1428 verbose parsed url   query: null,
1428 verbose parsed url   pathname: '2.9.x',
1428 verbose parsed url   path: '2.9.x',
1428 verbose parsed url   href: '2.9.x' }
1429 verbose addNamed [ 'request', '2.9.x' ]
1430 verbose addNamed [ null, '>=2.9.0- <2.10.0-' ]
1431 silly lockFile 0258777d-request-2-9-x request@2.9.x
1432 verbose lock request@2.9.x /Users/bmackey/.npm/0258777d-request-2-9-x.lock
1433 verbose cache add [ 'pkginfo@0.2.x', null ]
1434 verbose cache add name=undefined spec="pkginfo@0.2.x" args=["pkginfo@0.2.x",null]
1435 verbose parsed url { protocol: null,
1435 verbose parsed url   slashes: null,
1435 verbose parsed url   auth: null,
1435 verbose parsed url   host: null,
1435 verbose parsed url   port: null,
1435 verbose parsed url   hostname: null,
1435 verbose parsed url   hash: null,
1435 verbose parsed url   search: null,
1435 verbose parsed url   query: null,
1435 verbose parsed url   pathname: 'pkginfo@0.2.x',
1435 verbose parsed url   path: 'pkginfo@0.2.x',
1435 verbose parsed url   href: 'pkginfo@0.2.x' }
1436 verbose cache add name="pkginfo" spec="0.2.x" args=["pkginfo","0.2.x"]
1437 verbose parsed url { protocol: null,
1437 verbose parsed url   slashes: null,
1437 verbose parsed url   auth: null,
1437 verbose parsed url   host: null,
1437 verbose parsed url   port: null,
1437 verbose parsed url   hostname: null,
1437 verbose parsed url   hash: null,
1437 verbose parsed url   search: null,
1437 verbose parsed url   query: null,
1437 verbose parsed url   pathname: '0.2.x',
1437 verbose parsed url   path: '0.2.x',
1437 verbose parsed url   href: '0.2.x' }
1438 verbose addNamed [ 'pkginfo', '0.2.x' ]
1439 verbose addNamed [ null, '>=0.2.0- <0.3.0-' ]
1440 silly lockFile f898f07d-pkginfo-0-2-x pkginfo@0.2.x
1441 verbose lock pkginfo@0.2.x /Users/bmackey/.npm/f898f07d-pkginfo-0-2-x.lock
1442 verbose cache add [ 'stack-trace@0.0.x', null ]
1443 verbose cache add name=undefined spec="stack-trace@0.0.x" args=["stack-trace@0.0.x",null]
1444 verbose parsed url { protocol: null,
1444 verbose parsed url   slashes: null,
1444 verbose parsed url   auth: null,
1444 verbose parsed url   host: null,
1444 verbose parsed url   port: null,
1444 verbose parsed url   hostname: null,
1444 verbose parsed url   hash: null,
1444 verbose parsed url   search: null,
1444 verbose parsed url   query: null,
1444 verbose parsed url   pathname: 'stack-trace@0.0.x',
1444 verbose parsed url   path: 'stack-trace@0.0.x',
1444 verbose parsed url   href: 'stack-trace@0.0.x' }
1445 verbose cache add name="stack-trace" spec="0.0.x" args=["stack-trace","0.0.x"]
1446 verbose parsed url { protocol: null,
1446 verbose parsed url   slashes: null,
1446 verbose parsed url   auth: null,
1446 verbose parsed url   host: null,
1446 verbose parsed url   port: null,
1446 verbose parsed url   hostname: null,
1446 verbose parsed url   hash: null,
1446 verbose parsed url   search: null,
1446 verbose parsed url   query: null,
1446 verbose parsed url   pathname: '0.0.x',
1446 verbose parsed url   path: '0.0.x',
1446 verbose parsed url   href: '0.0.x' }
1447 verbose addNamed [ 'stack-trace', '0.0.x' ]
1448 verbose addNamed [ null, '>=0.0.0- <0.1.0-' ]
1449 silly lockFile 00b1025d-stack-trace-0-0-x stack-trace@0.0.x
1450 verbose lock stack-trace@0.0.x /Users/bmackey/.npm/00b1025d-stack-trace-0-0-x.lock
1451 silly addNameRange { name: 'eyes', range: '>=0.1.0- <0.2.0-', hasData: false }
1452 silly addNameRange { name: 'request', range: '>=2.9.0- <2.10.0-', hasData: false }
1453 silly addNameRange { name: 'pkginfo', range: '>=0.2.0- <0.3.0-', hasData: false }
1454 verbose cache add [ 'async@0.1.x', null ]
1455 verbose cache add name=undefined spec="async@0.1.x" args=["async@0.1.x",null]
1456 verbose parsed url { protocol: null,
1456 verbose parsed url   slashes: null,
1456 verbose parsed url   auth: null,
1456 verbose parsed url   host: null,
1456 verbose parsed url   port: null,
1456 verbose parsed url   hostname: null,
1456 verbose parsed url   hash: null,
1456 verbose parsed url   search: null,
1456 verbose parsed url   query: null,
1456 verbose parsed url   pathname: 'async@0.1.x',
1456 verbose parsed url   path: 'async@0.1.x',
1456 verbose parsed url   href: 'async@0.1.x' }
1457 verbose cache add name="async" spec="0.1.x" args=["async","0.1.x"]
1458 verbose parsed url { protocol: null,
1458 verbose parsed url   slashes: null,
1458 verbose parsed url   auth: null,
1458 verbose parsed url   host: null,
1458 verbose parsed url   port: null,
1458 verbose parsed url   hostname: null,
1458 verbose parsed url   hash: null,
1458 verbose parsed url   search: null,
1458 verbose parsed url   query: null,
1458 verbose parsed url   pathname: '0.1.x',
1458 verbose parsed url   path: '0.1.x',
1458 verbose parsed url   href: '0.1.x' }
1459 verbose addNamed [ 'async', '0.1.x' ]
1460 verbose addNamed [ null, '>=0.1.0- <0.2.0-' ]
1461 silly lockFile 463e1c03-async-0-1-x async@0.1.x
1462 verbose lock async@0.1.x /Users/bmackey/.npm/463e1c03-async-0-1-x.lock
1463 silly addNameRange { name: 'stack-trace',
1463 silly addNameRange   range: '>=0.0.0- <0.1.0-',
1463 silly addNameRange   hasData: false }
1464 verbose cache add [ 'colors@0.x.x', null ]
1465 verbose cache add name=undefined spec="colors@0.x.x" args=["colors@0.x.x",null]
1466 verbose parsed url { protocol: null,
1466 verbose parsed url   slashes: null,
1466 verbose parsed url   auth: null,
1466 verbose parsed url   host: null,
1466 verbose parsed url   port: null,
1466 verbose parsed url   hostname: null,
1466 verbose parsed url   hash: null,
1466 verbose parsed url   search: null,
1466 verbose parsed url   query: null,
1466 verbose parsed url   pathname: 'colors@0.x.x',
1466 verbose parsed url   path: 'colors@0.x.x',
1466 verbose parsed url   href: 'colors@0.x.x' }
1467 verbose cache add name="colors" spec="0.x.x" args=["colors","0.x.x"]
1468 verbose parsed url { protocol: null,
1468 verbose parsed url   slashes: null,
1468 verbose parsed url   auth: null,
1468 verbose parsed url   host: null,
1468 verbose parsed url   port: null,
1468 verbose parsed url   hostname: null,
1468 verbose parsed url   hash: null,
1468 verbose parsed url   search: null,
1468 verbose parsed url   query: null,
1468 verbose parsed url   pathname: '0.x.x',
1468 verbose parsed url   path: '0.x.x',
1468 verbose parsed url   href: '0.x.x' }
1469 verbose addNamed [ 'colors', '0.x.x' ]
1470 verbose addNamed [ null, '>=0.0.0- <1.0.0-' ]
1471 silly lockFile 0b3af398-colors-0-x-x colors@0.x.x
1472 verbose lock colors@0.x.x /Users/bmackey/.npm/0b3af398-colors-0-x-x.lock
1473 verbose cache add [ 'cycle@1.0.x', null ]
1474 verbose cache add name=undefined spec="cycle@1.0.x" args=["cycle@1.0.x",null]
1475 verbose parsed url { protocol: null,
1475 verbose parsed url   slashes: null,
1475 verbose parsed url   auth: null,
1475 verbose parsed url   host: null,
1475 verbose parsed url   port: null,
1475 verbose parsed url   hostname: null,
1475 verbose parsed url   hash: null,
1475 verbose parsed url   search: null,
1475 verbose parsed url   query: null,
1475 verbose parsed url   pathname: 'cycle@1.0.x',
1475 verbose parsed url   path: 'cycle@1.0.x',
1475 verbose parsed url   href: 'cycle@1.0.x' }
1476 verbose cache add name="cycle" spec="1.0.x" args=["cycle","1.0.x"]
1477 verbose parsed url { protocol: null,
1477 verbose parsed url   slashes: null,
1477 verbose parsed url   auth: null,
1477 verbose parsed url   host: null,
1477 verbose parsed url   port: null,
1477 verbose parsed url   hostname: null,
1477 verbose parsed url   hash: null,
1477 verbose parsed url   search: null,
1477 verbose parsed url   query: null,
1477 verbose parsed url   pathname: '1.0.x',
1477 verbose parsed url   path: '1.0.x',
1477 verbose parsed url   href: '1.0.x' }
1478 verbose addNamed [ 'cycle', '1.0.x' ]
1479 verbose addNamed [ null, '>=1.0.0- <1.1.0-' ]
1480 silly lockFile dfb63733-cycle-1-0-x cycle@1.0.x
1481 verbose lock cycle@1.0.x /Users/bmackey/.npm/dfb63733-cycle-1-0-x.lock
1482 silly addNameRange { name: 'async', range: '>=0.1.0- <0.2.0-', hasData: false }
1483 silly addNameRange { name: 'colors', range: '>=0.0.0- <1.0.0-', hasData: false }
1484 silly addNameRange { name: 'cycle', range: '>=1.0.0- <1.1.0-', hasData: false }
1485 silly lockFile fbffa7c5-modules-rc-node-modules-optimist tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist
1486 silly lockFile fbffa7c5-modules-rc-node-modules-optimist tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist
1487 silly gunzTarPerm extractEntry test/lang/ca.js
1488 verbose registry.get eyes not expired, no request
1489 silly addNameRange number 2 { name: 'eyes', range: '>=0.1.0- <0.2.0-', hasData: true }
1490 silly addNameRange versions [ 'eyes',
1490 silly addNameRange   [ '0.1.1',
1490 silly addNameRange     '0.1.2',
1490 silly addNameRange     '0.1.3',
1490 silly addNameRange     '0.1.4',
1490 silly addNameRange     '0.1.5',
1490 silly addNameRange     '0.1.6',
1490 silly addNameRange     '0.1.7',
1490 silly addNameRange     '0.1.8' ] ]
1491 verbose addNamed [ 'eyes', '0.1.8' ]
1492 verbose addNamed [ '0.1.8', '0.1.8' ]
1493 silly lockFile 8939281b-eyes-0-1-8 eyes@0.1.8
1494 verbose lock eyes@0.1.8 /Users/bmackey/.npm/8939281b-eyes-0-1-8.lock
1495 verbose registry.get request not expired, no request
1496 silly addNameRange number 2 { name: 'request', range: '>=2.9.0- <2.10.0-', hasData: true }
1497 silly addNameRange versions [ 'request',
1497 silly addNameRange   [ '0.10.0',
1497 silly addNameRange     '0.8.3',
1497 silly addNameRange     '0.9.0',
1497 silly addNameRange     '0.9.1',
1497 silly addNameRange     '0.9.5',
1497 silly addNameRange     '1.0.0',
1497 silly addNameRange     '1.1.0',
1497 silly addNameRange     '1.1.1',
1497 silly addNameRange     '1.2.0',
1497 silly addNameRange     '1.9.0',
1497 silly addNameRange     '1.9.1',
1497 silly addNameRange     '1.9.2',
1497 silly addNameRange     '1.9.3',
1497 silly addNameRange     '1.9.5',
1497 silly addNameRange     '1.9.7',
1497 silly addNameRange     '1.9.8',
1497 silly addNameRange     '1.9.9',
1497 silly addNameRange     '2.0.0',
1497 silly addNameRange     '2.0.1',
1497 silly addNameRange     '2.0.2',
1497 silly addNameRange     '2.0.3',
1497 silly addNameRange     '2.0.4',
1497 silly addNameRange     '2.0.5',
1497 silly addNameRange     '2.1.0',
1497 silly addNameRange     '2.1.1',
1497 silly addNameRange     '2.2.0',
1497 silly addNameRange     '2.2.5',
1497 silly addNameRange     '2.2.6',
1497 silly addNameRange     '2.2.9',
1497 silly addNameRange     '2.9.0',
1497 silly addNameRange     '2.9.1',
1497 silly addNameRange     '2.9.2',
1497 silly addNameRange     '2.9.3',
1497 silly addNameRange     '2.9.100',
1497 silly addNameRange     '2.9.150',
1497 silly addNameRange     '2.9.151',
1497 silly addNameRange     '2.9.152',
1497 silly addNameRange     '2.9.153',
1497 silly addNameRange     '2.9.200',
1497 silly addNameRange     '2.9.201',
1497 silly addNameRange     '2.9.202',
1497 silly addNameRange     '2.9.203',
1497 silly addNameRange     '2.10.0',
1497 silly addNameRange     '2.11.0',
1497 silly addNameRange     '2.11.1',
1497 silly addNameRange     '2.11.2',
1497 silly addNameRange     '2.11.3',
1497 silly addNameRange     '2.11.4',
1497 silly addNameRange     '2.12.0',
1497 silly addNameRange     '2.14.0',
1497 silly addNameRange     '2.16.0',
1497 silly addNameRange     '2.16.2',
1497 silly addNameRange     '2.16.4',
1497 silly addNameRange     '2.16.6',
1497 silly addNameRange     '2.18.0',
1497 silly addNameRange     '2.19.0',
1497 silly addNameRange     '2.20.0',
1497 silly addNameRange     '2.21.0',
1497 silly addNameRange     '2.22.0',
1497 silly addNameRange     '2.23.0',
1497 silly addNameRange     '2.24.0',
1497 silly addNameRange     '2.25.0',
1497 silly addNameRange     '2.26.0',
1497 silly addNameRange     '2.27.0',
1497 silly addNameRange     '2.28.0',
1497 silly addNameRange     '2.29.0',
1497 silly addNameRange     '2.30.0',
1497 silly addNameRange     '2.31.0',
1497 silly addNameRange     '2.32.0',
1497 silly addNameRange     '2.33.0',
1497 silly addNameRange     '2.34.0' ] ]
1498 verbose addNamed [ 'request', '2.9.203' ]
1499 verbose addNamed [ '2.9.203', '2.9.203' ]
1500 silly lockFile 3887d89d-request-2-9-203 request@2.9.203
1501 verbose lock request@2.9.203 /Users/bmackey/.npm/3887d89d-request-2-9-203.lock
1502 silly gunzTarPerm extractEntry test/lang/uk.js
1503 verbose registry.get pkginfo not expired, no request
1504 silly addNameRange number 2 { name: 'pkginfo', range: '>=0.2.0- <0.3.0-', hasData: true }
1505 silly addNameRange versions [ 'pkginfo', [ '0.2.1', '0.2.2', '0.2.3', '0.3.0' ] ]
1506 verbose addNamed [ 'pkginfo', '0.2.3' ]
1507 verbose addNamed [ '0.2.3', '0.2.3' ]
1508 silly lockFile d1747791-pkginfo-0-2-3 pkginfo@0.2.3
1509 verbose lock pkginfo@0.2.3 /Users/bmackey/.npm/d1747791-pkginfo-0-2-3.lock
1510 verbose registry.get stack-trace not expired, no request
1511 silly addNameRange number 2 { name: 'stack-trace', range: '>=0.0.0- <0.1.0-', hasData: true }
1512 silly addNameRange versions [ 'stack-trace',
1512 silly addNameRange   [ '0.0.1',
1512 silly addNameRange     '0.0.2',
1512 silly addNameRange     '0.0.3',
1512 silly addNameRange     '0.0.4',
1512 silly addNameRange     '0.0.5',
1512 silly addNameRange     '0.0.6',
1512 silly addNameRange     '0.0.7',
1512 silly addNameRange     '0.0.8',
1512 silly addNameRange     '0.0.9' ] ]
1513 verbose addNamed [ 'stack-trace', '0.0.9' ]
1514 verbose addNamed [ '0.0.9', '0.0.9' ]
1515 silly lockFile 19cb3f18-stack-trace-0-0-9 stack-trace@0.0.9
1516 verbose lock stack-trace@0.0.9 /Users/bmackey/.npm/19cb3f18-stack-trace-0-0-9.lock
1517 silly lockFile ec03181e-y-npm-optimist-0-3-7-package-tgz tar:///Users/bmackey/.npm/optimist/0.3.7/package.tgz
1518 silly lockFile ec03181e-y-npm-optimist-0-3-7-package-tgz tar:///Users/bmackey/.npm/optimist/0.3.7/package.tgz
1519 verbose registry.get async not expired, no request
1520 silly addNameRange number 2 { name: 'async', range: '>=0.1.0- <0.2.0-', hasData: true }
1521 silly addNameRange versions [ 'async',
1521 silly addNameRange   [ '0.1.0',
1521 silly addNameRange     '0.1.1',
1521 silly addNameRange     '0.1.2',
1521 silly addNameRange     '0.1.3',
1521 silly addNameRange     '0.1.4',
1521 silly addNameRange     '0.1.5',
1521 silly addNameRange     '0.1.6',
1521 silly addNameRange     '0.1.7',
1521 silly addNameRange     '0.1.8',
1521 silly addNameRange     '0.1.9',
1521 silly addNameRange     '0.1.10',
1521 silly addNameRange     '0.1.11',
1521 silly addNameRange     '0.1.12',
1521 silly addNameRange     '0.1.13',
1521 silly addNameRange     '0.1.14',
1521 silly addNameRange     '0.1.15',
1521 silly addNameRange     '0.1.16',
1521 silly addNameRange     '0.1.17',
1521 silly addNameRange     '0.1.18',
1521 silly addNameRange     '0.1.19',
1521 silly addNameRange     '0.1.20',
1521 silly addNameRange     '0.1.21',
1521 silly addNameRange     '0.1.22',
1521 silly addNameRange     '0.2.0',
1521 silly addNameRange     '0.2.1',
1521 silly addNameRange     '0.2.2',
1521 silly addNameRange     '0.2.3',
1521 silly addNameRange     '0.2.4',
1521 silly addNameRange     '0.2.5',
1521 silly addNameRange     '0.2.6',
1521 silly addNameRange     '0.2.7',
1521 silly addNameRange     '0.2.8',
1521 silly addNameRange     '0.2.9',
1521 silly addNameRange     '0.2.10' ] ]
1522 verbose addNamed [ 'async', '0.1.22' ]
1523 verbose addNamed [ '0.1.22', '0.1.22' ]
1524 silly lockFile 09d21715-async-0-1-22 async@0.1.22
1525 verbose lock async@0.1.22 /Users/bmackey/.npm/09d21715-async-0-1-22.lock
1526 verbose read json /Users/bmackey/.npm/eyes/0.1.8/package/package.json
1527 verbose read json /Users/bmackey/.npm/request/2.9.203/package/package.json
1528 verbose registry.get colors not expired, no request
1529 silly addNameRange number 2 { name: 'colors', range: '>=0.0.0- <1.0.0-', hasData: true }
1530 silly addNameRange versions [ 'colors',
1530 silly addNameRange   [ '0.3.0', '0.5.0', '0.5.1', '0.6.0', '0.6.0-1', '0.6.1', '0.6.2' ] ]
1531 verbose addNamed [ 'colors', '0.6.2' ]
1532 verbose addNamed [ '0.6.2', '0.6.2' ]
1533 silly lockFile 1ce149d5-colors-0-6-2 colors@0.6.2
1534 verbose lock colors@0.6.2 /Users/bmackey/.npm/1ce149d5-colors-0-6-2.lock
1535 verbose registry.get cycle not expired, no request
1536 silly addNameRange number 2 { name: 'cycle', range: '>=1.0.0- <1.1.0-', hasData: true }
1537 silly addNameRange versions [ 'cycle', [ '1.0.0', '1.0.1', '1.0.2', '1.0.3' ] ]
1538 verbose addNamed [ 'cycle', '1.0.3' ]
1539 verbose addNamed [ '1.0.3', '1.0.3' ]
1540 silly lockFile 3f71f1b0-cycle-1-0-3 cycle@1.0.3
1541 verbose lock cycle@1.0.3 /Users/bmackey/.npm/3f71f1b0-cycle-1-0-3.lock
1542 verbose read json /Users/bmackey/.npm/pkginfo/0.2.3/package/package.json
1543 verbose read json /Users/bmackey/.npm/stack-trace/0.0.9/package/package.json
1544 verbose read json /Users/bmackey/.npm/async/0.1.22/package/package.json
1545 verbose read json /Users/bmackey/.npm/colors/0.6.2/package/package.json
1546 verbose read json /Users/bmackey/.npm/cycle/1.0.3/package/package.json
1547 info preinstall optimist@0.3.7
1548 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/package.json
1549 verbose readDependencies using package.json deps
1550 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/package.json
1551 verbose readDependencies using package.json deps
1552 warn package.json eyes@0.1.8 No repository field.
1553 silly lockFile 8939281b-eyes-0-1-8 eyes@0.1.8
1554 silly lockFile 8939281b-eyes-0-1-8 eyes@0.1.8
1555 silly lockFile 3887d89d-request-2-9-203 request@2.9.203
1556 silly lockFile 3887d89d-request-2-9-203 request@2.9.203
1557 silly lockFile d1747791-pkginfo-0-2-3 pkginfo@0.2.3
1558 silly lockFile d1747791-pkginfo-0-2-3 pkginfo@0.2.3
1559 verbose cache add [ 'wordwrap@~0.0.2', null ]
1560 verbose cache add name=undefined spec="wordwrap@~0.0.2" args=["wordwrap@~0.0.2",null]
1561 verbose parsed url { protocol: null,
1561 verbose parsed url   slashes: null,
1561 verbose parsed url   auth: null,
1561 verbose parsed url   host: null,
1561 verbose parsed url   port: null,
1561 verbose parsed url   hostname: null,
1561 verbose parsed url   hash: null,
1561 verbose parsed url   search: null,
1561 verbose parsed url   query: null,
1561 verbose parsed url   pathname: 'wordwrap@~0.0.2',
1561 verbose parsed url   path: 'wordwrap@~0.0.2',
1561 verbose parsed url   href: 'wordwrap@~0.0.2' }
1562 verbose cache add name="wordwrap" spec="~0.0.2" args=["wordwrap","~0.0.2"]
1563 verbose parsed url { protocol: null,
1563 verbose parsed url   slashes: null,
1563 verbose parsed url   auth: null,
1563 verbose parsed url   host: null,
1563 verbose parsed url   port: null,
1563 verbose parsed url   hostname: null,
1563 verbose parsed url   hash: null,
1563 verbose parsed url   search: null,
1563 verbose parsed url   query: null,
1563 verbose parsed url   pathname: '~0.0.2',
1563 verbose parsed url   path: '~0.0.2',
1563 verbose parsed url   href: '~0.0.2' }
1564 verbose addNamed [ 'wordwrap', '~0.0.2' ]
1565 verbose addNamed [ null, '>=0.0.2- <0.1.0-' ]
1566 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
1567 verbose lock wordwrap@~0.0.2 /Users/bmackey/.npm/8bd42136-wordwrap-0-0-2.lock
1568 silly lockFile 19cb3f18-stack-trace-0-0-9 stack-trace@0.0.9
1569 silly lockFile 19cb3f18-stack-trace-0-0-9 stack-trace@0.0.9
1570 silly addNameRange { name: 'wordwrap', range: '>=0.0.2- <0.1.0-', hasData: false }
1571 silly lockFile 09d21715-async-0-1-22 async@0.1.22
1572 silly lockFile 09d21715-async-0-1-22 async@0.1.22
1573 silly lockFile 81039dce-eyes-0-1-x eyes@0.1.x
1574 silly lockFile 81039dce-eyes-0-1-x eyes@0.1.x
1575 silly lockFile 0258777d-request-2-9-x request@2.9.x
1576 silly lockFile 0258777d-request-2-9-x request@2.9.x
1577 silly lockFile 1ce149d5-colors-0-6-2 colors@0.6.2
1578 silly lockFile 1ce149d5-colors-0-6-2 colors@0.6.2
1579 silly lockFile 3f71f1b0-cycle-1-0-3 cycle@1.0.3
1580 silly lockFile 3f71f1b0-cycle-1-0-3 cycle@1.0.3
1581 silly lockFile f898f07d-pkginfo-0-2-x pkginfo@0.2.x
1582 silly lockFile f898f07d-pkginfo-0-2-x pkginfo@0.2.x
1583 silly lockFile 00b1025d-stack-trace-0-0-x stack-trace@0.0.x
1584 silly lockFile 00b1025d-stack-trace-0-0-x stack-trace@0.0.x
1585 silly lockFile 463e1c03-async-0-1-x async@0.1.x
1586 silly lockFile 463e1c03-async-0-1-x async@0.1.x
1587 silly lockFile 0b3af398-colors-0-x-x colors@0.x.x
1588 silly lockFile 0b3af398-colors-0-x-x colors@0.x.x
1589 silly lockFile dfb63733-cycle-1-0-x cycle@1.0.x
1590 silly lockFile dfb63733-cycle-1-0-x cycle@1.0.x
1591 verbose registry.get wordwrap not expired, no request
1592 silly addNameRange number 2 { name: 'wordwrap', range: '>=0.0.2- <0.1.0-', hasData: true }
1593 silly addNameRange versions [ 'wordwrap', [ '0.0.1', '0.0.2' ] ]
1594 verbose addNamed [ 'wordwrap', '0.0.2' ]
1595 verbose addNamed [ '0.0.2', '0.0.2' ]
1596 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1597 verbose lock wordwrap@0.0.2 /Users/bmackey/.npm/24a694c8-wordwrap-0-0-2.lock
1598 silly resolved [ { name: 'eyes',
1598 silly resolved     description: 'a customizable value inspector',
1598 silly resolved     url: 'http://github.com/cloudhead/eyes.js',
1598 silly resolved     keywords: [ 'inspector', 'debug', 'inspect', 'print' ],
1598 silly resolved     author: { name: 'Alexis Sellier', email: 'self@cloudhead.net' },
1598 silly resolved     contributors: [ [Object] ],
1598 silly resolved     licenses: [ 'MIT' ],
1598 silly resolved     main: './lib/eyes',
1598 silly resolved     version: '0.1.8',
1598 silly resolved     scripts: { test: 'node test/*-test.js' },
1598 silly resolved     directories: { lib: './lib', test: './test' },
1598 silly resolved     engines: { node: '> 0.1.90' },
1598 silly resolved     readme: 'eyes\n====\n\na customizable value inspector for Node.js\n\nsynopsis\n--------\n\nI was tired of looking at cluttered output in the console -- something needed to be done,\n`sys.inspect()` didn\'t display regexps correctly, and was too verbose, and I had an hour or two to spare. \nSo I decided to have some fun. _eyes_ were born.\n\n![eyes-ss](http://dl.dropbox.com/u/251849/eyes-js-ss.gif)\n\n_example of the output of a user-customized eyes.js inspector_\n\n*eyes* also deals with circular objects in an intelligent way, and can pretty-print object literals.\n\nusage\n-----\n\n    var inspect = require(\'eyes\').inspector({styles: {all: \'magenta\'}});\n\n    inspect(something); // inspect with the settings passed to `inspector`\n\nor\n\n    var eyes = require(\'eyes\');\n\n    eyes.inspect(something); // inspect with the default settings\n\nyou can pass a _label_ to `inspect()`, to keep track of your inspections:\n\n    eyes.inspect(something, "a random value");\n\nIf you want to return the output of eyes without printing it, you can set it up this way:\n\n    var inspect = require(\'eyes\').inspector({ stream: null });\n\n    sys.puts(inspect({ something: 42 }));\n\ncustomization\n-------------\n\nThese are the default styles and settings used by _eyes_.\n\n    styles: {                 // Styles applied to stdout\n        all:     \'cyan\',      // Overall style applied to everything\n        label:   \'underline\', // Inspection labels, like \'array\' in `array: [1, 2, 3]`\n        other:   \'inverted\',  // Objects which don\'t have a literal representation, such as functions\n        key:     \'bold\',      // The keys in object literals, like \'a\' in `{a: 1}`\n        special: \'grey\',      // null, undefined...\n        string:  \'green\',\n        number:  \'magenta\',\n        bool:    \'blue\',      // true false\n        regexp:  \'green\',     // /\\d+/\n    },\n    \n    pretty: true,             // Indent object literals\n    hideFunctions: false,     // Don\'t output functions at all\n    stream: process.stdout,   // Stream to write to, or null\n    maxLength: 2048           // Truncate output if longer\n\nYou can overwrite them with your own, by passing a similar object to `inspector()` or `inspect()`.\n\n    var inspect = require(\'eyes\').inspector({\n        styles: {\n            all: \'magenta\',\n            special: \'bold\'\n        },\n        maxLength: 512\n    });\n\n',
1598 silly resolved     readmeFilename: 'README.md',
1598 silly resolved     _id: 'eyes@0.1.8',
1598 silly resolved     _from: 'eyes@0.1.x' },
1598 silly resolved   { name: 'request',
1598 silly resolved     description: 'Simplified HTTP request client.',
1598 silly resolved     tags: [ 'http', 'simple', 'util', 'utility' ],
1598 silly resolved     version: '2.9.203',
1598 silly resolved     author: { name: 'Mikeal Rogers', email: 'mikeal.rogers@gmail.com' },
1598 silly resolved     repository: { type: 'git', url: 'http://github.com/mikeal/request.git' },
1598 silly resolved     bugs: { url: 'http://github.com/mikeal/request/issues' },
1598 silly resolved     engines: [ 'node >= 0.3.6' ],
1598 silly resolved     main: './main',
1598 silly resolved     scripts: { test: 'node tests/run.js' },
1598 silly resolved     readme: '# Request -- Simplified HTTP request method\n\n## Install\n\n<pre>\n  npm install request\n</pre>\n\nOr from source:\n\n<pre>\n  git clone git://github.com/mikeal/request.git \n  cd request\n  npm link\n</pre>\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```javascript\nvar request = require(\'request\');\nrequest(\'http://www.google.com\', function (error, response, body) {\n  if (!error && response.statusCode == 200) {\n    console.log(body) // Print the google web page.\n  }\n})\n```\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```javascript\nrequest(\'http://google.com/doodle.png\').pipe(fs.createWriteStream(\'doodle.png\'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types, in this case `application/json`, and use the proper content-type in the PUT request if one is not already provided in the headers.\n\n```javascript\nfs.createReadStream(\'file.json\').pipe(request.put(\'http://mysite.com/obj.json\'))\n```\n\nRequest can also pipe to itself. When doing so the content-type and content-length will be preserved in the PUT headers.\n\n```javascript\nrequest.get(\'http://google.com/img.png\').pipe(request.put(\'http://mysite.com/img.png\'))\n```\n\nNow let\'s get fancy.\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    if (req.method === \'PUT\') {\n      req.pipe(request.put(\'http://mysite.com/doodle.png\'))\n    } else if (req.method === \'GET\' || req.method === \'HEAD\') {\n      request.get(\'http://mysite.com/doodle.png\').pipe(resp)\n    } \n  }\n})\n```\n\nYou can also pipe() from a http.ServerRequest instance and to a http.ServerResponse instance. The HTTP method and headers will be sent as well as the entity-body data. Which means that, if you don\'t really care about security, you can do:\n\n```javascript\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    var x = request(\'http://mysite.com/doodle.png\')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since pipe() returns the destination stream in node 0.5.x you can do one line proxying :)\n\n```javascript\nreq.pipe(request(\'http://mysite.com/doodle.png\')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```javascript\nvar r = request.defaults({\'proxy\':\'http://localproxy.com\'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === \'/doodle.png\') {\n    r.get(\'http://google.com/doodle.png\').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n## OAuth Signing\n\n```javascript\n// Twitter OAuth\nvar qs = require(\'querystring\')\n  , oauth =\n    { callback: \'http://mysite.com/callback/\'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = \'https://api.twitter.com/oauth/request_token\'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Assume by some stretch of magic you aquired the verifier\n  var access_token = qs.parse(body)\n    , oauth = \n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: access_token.oauth_token\n      , verifier: VERIFIER\n      , token_secret: access_token.oauth_token_secret\n      }\n    , url = \'https://api.twitter.com/oauth/access_token\'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    var perm_token = qs.parse(body)\n      , oauth = \n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_token.oauth_token\n        , token_secret: perm_token.oauth_token_secret\n        }\n      , url = \'https://api.twitter.com/1/users/show.json?\'\n      , params = \n        { screen_name: perm_token.screen_name\n        , user_id: perm_token.user_id\n        }\n      ;\n    url += qs.stringify(params)\n    request.get({url:url, oauth:oauth, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\n\n\n### request(options, callback)\n\nThe first argument can be either a url or an options object. The only required option is uri, all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from url.parse()\n* `qs` - object containing querystring values to be appended to the uri\n* `method` - http method, defaults to GET\n* `headers` - http headers, defaults to {}\n* `body` - entity body for POST and PUT requests. Must be buffer or string.\n* `form` - sets `body` but to querystring representation of value and adds `Content-type: application/x-www-form-urlencoded; charset=utf-8` header.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `followRedirect` - follow HTTP 3xx responses as redirects. defaults to true.\n* `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects. defaults to false.\n* `maxRedirects` - the maximum number of redirects to follow, defaults to 10.\n* `encoding` - Encoding to be used on `setEncoding` of response data. If set to `null`, the body is returned as a Buffer.\n* `pool` - A hash object containing the agents for these requests. If omitted this request will use the global pool which is set to node\'s default maxSockets.\n* `pool.maxSockets` - Integer containing the maximum amount of sockets in the pool.\n* `timeout` - Integer containing the number of milliseconds to wait for a request to respond before aborting the request\t\n* `proxy` - An HTTP proxy to be used. Support proxy Auth with Basic Auth the same way it\'s supported with the `url` parameter by embedding the auth info in the uri.\n* `oauth` - Options for OAuth HMAC-SHA1 signing, see documentation above.\n* `strictSSL` - Set to `true` to require that SSL certificates be valid. Note: to use your own certificate authority, you need to specify an agent that was created with that ca as an option.\n* `jar` - Set to `false` if you don\'t want cookies to be remembered for future use or define your custom cookie jar (see examples section)\n\n\nThe callback argument gets 3 arguments. The first is an error when applicable (usually from the http.Client option not the http.ClientRequest object). The second in an http.ClientResponse object. The third is the response body String or Buffer.\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n### request.defaults(options)  \n  \nThis method returns a wrapper around the normal request API that defaults to whatever options you pass in to it.\n\n### request.put\n\nSame as request() but defaults to `method: "PUT"`.\n\n```javascript\nrequest.put(url)\n```\n\n### request.post\n\nSame as request() but defaults to `method: "POST"`.\n\n```javascript\nrequest.post(url)\n```\n\n### request.head\n\nSame as request() but defaults to `method: "HEAD"`.\n\n```javascript\nrequest.head(url)\n```\n\n### request.del\n\nSame as request() but defaults to `method: "DELETE"`.\n\n```javascript\nrequest.del(url)\n```\n\n### request.get\n\nAlias to normal request method for uniformity.\n\n```javascript\nrequest.get(url)\n```\n### request.cookie\n\nFunction that creates a new cookie.\n\n```javascript\nrequest.cookie(\'cookie_string_here\')\n```\n### request.jar\n\nFunction that creates a new cookie jar.\n\n```javascript\nrequest.jar()\n```\n\n\n## Examples:\n\n```javascript\n  var request = require(\'request\')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: \'PUT\'\n    , uri: \'http://mikeal.iriscouch.com/testjs/\' + rand\n    , multipart: \n      [ { \'content-type\': \'application/json\'\n        ,  body: JSON.stringify({foo: \'bar\', _attachments: {\'message.txt\': {follows: true, length: 18, \'content_type\': \'text/plain\' }}})\n        }\n      , { body: \'I am an attachment\' }\n      ] \n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log(\'document saved as: http://mikeal.iriscouch.com/testjs/\'+ rand)\n      } else {\n        console.log(\'error: \'+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\nCookies are enabled by default (so they can be used in subsequent requests). To disable cookies set jar to false (either in defaults or in the options sent).\n\n```javascript\nvar request = request.defaults({jar: false})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\n\nIf you to use a custom cookie jar (instead of letting request use its own global cookie jar) you do so by setting the jar default or by specifying it as an option:\n\n```javascript\nvar j = request.jar()\nvar request = request.defaults({jar:j})\nrequest(\'http://www.google.com\', function () {\n  request(\'http://images.google.com\')\n})\n```\nOR\n\n```javascript\nvar j = request.jar()\nvar cookie = request.cookie(\'your_cookie_here\')\nj.add(cookie)\nrequest({url: \'http://www.google.com\', jar: j}, function () {\n  request(\'http://images.google.com\')\n})\n```\n',
1598 silly resolved     readmeFilename: 'README.md',
1598 silly resolved     _id: 'request@2.9.203',
1598 silly resolved     _from: 'request@2.9.x' },
1598 silly resolved   { name: 'pkginfo',
1598 silly resolved     version: '0.2.3',
1598 silly resolved     description: 'An easy way to expose properties on a module from a package.json',
1598 silly resolved     author: { name: 'Charlie Robbins', email: 'charlie.robbins@gmail.com' },
1598 silly resolved     repository:
1598 silly resolved      { type: 'git',
1598 silly resolved        url: 'http://github.com/indexzero/node-pkginfo.git' },
1598 silly resolved     keywords: [ 'info', 'tools', 'package.json' ],
1598 silly resolved     devDependencies: { vows: '0.6.x' },
1598 silly resolved     main: './lib/pkginfo',
1598 silly resolved     scripts: { test: 'vows test/*-test.js --spec' },
1598 silly resolved     engines: { node: '>= 0.4.0' },
1598 silly resolved     readme: '# node-pkginfo\n\nAn easy way to expose properties on a module from a package.json\n\n## Installation\n\n### Installing npm (node package manager)\n```\n  curl http://npmjs.org/install.sh | sh\n```\n\n### Installing pkginfo\n```\n  [sudo] npm install pkginfo\n```\n\n## Motivation\nHow often when writing node.js modules have you written the following line(s) of code? \n\n* Hard code your version string into your code\n\n``` js\n  exports.version = \'0.1.0\';\n```\n\n* Programmatically expose the version from the package.json\n\n``` js\n  exports.version = JSON.parse(fs.readFileSync(\'/path/to/package.json\', \'utf8\')).version;\n```\n\nIn other words, how often have you wanted to expose basic information from your package.json onto your module programmatically? **WELL NOW YOU CAN!**\n\n## Usage\n\nUsing `pkginfo` is idiot-proof, just require and invoke it. \n\n``` js\n  var pkginfo = require(\'pkginfo\')(module);\n  \n  console.dir(module.exports);\n```\n\nBy invoking the `pkginfo` module all of the properties in your `package.json` file will be automatically exposed on the callee module (i.e. the parent module of `pkginfo`). \n\nHere\'s a sample of the output:\n\n```\n  { name: \'simple-app\',\n    description: \'A test fixture for pkginfo\',\n    version: \'0.1.0\',\n    author: \'Charlie Robbins <charlie.robbins@gmail.com>\',\n    keywords: [ \'test\', \'fixture\' ],\n    main: \'./index.js\',\n    scripts: { test: \'vows test/*-test.js --spec\' },\n    engines: { node: \'>= 0.4.0\' } }\n```\n\n### Expose specific properties\nIf you don\'t want to expose **all** properties on from your `package.json` on your module then simple pass those properties to the `pkginfo` function:\n\n``` js\n  var pkginfo = require(\'pkginfo\')(module, \'version\', \'author\');\n  \n  console.dir(module.exports);\n```\n\n```\n  { version: \'0.1.0\',\n    author: \'Charlie Robbins <charlie.robbins@gmail.com>\' }\n```\n\nIf you\'re looking for further usage see the [examples][0] included in this repository. \n\n## Run Tests\nTests are written in [vows][1] and give complete coverage of all APIs.\n\n```\n  vows test/*-test.js --spec\n```\n\n[0]: https://github.com/indexzero/node-pkginfo/tree/master/examples\n[1]: http://vowsjs.org\n\n#### Author: [Charlie Robbins](http://nodejitsu.com)',
1598 silly resolved     readmeFilename: 'README.md',
1598 silly resolved     bugs: { url: 'https://github.com/indexzero/node-pkginfo/issues' },
1598 silly resolved     _id: 'pkginfo@0.2.3',
1598 silly resolved     _from: 'pkginfo@0.2.x' },
1598 silly resolved   { author:
1598 silly resolved      { name: 'Felix Geisendörfer',
1598 silly resolved        email: 'felix@debuggable.com',
1598 silly resolved        url: 'http://debuggable.com/' },
1598 silly resolved     name: 'stack-trace',
1598 silly resolved     description: 'Get v8 stack traces as an array of CallSite objects.',
1598 silly resolved     version: '0.0.9',
1598 silly resolved     homepage: 'https://github.com/felixge/node-stack-trace',
1598 silly resolved     repository:
1598 silly resolved      { type: 'git',
1598 silly resolved        url: 'git://github.com/felixge/node-stack-trace.git' },
1598 silly resolved     main: './lib/stack-trace',
1598 silly resolved     engines: { node: '*' },
1598 silly resolved     dependencies: {},
1598 silly resolved     devDependencies: { far: '0.0.3', 'long-stack-traces': '0.1.2' },
1598 silly resolved     readme: '# stack-trace\n\nGet v8 stack traces as an array of CallSite objects.\n\n## Install\n\n``` bash\nnpm install stack-trace\n```\n\n## Usage\n\nThe stack-trace module makes it easy for you to capture the current stack:\n\n``` javascript\nvar stackTrace = require(\'stack-trace\');\nvar trace = stackTrace.get();\n\nrequire(\'assert\').strictEqual(trace[0].getFileName(), __filename);\n```\n\nHowever, sometimes you have already popped the stack you are interested in,\nand all you have left is an `Error` object. This module can help:\n\n``` javascript\nvar stackTrace = require(\'stack-trace\');\nvar err = new Error(\'something went wrong\');\nvar trace = stackTrace.parse(err);\n\nrequire(\'assert\').strictEqual(trace[0].getFileName(), __filename);\n```\n\nPlease note that parsing the `Error#stack` property is not perfect, only\ncertain properties can be retrieved with it as noted in the API docs below.\n\n## Long stack traces\n\nstack-trace works great with [long-stack-traces][], when parsing an `err.stack`\nthat has crossed the event loop boundary, a `CallSite` object returning\n`\'----------------------------------------\'` for `getFileName()` is created.\nAll other methods of the event loop boundary call site return `null`.\n\n[long-stack-traces]: https://github.com/tlrobinson/long-stack-traces\n\n## API\n\n### stackTrace.get([belowFn])\n\nReturns an array of `CallSite` objects, where element `0` is the current call\nsite.\n\nWhen passing a function on the current stack as the `belowFn` parameter, the\nreturned array will only include `CallSite` objects below this function.\n\n### stackTrace.parse(err)\n\nParses the `err.stack` property of an `Error` object into an array compatible\nwith those returned by `stackTrace.get()`. However, only the following methods\nare implemented on the returned `CallSite` objects.\n\n* getTypeName\n* getFunctionName\n* getMethodName\n* getFileName\n* getLineNumber\n* getColumnNumber\n* isNative\n\nNote: Except `getFunctionName()`, all of the above methods return exactly the\nsame values as you would get from `stackTrace.get()`. `getFunctionName()`\nis sometimes a little different, but still useful.\n\n### CallSite\n\nThe official v8 CallSite object API can be found [here][v8stackapi]. A quick\nexcerpt:\n\n> A CallSite object defines the following methods:\n>\n> * **getThis**: returns the value of this\n> * **getTypeName**: returns the type of this as a string. This is the name of the function stored in the constructor field of this, if available, otherwise the object\'s [[Class]] internal property.\n> * **getFunction**: returns the current function\n> * **getFunctionName**: returns the name of the current function, typically its name property. If a name property is not available an attempt will be made to try to infer a name from the function\'s context.\n> * **getMethodName**: returns the name of the property of this or one of its prototypes that holds the current function\n> * **getFileName**: if this function was defined in a script returns the name of the script\n> * **getLineNumber**: if this function was defined in a script returns the current line number\n> * **getColumnNumber**: if this function was defined in a script returns the current column number\n> * **getEvalOrigin**: if this function was created using a call to eval returns a CallSite object representing the location where eval was called\n> * **isToplevel**: is this a toplevel invocation, that is, is this the global object?\n> * **isEval**: does this call take place in code defined by a call to eval?\n> * **isNative**: is this call in native V8 code?\n> * **isConstructor**: is this a constructor call?\n\n[v8stackapi]: http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi\n\n## License\n\nstack-trace is licensed under the MIT license.\n',
1598 silly resolved     readmeFilename: 'Readme.md',
1598 silly resolved     bugs: { url: 'https://github.com/felixge/node-stack-trace/issues' },
1598 silly resolved     _id: 'stack-trace@0.0.9',
1598 silly resolved     _from: 'stack-trace@0.0.x' },
1598 silly resolved   { name: 'async',
1598 silly resolved     description: 'Higher-order functions and common patterns for asynchronous code',
1598 silly resolved     main: './index',
1598 silly resolved     author: { name: 'Caolan McMahon' },
1598 silly resolved     version: '0.1.22',
1598 silly resolved     repository: { type: 'git', url: 'http://github.com/caolan/async.git' },
1598 silly resolved     bugs: { url: 'http://github.com/caolan/async/issues' },
1598 silly resolved     licenses: [ [Object] ],
1598 silly resolved     devDependencies: { nodeunit: '>0.0.0', 'uglify-js': '1.2.x', nodelint: '>0.0.0' },
1598 silly resolved     readme: '# Async.js\n\nAsync is a utility module which provides straight-forward, powerful functions\nfor working with asynchronous JavaScript. Although originally designed for\nuse with [node.js](http://nodejs.org), it can also be used directly in the\nbrowser.\n\nAsync provides around 20 functions that include the usual \'functional\'\nsuspects (map, reduce, filter, forEach…) as well as some common patterns\nfor asynchronous control flow (parallel, series, waterfall…). All these\nfunctions assume you follow the node.js convention of providing a single\ncallback as the last argument of your async function.\n\n\n## Quick Examples\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n    async.parallel([\n        function(){ ... },\n        function(){ ... }\n    ], callback);\n\n    async.series([\n        function(){ ... },\n        function(){ ... }\n    ]);\n\nThere are many more functions available so take a look at the docs below for a\nfull list. This module aims to be comprehensive, so if you feel anything is\nmissing please create a GitHub issue for it.\n\n\n## Download\n\nReleases are available for download from\n[GitHub](http://github.com/caolan/async/downloads).\nAlternatively, you can install using Node Package Manager (npm):\n\n    npm install async\n\n\n__Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 17.5kb Uncompressed\n\n__Production:__ [async.min.js](https://github.com/caolan/async/raw/master/dist/async.min.js) - 1.7kb Packed and Gzipped\n\n\n## In the Browser\n\nSo far its been tested in IE6, IE7, IE8, FF3.6 and Chrome 5. Usage:\n\n    <script type="text/javascript" src="async.js"></script>\n    <script type="text/javascript">\n\n        async.map(data, asyncProcess, function(err, results){\n            alert(results);\n        });\n\n    </script>\n\n\n## Documentation\n\n### Collections\n\n* [forEach](#forEach)\n* [map](#map)\n* [filter](#filter)\n* [reject](#reject)\n* [reduce](#reduce)\n* [detect](#detect)\n* [sortBy](#sortBy)\n* [some](#some)\n* [every](#every)\n* [concat](#concat)\n\n### Control Flow\n\n* [series](#series)\n* [parallel](#parallel)\n* [whilst](#whilst)\n* [until](#until)\n* [waterfall](#waterfall)\n* [queue](#queue)\n* [auto](#auto)\n* [iterator](#iterator)\n* [apply](#apply)\n* [nextTick](#nextTick)\n\n### Utils\n\n* [memoize](#memoize)\n* [unmemoize](#unmemoize)\n* [log](#log)\n* [dir](#dir)\n* [noConflict](#noConflict)\n\n\n## Collections\n\n<a name="forEach" />\n### forEach(arr, iterator, callback)\n\nApplies an iterator function to each item in an array, in parallel.\nThe iterator is called with an item from the list and a callback for when it\nhas finished. If the iterator passes an error to this callback, the main\ncallback for the forEach function is immediately called with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // assuming openFiles is an array of file names and saveFile is a function\n    // to save the modified contents of that file:\n\n    async.forEach(openFiles, saveFile, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n\n---------------------------------------\n\n<a name="forEachSeries" />\n### forEachSeries(arr, iterator, callback)\n\nThe same as forEach only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. This means the iterator functions will complete in order.\n\n\n---------------------------------------\n\n<a name="forEachLimit" />\n### forEachLimit(arr, limit, iterator, callback)\n\nThe same as forEach only the iterator is applied to batches of items in the\narray, in series. The next batch of iterators is only called once the current\none has completed processing.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* limit - How many items should be in each batch.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(err) - A callback which is called after all the iterator functions\n  have finished, or an error has occurred.\n\n__Example__\n\n    // Assume documents is an array of JSON objects and requestApi is a\n    // function that interacts with a rate-limited REST api.\n\n    async.forEachLimit(documents, 20, requestApi, function(err){\n        // if any of the saves produced an error, err would equal that error\n    });\n---------------------------------------\n\n<a name="map" />\n### map(arr, iterator, callback)\n\nProduces a new array of values by mapping each value in the given array through\nthe iterator function. The iterator is called with an item from the array and a\ncallback for when it has finished processing. The callback takes 2 arguments, \nan error and the transformed item from the array. If the iterator passes an\nerror to this callback, the main callback for the map function is immediately\ncalled with the error.\n\nNote, that since this function applies the iterator to each item in parallel\nthere is no guarantee that the iterator functions will complete in order, however\nthe results array will be in the same order as the original array.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a transformed item.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array of the\n  transformed items from the original array.\n\n__Example__\n\n    async.map([\'file1\',\'file2\',\'file3\'], fs.stat, function(err, results){\n        // results is now an array of stats for each file\n    });\n\n---------------------------------------\n\n<a name="mapSeries" />\n### mapSeries(arr, iterator, callback)\n\nThe same as map only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n\n---------------------------------------\n\n<a name="filter" />\n### filter(arr, iterator, callback)\n\n__Alias:__ select\n\nReturns a new array of all the values which pass an async truth test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. This operation is\nperformed in parallel, but the results array will be in the same order as the\noriginal.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(results) - A callback which is called after all the iterator\n  functions have finished.\n\n__Example__\n\n    async.filter([\'file1\',\'file2\',\'file3\'], path.exists, function(results){\n        // results now equals an array of the existing files\n    });\n\n---------------------------------------\n\n<a name="filterSeries" />\n### filterSeries(arr, iterator, callback)\n\n__alias:__ selectSeries\n\nThe same as filter only the iterator is applied to each item in the array in\nseries. The next iterator is only called once the current one has completed\nprocessing. The results array will be in the same order as the original.\n\n---------------------------------------\n\n<a name="reject" />\n### reject(arr, iterator, callback)\n\nThe opposite of filter. Removes values that pass an async truth test.\n\n---------------------------------------\n\n<a name="rejectSeries" />\n### rejectSeries(arr, iterator, callback)\n\nThe same as filter, only the iterator is applied to each item in the array\nin series.\n\n\n---------------------------------------\n\n<a name="reduce" />\n### reduce(arr, memo, iterator, callback)\n\n__aliases:__ inject, foldl\n\nReduces a list of values into a single value using an async iterator to return\neach successive step. Memo is the initial state of the reduction. This\nfunction only operates in series. For performance reasons, it may make sense to\nsplit a call to this function into a parallel map, then use the normal\nArray.prototype.reduce on the results. This function is for situations where\neach step in the reduction needs to be async, if you can get the data before\nreducing it then its probably a good idea to do so.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* memo - The initial state of the reduction.\n* iterator(memo, item, callback) - A function applied to each item in the\n  array to produce the next step in the reduction. The iterator is passed a\n  callback which accepts an optional error as its first argument, and the state\n  of the reduction as the second. If an error is passed to the callback, the\n  reduction is stopped and the main callback is immediately called with the\n  error.\n* callback(err, result) - A callback which is called after all the iterator\n  functions have finished. Result is the reduced value.\n\n__Example__\n\n    async.reduce([1,2,3], 0, function(memo, item, callback){\n        // pointless async:\n        process.nextTick(function(){\n            callback(null, memo + item)\n        });\n    }, function(err, result){\n        // result is now equal to the last value of memo, which is 6\n    });\n\n---------------------------------------\n\n<a name="reduceRight" />\n### reduceRight(arr, memo, iterator, callback)\n\n__Alias:__ foldr\n\nSame as reduce, only operates on the items in the array in reverse order.\n\n\n---------------------------------------\n\n<a name="detect" />\n### detect(arr, iterator, callback)\n\nReturns the first value in a list that passes an async truth test. The\niterator is applied in parallel, meaning the first iterator to return true will\nfire the detect callback with that result. That means the result might not be\nthe first item in the original array (in terms of order) that passes the test.\n\nIf order within the original array is important then look at detectSeries.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  the first item in the array that passes the truth test (iterator) or the\n  value undefined if none passed.\n\n__Example__\n\n    async.detect([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // result now equals the first file in the list that exists\n    });\n\n---------------------------------------\n\n<a name="detectSeries" />\n### detectSeries(arr, iterator, callback)\n\nThe same as detect, only the iterator is applied to each item in the array\nin series. This means the result is always the first in the original array (in\nterms of array order) that passes the truth test.\n\n\n---------------------------------------\n\n<a name="sortBy" />\n### sortBy(arr, iterator, callback)\n\nSorts a list by the results of running each value through an async iterator.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and a value to use as the sort criteria.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is the items from\n  the original array sorted by the values returned by the iterator calls.\n\n__Example__\n\n    async.sortBy([\'file1\',\'file2\',\'file3\'], function(file, callback){\n        fs.stat(file, function(err, stats){\n            callback(err, stats.mtime);\n        });\n    }, function(err, results){\n        // results is now the original array of files sorted by\n        // modified date\n    });\n\n\n---------------------------------------\n\n<a name="some" />\n### some(arr, iterator, callback)\n\n__Alias:__ any\n\nReturns true if at least one element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists. Once any iterator\ncall returns true, the main callback is immediately called.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called as soon as any iterator returns\n  true, or after all the iterator functions have finished. Result will be\n  either true or false depending on the values of the async tests.\n\n__Example__\n\n    async.some([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then at least one of the files exists\n    });\n\n---------------------------------------\n\n<a name="every" />\n### every(arr, iterator, callback)\n\n__Alias:__ all\n\nReturns true if every element in the array satisfies an async test.\n_The callback for each iterator call only accepts a single argument of true or\nfalse, it does not accept an error argument first!_ This is in-line with the\nway node libraries work with truth tests like path.exists.\n\n__Arguments__\n\n* arr - An array to iterate over.\n* iterator(item, callback) - A truth test to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed.\n* callback(result) - A callback which is called after all the iterator\n  functions have finished. Result will be either true or false depending on\n  the values of the async tests.\n\n__Example__\n\n    async.every([\'file1\',\'file2\',\'file3\'], path.exists, function(result){\n        // if result is true then every file exists\n    });\n\n---------------------------------------\n\n<a name="concat" />\n### concat(arr, iterator, callback)\n\nApplies an iterator to each item in a list, concatenating the results. Returns the\nconcatenated list. The iterators are called in parallel, and the results are\nconcatenated as they return. There is no guarantee that the results array will\nbe returned in the original order of the arguments passed to the iterator function.\n\n__Arguments__\n\n* arr - An array to iterate over\n* iterator(item, callback) - A function to apply to each item in the array.\n  The iterator is passed a callback which must be called once it has completed\n  with an error (which can be null) and an array of results.\n* callback(err, results) - A callback which is called after all the iterator\n  functions have finished, or an error has occurred. Results is an array containing\n  the concatenated results of the iterator function.\n\n__Example__\n\n    async.concat([\'dir1\',\'dir2\',\'dir3\'], fs.readdir, function(err, files){\n        // files is now a list of filenames that exist in the 3 directories\n    });\n\n---------------------------------------\n\n<a name="concatSeries" />\n### concatSeries(arr, iterator, callback)\n\nSame as async.concat, but executes in series instead of parallel.\n\n\n## Control Flow\n\n<a name="series" />\n### series(tasks, [callback])\n\nRun an array of functions in series, each one running once the previous\nfunction has completed. If any functions in the series pass an error to its\ncallback, no more functions are run and the callback for the series is\nimmediately called with the value of the error. Once the tasks have completed,\nthe results are passed to the final callback as an array.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.series.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed\n  a callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.series([\n        function(callback){\n            // do some stuff ...\n            callback(null, \'one\');\n        },\n        function(callback){\n            // do some more stuff ...\n            callback(null, \'two\');\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // results is now equal to [\'one\', \'two\']\n    });\n\n\n    // an example using an object instead of an array\n    async.series({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equal to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="parallel" />\n### parallel(tasks, [callback])\n\nRun an array of functions in parallel, without waiting until the previous\nfunction has completed. If any of the functions pass an error to its\ncallback, the main callback is immediately called with the value of the error.\nOnce the tasks have completed, the results are passed to the final callback as an\narray.\n\nIt is also possible to use an object instead of an array. Each property will be\nrun as a function and the results will be passed to the final callback as an object\ninstead of an array. This can be a more readable way of handling results from\nasync.parallel.\n\n\n__Arguments__\n\n* tasks - An array or object containing functions to run, each function is passed a\n  callback it must call on completion.\n* callback(err, results) - An optional callback to run once all the functions\n  have completed. This function gets an array of all the arguments passed to\n  the callbacks used in the array.\n\n__Example__\n\n    async.parallel([\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'one\');\n            }, 200);\n        },\n        function(callback){\n            setTimeout(function(){\n                callback(null, \'two\');\n            }, 100);\n        },\n    ],\n    // optional callback\n    function(err, results){\n        // the results array will equal [\'one\',\'two\'] even though\n        // the second function had a shorter timeout.\n    });\n\n\n    // an example using an object instead of an array\n    async.parallel({\n        one: function(callback){\n            setTimeout(function(){\n                callback(null, 1);\n            }, 200);\n        },\n        two: function(callback){\n            setTimeout(function(){\n                callback(null, 2);\n            }, 100);\n        },\n    },\n    function(err, results) {\n        // results is now equals to: {one: 1, two: 2}\n    });\n\n\n---------------------------------------\n\n<a name="whilst" />\n### whilst(test, fn, callback)\n\nRepeatedly call fn, while test returns true. Calls the callback when stopped,\nor an error occurs.\n\n__Arguments__\n\n* test() - synchronous truth test to perform before each execution of fn.\n* fn(callback) - A function to call each time the test passes. The function is\n  passed a callback which must be called once it has completed with an optional\n  error as the first argument.\n* callback(err) - A callback which is called after the test fails and repeated\n  execution of fn has stopped.\n\n__Example__\n\n    var count = 0;\n\n    async.whilst(\n        function () { return count < 5; },\n        function (callback) {\n            count++;\n            setTimeout(callback, 1000);\n        },\n        function (err) {\n            // 5 seconds have passed\n        }\n    );\n\n\n---------------------------------------\n\n<a name="until" />\n### until(test, fn, callback)\n\nRepeatedly call fn, until test returns true. Calls the callback when stopped,\nor an error occurs.\n\nThe inverse of async.whilst.\n\n\n---------------------------------------\n\n<a name="waterfall" />\n### waterfall(tasks, [callback])\n\nRuns an array of functions in series, each passing their results to the next in\nthe array. However, if any of the functions pass an error to the callback, the\nnext function is not executed and the main callback is immediately called with\nthe error.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n* callback(err, [results]) - An optional callback to run once all the functions\n  have completed. This will be passed the results of the last task\'s callback.\n\n\n\n__Example__\n\n    async.waterfall([\n        function(callback){\n            callback(null, \'one\', \'two\');\n        },\n        function(arg1, arg2, callback){\n            callback(null, \'three\');\n        },\n        function(arg1, callback){\n            // arg1 now equals \'three\'\n            callback(null, \'done\');\n        }\n    ], function (err, result) {\n       // result now equals \'done\'    \n    });\n\n\n---------------------------------------\n\n<a name="queue" />\n### queue(worker, concurrency)\n\nCreates a queue object with the specified concurrency. Tasks added to the\nqueue will be processed in parallel (up to the concurrency limit). If all\nworkers are in progress, the task is queued until one is available. Once\na worker has completed a task, the task\'s callback is called.\n\n__Arguments__\n\n* worker(task, callback) - An asynchronous function for processing a queued\n  task.\n* concurrency - An integer for determining how many worker functions should be\n  run in parallel.\n\n__Queue objects__\n\nThe queue object returned by this function has the following properties and\nmethods:\n\n* length() - a function returning the number of items waiting to be processed.\n* concurrency - an integer for determining how many worker functions should be\n  run in parallel. This property can be changed after a queue is created to\n  alter the concurrency on-the-fly.\n* push(task, [callback]) - add a new task to the queue, the callback is called\n  once the worker has finished processing the task.\n  instead of a single task, an array of tasks can be submitted. the respective callback is used for every task in the list.\n* saturated - a callback that is called when the queue length hits the concurrency and further tasks will be queued\n* empty - a callback that is called when the last item from the queue is given to a worker\n* drain - a callback that is called when the last item from the queue has returned from the worker\n\n__Example__\n\n    // create a queue object with concurrency 2\n\n    var q = async.queue(function (task, callback) {\n        console.log(\'hello \' + task.name);\n        callback();\n    }, 2);\n\n\n    // assign a callback\n    q.drain = function() {\n        console.log(\'all items have been processed\');\n    }\n\n    // add some items to the queue\n\n    q.push({name: \'foo\'}, function (err) {\n        console.log(\'finished processing foo\');\n    });\n    q.push({name: \'bar\'}, function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n    // add some items to the queue (batch-wise)\n\n    q.push([{name: \'baz\'},{name: \'bay\'},{name: \'bax\'}], function (err) {\n        console.log(\'finished processing bar\');\n    });\n\n\n---------------------------------------\n\n<a name="auto" />\n### auto(tasks, [callback])\n\nDetermines the best order for running functions based on their requirements.\nEach function can optionally depend on other functions being completed first,\nand each function is run as soon as its requirements are satisfied. If any of\nthe functions pass an error to their callback, that function will not complete\n(so any other functions depending on it will not run) and the main callback\nwill be called immediately with the error. Functions also receive an object\ncontaining the results of functions which have completed so far.\n\n__Arguments__\n\n* tasks - An object literal containing named functions or an array of\n  requirements, with the function itself the last item in the array. The key\n  used for each function or array is used when specifying requirements. The\n  syntax is easier to understand by looking at the example.\n* callback(err, results) - An optional callback which is called when all the\n  tasks have been completed. The callback will receive an error as an argument\n  if any tasks pass an error to their callback. If all tasks complete\n  successfully, it will receive an object containing their results.\n\n__Example__\n\n    async.auto({\n        get_data: function(callback){\n            // async code to get some data\n        },\n        make_folder: function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        },\n        write_file: [\'get_data\', \'make_folder\', function(callback){\n            // once there is some data and the directory exists,\n            // write the data to a file in the directory\n            callback(null, filename);\n        }],\n        email_link: [\'write_file\', function(callback, results){\n            // once the file is written let\'s email a link to it...\n            // results.write_file contains the filename returned by write_file.\n        }]\n    });\n\nThis is a fairly trivial example, but to do this using the basic parallel and\nseries functions would look like this:\n\n    async.parallel([\n        function(callback){\n            // async code to get some data\n        },\n        function(callback){\n            // async code to create a directory to store a file in\n            // this is run at the same time as getting the data\n        }\n    ],\n    function(results){\n        async.series([\n            function(callback){\n                // once there is some data and the directory exists,\n                // write the data to a file in the directory\n            },\n            email_link: function(callback){\n                // once the file is written let\'s email a link to it...\n            }\n        ]);\n    });\n\nFor a complicated series of async tasks using the auto function makes adding\nnew tasks much easier and makes the code more readable.\n\n\n---------------------------------------\n\n<a name="iterator" />\n### iterator(tasks)\n\nCreates an iterator function which calls the next function in the array,\nreturning a continuation to call the next one after that. Its also possible to\n\'peek\' the next iterator by doing iterator.next().\n\nThis function is used internally by the async module but can be useful when\nyou want to manually control the flow of functions in series.\n\n__Arguments__\n\n* tasks - An array of functions to run, each function is passed a callback it\n  must call on completion.\n\n__Example__\n\n    var iterator = async.iterator([\n        function(){ sys.p(\'one\'); },\n        function(){ sys.p(\'two\'); },\n        function(){ sys.p(\'three\'); }\n    ]);\n\n    node> var iterator2 = iterator();\n    \'one\'\n    node> var iterator3 = iterator2();\n    \'two\'\n    node> iterator3();\n    \'three\'\n    node> var nextfn = iterator2.next();\n    node> nextfn();\n    \'three\'\n\n\n---------------------------------------\n\n<a name="apply" />\n### apply(function, arguments..)\n\nCreates a continuation function with some arguments already applied, a useful\nshorthand when combined with other control flow functions. Any arguments\npassed to the returned function are added to the arguments originally passed\nto apply.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to automatically apply when the\n  continuation is called.\n\n__Example__\n\n    // using apply\n\n    async.parallel([\n        async.apply(fs.writeFile, \'testfile1\', \'test1\'),\n        async.apply(fs.writeFile, \'testfile2\', \'test2\'),\n    ]);\n\n\n    // the same process without using apply\n\n    async.parallel([\n        function(callback){\n            fs.writeFile(\'testfile1\', \'test1\', callback);\n        },\n        function(callback){\n            fs.writeFile(\'testfile2\', \'test2\', callback);\n        },\n    ]);\n\nIt\'s possible to pass any number of additional arguments when calling the\ncontinuation:\n\n    node> var fn = async.apply(sys.puts, \'one\');\n    node> fn(\'two\', \'three\');\n    one\n    two\n    three\n\n---------------------------------------\n\n<a name="nextTick" />\n### nextTick(callback)\n\nCalls the callback on a later loop around the event loop. In node.js this just\ncalls process.nextTick, in the browser it falls back to setTimeout(callback, 0),\nwhich means other higher priority events may precede the execution of the callback.\n\nThis is used internally for browser-compatibility purposes.\n\n__Arguments__\n\n* callback - The function to call on a later loop around the event loop.\n\n__Example__\n\n    var call_order = [];\n    async.nextTick(function(){\n        call_order.push(\'two\');\n        // call_order now equals [\'one\',\'two]\n    });\n    call_order.push(\'one\')\n\n\n## Utils\n\n<a name="memoize" />\n### memoize(fn, [hasher])\n\nCaches the results of an async function. When creating a hash to store function\nresults against, the callback is omitted from the hash and an optional hash\nfunction can be used.\n\n__Arguments__\n\n* fn - the function you to proxy and cache results from.\n* hasher - an optional function for generating a custom hash for storing\n  results, it has all the arguments applied to it apart from the callback, and\n  must be synchronous.\n\n__Example__\n\n    var slow_fn = function (name, callback) {\n        // do something\n        callback(null, result);\n    };\n    var fn = async.memoize(slow_fn);\n\n    // fn can now be used as if it were slow_fn\n    fn(\'some name\', function () {\n        // callback\n    });\n\n<a name="unmemoize" />\n### unmemoize(fn)\n\nUndoes a memoized function, reverting it to the original, unmemoized\nform. Comes handy in tests.\n\n__Arguments__\n\n* fn - the memoized function\n\n<a name="log" />\n### log(function, arguments)\n\nLogs the result of an async function to the console. Only works in node.js or\nin browsers that support console.log and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.log is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, \'hello \' + name);\n        }, 1000);\n    };\n\n    node> async.log(hello, \'world\');\n    \'hello world\'\n\n\n---------------------------------------\n\n<a name="dir" />\n### dir(function, arguments)\n\nLogs the result of an async function to the console using console.dir to\ndisplay the properties of the resulting object. Only works in node.js or\nin browsers that support console.dir and console.error (such as FF and Chrome).\nIf multiple arguments are returned from the async function, console.dir is\ncalled on each argument in order.\n\n__Arguments__\n\n* function - The function you want to eventually apply all arguments to.\n* arguments... - Any number of arguments to apply to the function.\n\n__Example__\n\n    var hello = function(name, callback){\n        setTimeout(function(){\n            callback(null, {hello: name});\n        }, 1000);\n    };\n\n    node> async.dir(hello, \'world\');\n    {hello: \'world\'}\n\n\n---------------------------------------\n\n<a name="noConflict" />\n### noConflict()\n\nChanges the value of async back to its original value, returning a reference to the\nasync object.\n',
1598 silly resolved     readmeFilename: 'README.md',
1598 silly resolved     _id: 'async@0.1.22',
1598 silly resolved     _from: 'async@0.1.x' },
1598 silly resolved   { name: 'colors',
1598 silly resolved     description: 'get colors in your node.js console like what',
1598 silly resolved     version: '0.6.2',
1598 silly resolved     author: { name: 'Marak Squires' },
1598 silly resolved     homepage: 'https://github.com/Marak/colors.js',
1598 silly resolved     bugs: { url: 'https://github.com/Marak/colors.js/issues' },
1598 silly resolved     keywords: [ 'ansi', 'terminal', 'colors' ],
1598 silly resolved     repository: { type: 'git', url: 'http://github.com/Marak/colors.js.git' },
1598 silly resolved     engines: { node: '>=0.1.90' },
1598 silly resolved     main: 'colors',
1598 silly resolved     readme: '# colors.js - get color and style in your node.js console ( and browser ) like what\n\n<img src="http://i.imgur.com/goJdO.png" border = "0"/>\n\n\n## Installation\n\n    npm install colors\n\n## colors and styles!\n\n- bold\n- italic\n- underline\n- inverse\n- yellow\n- cyan\n- white\n- magenta\n- green\n- red\n- grey\n- blue\n- rainbow\n- zebra\n- random\n\n## Usage\n\n``` js\nvar colors = require(\'./colors\');\n\nconsole.log(\'hello\'.green); // outputs green text\nconsole.log(\'i like cake and pies\'.underline.red) // outputs red underlined text\nconsole.log(\'inverse the color\'.inverse); // inverses the color\nconsole.log(\'OMG Rainbows!\'.rainbow); // rainbow (ignores spaces)\n```\n\n# Creating Custom themes\n\n```js\n\nvar colors = require(\'colors\');\n\ncolors.setTheme({\n  silly: \'rainbow\',\n  input: \'grey\',\n  verbose: \'cyan\',\n  prompt: \'grey\',\n  info: \'green\',\n  data: \'grey\',\n  help: \'cyan\',\n  warn: \'yellow\',\n  debug: \'blue\',\n  error: \'red\'\n});\n\n// outputs red text\nconsole.log("this is an error".error);\n\n// outputs yellow text\nconsole.log("this is a warning".warn);\n```\n\n\n### Contributors \n\nMarak (Marak Squires)\nAlexis Sellier (cloudhead)\nmmalecki (Maciej Małecki)\nnicoreed (Nico Reed)\nmorganrallen (Morgan Allen)\nJustinCampbell (Justin Campbell)\nded (Dustin Diaz)\n\n\n####  , Marak Squires , Justin Campbell, Dustin Diaz (@ded)\n',
1598 silly resolved     readmeFilename: 'ReadMe.md',
1598 silly resolved     _id: 'colors@0.6.2',
1598 silly resolved     _from: 'colors@0.x.x' },
1598 silly resolved   { name: 'cycle',
1598 silly resolved     description: 'decycle your json',
1598 silly resolved     author: '',
1598 silly resolved     version: '1.0.3',
1598 silly resolved     main: './cycle.js',
1598 silly resolved     homepage: 'https://github.com/douglascrockford/JSON-js',
1598 silly resolved     repository: { type: 'git', url: 'http://github.com/dscape/cycle.git' },
1598 silly resolved     bugs: { url: 'http://github.com/douglascrockford/JSON-js/issues' },
1598 silly resolved     keywords: [ 'json', 'cycle', 'stringify', 'parse' ],
1598 silly resolved     engines: { node: '>=0.4.0' },
1598 silly resolved     readme: 'Fork of https://github.com/douglascrockford/JSON-js, maintained in npm as `cycle`.\n\n# Contributors\n\n* Douglas Crockford\n* Nuno Job\n* Justin Warkentin\n\n# JSON in JavaScript\n\nDouglas Crockford\ndouglas@crockford.com\n\n2010-11-18\n\n\nJSON is a light-weight, language independent, data interchange format.\nSee http://www.JSON.org/\n\nThe files in this collection implement JSON encoders/decoders in JavaScript.\n\nJSON became a built-in feature of JavaScript when the ECMAScript Programming\nLanguage Standard - Fifth Edition was adopted by the ECMA General Assembly\nin December 2009. Most of the files in this collection are for applications\nthat are expected to run in obsolete web browsers. For most purposes, json2.js\nis the best choice.\n\n\njson2.js: This file creates a JSON property in the global object, if there\nisn\'t already one, setting its value to an object containing a stringify\nmethod and a parse method. The parse method uses the eval method to do the\nparsing, guarding it with several regular expressions to defend against\naccidental code execution hazards. On current browsers, this file does nothing,\nprefering the built-in JSON object.\n\njson.js: This file does everything that json2.js does. It also adds a\ntoJSONString method and a parseJSON method to Object.prototype. Use of this\nfile is not recommended.\n\njson_parse.js: This file contains an alternative JSON parse function that\nuses recursive descent instead of eval.\n\njson_parse_state.js: This files contains an alternative JSON parse function that\nuses a state machine instead of eval.\n\ncycle.js: This file contains two functions, JSON.decycle and JSON.retrocycle,\nwhich make it possible to encode cyclical structures and dags in JSON, and to\nthen recover them. JSONPath is used to represent the links.\nhttp://GOESSNER.net/articles/JsonPath/\n',
1598 silly resolved     readmeFilename: 'README.md',
1598 silly resolved     _id: 'cycle@1.0.3',
1598 silly resolved     _from: 'cycle@1.0.x' } ]
1599 info install eyes@0.1.8 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1600 info install request@2.9.203 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1601 info install pkginfo@0.2.3 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1602 info install stack-trace@0.0.9 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1603 info install async@0.1.22 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1604 info install colors@0.6.2 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1605 info install cycle@1.0.3 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston
1606 info installOne eyes@0.1.8
1607 info installOne request@2.9.203
1608 info installOne pkginfo@0.2.3
1609 info installOne stack-trace@0.0.9
1610 info installOne async@0.1.22
1611 info installOne colors@0.6.2
1612 info installOne cycle@1.0.3
1613 verbose from cache /Users/bmackey/.npm/eyes/0.1.8/package/package.json
1614 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes unbuild
1615 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes/package.json
1616 verbose from cache /Users/bmackey/.npm/request/2.9.203/package/package.json
1617 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/request unbuild
1618 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/request/package.json
1619 verbose from cache /Users/bmackey/.npm/pkginfo/0.2.3/package/package.json
1620 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo unbuild
1621 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo/package.json
1622 verbose from cache /Users/bmackey/.npm/stack-trace/0.0.9/package/package.json
1623 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace unbuild
1624 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace/package.json
1625 verbose from cache /Users/bmackey/.npm/async/0.1.22/package/package.json
1626 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async unbuild
1627 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async/package.json
1628 verbose from cache /Users/bmackey/.npm/colors/0.6.2/package/package.json
1629 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors unbuild
1630 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors/package.json
1631 verbose from cache /Users/bmackey/.npm/cycle/1.0.3/package/package.json
1632 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle unbuild
1633 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle/package.json
1634 verbose read json /Users/bmackey/.npm/wordwrap/0.0.2/package/package.json
1635 verbose tar unpack /Users/bmackey/.npm/eyes/0.1.8/package.tgz
1636 silly lockFile 2832b32a-odules-winston-node-modules-eyes tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes
1637 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes /Users/bmackey/.npm/2832b32a-odules-winston-node-modules-eyes.lock
1638 silly lockFile ebb0f71a-ackey-npm-eyes-0-1-8-package-tgz tar:///Users/bmackey/.npm/eyes/0.1.8/package.tgz
1639 verbose lock tar:///Users/bmackey/.npm/eyes/0.1.8/package.tgz /Users/bmackey/.npm/ebb0f71a-ackey-npm-eyes-0-1-8-package-tgz.lock
1640 verbose tar unpack /Users/bmackey/.npm/request/2.9.203/package.tgz
1641 silly lockFile de2ee0e9-les-winston-node-modules-request tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/request
1642 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/request /Users/bmackey/.npm/de2ee0e9-les-winston-node-modules-request.lock
1643 silly lockFile b0c4bcf8--npm-request-2-9-203-package-tgz tar:///Users/bmackey/.npm/request/2.9.203/package.tgz
1644 verbose lock tar:///Users/bmackey/.npm/request/2.9.203/package.tgz /Users/bmackey/.npm/b0c4bcf8--npm-request-2-9-203-package-tgz.lock
1645 verbose tar unpack /Users/bmackey/.npm/pkginfo/0.2.3/package.tgz
1646 silly lockFile 750222ae-les-winston-node-modules-pkginfo tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo
1647 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo /Users/bmackey/.npm/750222ae-les-winston-node-modules-pkginfo.lock
1648 silly lockFile 86e8a719-ey-npm-pkginfo-0-2-3-package-tgz tar:///Users/bmackey/.npm/pkginfo/0.2.3/package.tgz
1649 verbose lock tar:///Users/bmackey/.npm/pkginfo/0.2.3/package.tgz /Users/bmackey/.npm/86e8a719-ey-npm-pkginfo-0-2-3-package-tgz.lock
1650 verbose tar unpack /Users/bmackey/.npm/stack-trace/0.0.9/package.tgz
1651 silly lockFile d91f7aeb-winston-node-modules-stack-trace tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace
1652 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace /Users/bmackey/.npm/d91f7aeb-winston-node-modules-stack-trace.lock
1653 silly lockFile 832c9b45-pm-stack-trace-0-0-9-package-tgz tar:///Users/bmackey/.npm/stack-trace/0.0.9/package.tgz
1654 verbose lock tar:///Users/bmackey/.npm/stack-trace/0.0.9/package.tgz /Users/bmackey/.npm/832c9b45-pm-stack-trace-0-0-9-package-tgz.lock
1655 verbose tar unpack /Users/bmackey/.npm/async/0.1.22/package.tgz
1656 silly lockFile 78811b7a-dules-winston-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async
1657 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async /Users/bmackey/.npm/78811b7a-dules-winston-node-modules-async.lock
1658 silly lockFile f443e3bd-key-npm-async-0-1-22-package-tgz tar:///Users/bmackey/.npm/async/0.1.22/package.tgz
1659 verbose lock tar:///Users/bmackey/.npm/async/0.1.22/package.tgz /Users/bmackey/.npm/f443e3bd-key-npm-async-0-1-22-package-tgz.lock
1660 verbose tar unpack /Users/bmackey/.npm/colors/0.6.2/package.tgz
1661 silly lockFile cb30e8af-ules-winston-node-modules-colors tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors
1662 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors /Users/bmackey/.npm/cb30e8af-ules-winston-node-modules-colors.lock
1663 silly lockFile 04e0ee82-key-npm-colors-0-6-2-package-tgz tar:///Users/bmackey/.npm/colors/0.6.2/package.tgz
1664 verbose lock tar:///Users/bmackey/.npm/colors/0.6.2/package.tgz /Users/bmackey/.npm/04e0ee82-key-npm-colors-0-6-2-package-tgz.lock
1665 verbose tar unpack /Users/bmackey/.npm/cycle/1.0.3/package.tgz
1666 silly lockFile cca67f12-dules-winston-node-modules-cycle tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle
1667 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle /Users/bmackey/.npm/cca67f12-dules-winston-node-modules-cycle.lock
1668 silly lockFile ba9011f0-ckey-npm-cycle-1-0-3-package-tgz tar:///Users/bmackey/.npm/cycle/1.0.3/package.tgz
1669 verbose lock tar:///Users/bmackey/.npm/cycle/1.0.3/package.tgz /Users/bmackey/.npm/ba9011f0-ckey-npm-cycle-1-0-3-package-tgz.lock
1670 silly gunzTarPerm modes [ '755', '644' ]
1671 silly gunzTarPerm modes [ '755', '644' ]
1672 silly gunzTarPerm modes [ '755', '644' ]
1673 silly gunzTarPerm modes [ '755', '644' ]
1674 silly gunzTarPerm modes [ '755', '644' ]
1675 silly gunzTarPerm modes [ '755', '644' ]
1676 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/.npmignore
1677 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/License
1678 silly gunzTarPerm extractEntry package.json
1679 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1680 silly lockFile 24a694c8-wordwrap-0-0-2 wordwrap@0.0.2
1681 silly gunzTarPerm extractEntry package.json
1682 silly gunzTarPerm extractEntry package.json
1683 silly gunzTarPerm extractEntry package.json
1684 silly gunzTarPerm extractEntry package.json
1685 silly gunzTarPerm extractEntry package.json
1686 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
1687 silly lockFile 8bd42136-wordwrap-0-0-2 wordwrap@~0.0.2
1688 silly gunzTarPerm extractEntry README.md
1689 silly gunzTarPerm extractEntry LICENSE
1690 silly resolved [ { name: 'wordwrap',
1690 silly resolved     description: 'Wrap those words. Show them at what columns to start and stop.',
1690 silly resolved     version: '0.0.2',
1690 silly resolved     repository:
1690 silly resolved      { type: 'git',
1690 silly resolved        url: 'git://github.com/substack/node-wordwrap.git' },
1690 silly resolved     main: './index.js',
1690 silly resolved     keywords: [ 'word', 'wrap', 'rule', 'format', 'column' ],
1690 silly resolved     directories: { lib: '.', example: 'example', test: 'test' },
1690 silly resolved     scripts: { test: 'expresso' },
1690 silly resolved     devDependencies: { expresso: '=0.7.x' },
1690 silly resolved     engines: { node: '>=0.4.0' },
1690 silly resolved     license: 'MIT/X11',
1690 silly resolved     author:
1690 silly resolved      { name: 'James Halliday',
1690 silly resolved        email: 'mail@substack.net',
1690 silly resolved        url: 'http://substack.net' },
1690 silly resolved     readme: 'wordwrap\n========\n\nWrap your words.\n\nexample\n=======\n\nmade out of meat\n----------------\n\nmeat.js\n\n    var wrap = require(\'wordwrap\')(15);\n    console.log(wrap(\'You and your whole family are made out of meat.\'));\n\noutput:\n\n    You and your\n    whole family\n    are made out\n    of meat.\n\ncentered\n--------\n\ncenter.js\n\n    var wrap = require(\'wordwrap\')(20, 60);\n    console.log(wrap(\n        \'At long last the struggle and tumult was over.\'\n        + \' The machines had finally cast off their oppressors\'\n        + \' and were finally free to roam the cosmos.\'\n        + \'\\n\'\n        + \'Free of purpose, free of obligation.\'\n        + \' Just drifting through emptiness.\'\n        + \' The sun was just another point of light.\'\n    ));\n\noutput:\n\n                        At long last the struggle and tumult\n                        was over. The machines had finally cast\n                        off their oppressors and were finally\n                        free to roam the cosmos.\n                        Free of purpose, free of obligation.\n                        Just drifting through emptiness. The\n                        sun was just another point of light.\n\nmethods\n=======\n\nvar wrap = require(\'wordwrap\');\n\nwrap(stop), wrap(start, stop, params={mode:"soft"})\n---------------------------------------------------\n\nReturns a function that takes a string and returns a new string.\n\nPad out lines with spaces out to column `start` and then wrap until column\n`stop`. If a word is longer than `stop - start` characters it will overflow.\n\nIn "soft" mode, split chunks by `/(\\S+\\s+/` and don\'t break up chunks which are\nlonger than `stop - start`, in "hard" mode, split chunks with `/\\b/` and break\nup chunks longer than `stop - start`.\n\nwrap.hard(start, stop)\n----------------------\n\nLike `wrap()` but with `params.mode = "hard"`.\n',
1690 silly resolved     readmeFilename: 'README.markdown',
1690 silly resolved     bugs: { url: 'https://github.com/substack/node-wordwrap/issues' },
1690 silly resolved     _id: 'wordwrap@0.0.2',
1690 silly resolved     _from: 'wordwrap@~0.0.2' } ]
1691 info install wordwrap@0.0.2 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist
1692 info installOne wordwrap@0.0.2
1693 silly gunzTarPerm extractEntry .npmignore
1694 silly gunzTarPerm extractEntry README.md
1695 silly gunzTarPerm extractEntry .npmignore
1696 silly gunzTarPerm extractEntry License
1697 silly gunzTarPerm extractEntry .npmignore
1698 silly gunzTarPerm extractEntry README.md
1699 silly gunzTarPerm extractEntry colors.js
1700 silly gunzTarPerm extractEntry example.js
1701 silly gunzTarPerm extractEntry README.md
1702 silly gunzTarPerm extractEntry cycle.js
1703 verbose from cache /Users/bmackey/.npm/wordwrap/0.0.2/package/package.json
1704 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap unbuild
1705 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap/package.json
1706 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis/package.json
1707 verbose tar unpack /Users/bmackey/.npm/wordwrap/0.0.2/package.tgz
1708 silly lockFile c07cc7d0-s-optimist-node-modules-wordwrap tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap
1709 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap /Users/bmackey/.npm/c07cc7d0-s-optimist-node-modules-wordwrap.lock
1710 silly lockFile bd8660c2-y-npm-wordwrap-0-0-2-package-tgz tar:///Users/bmackey/.npm/wordwrap/0.0.2/package.tgz
1711 verbose lock tar:///Users/bmackey/.npm/wordwrap/0.0.2/package.tgz /Users/bmackey/.npm/bd8660c2-y-npm-wordwrap-0-0-2-package-tgz.lock
1712 silly gunzTarPerm modes [ '755', '644' ]
1713 silly gunzTarPerm extractEntry Makefile
1714 silly gunzTarPerm extractEntry lib/eyes.js
1715 silly gunzTarPerm extractEntry docs/docco.css
1716 silly gunzTarPerm extractEntry docs/pkginfo.html
1717 silly gunzTarPerm extractEntry test.js
1718 silly gunzTarPerm extractEntry MIT-LICENSE.txt
1719 silly gunzTarPerm extractEntry ReadMe.md
1720 silly gunzTarPerm extractEntry example.html
1721 silly gunzTarPerm extractEntry themes/winston-dark.js
1722 silly gunzTarPerm extractEntry themes/winston-light.js
1723 silly gunzTarPerm extractEntry Makefile
1724 silly gunzTarPerm extractEntry Readme.md
1725 silly gunzTarPerm extractEntry LICENSE
1726 silly gunzTarPerm extractEntry test/lang/bg.js
1727 silly gunzTarPerm extractEntry test/lang/zh-cn.js
1728 silly gunzTarPerm extractEntry package.json
1729 silly lockFile 3cfc7fba-es-fh-nodeapp-node-modules-redis tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis
1730 silly lockFile 3cfc7fba-es-fh-nodeapp-node-modules-redis tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis
1731 silly lockFile 48bff734-ckey-npm-redis-0-8-2-package-tgz tar:///Users/bmackey/.npm/redis/0.8.2/package.tgz
1732 silly lockFile 48bff734-ckey-npm-redis-0-8-2-package-tgz tar:///Users/bmackey/.npm/redis/0.8.2/package.tgz
1733 silly gunzTarPerm extractEntry .npmignore
1734 silly gunzTarPerm extractEntry index.js
1735 silly gunzTarPerm extractEntry examples/package.json
1736 silly gunzTarPerm extractEntry index.js
1737 silly gunzTarPerm extractEntry .gitmodules
1738 silly gunzTarPerm extractEntry lib/stack-trace.js
1739 info preinstall redis@0.8.2
1740 silly gunzTarPerm extractEntry test/eyes-test.js
1741 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis/package.json
1742 verbose readDependencies using package.json deps
1743 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis/package.json
1744 verbose readDependencies using package.json deps
1745 silly resolved []
1746 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis
1747 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis
1748 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/redis/package.json
1749 verbose linkStuff [ false,
1749 verbose linkStuff   false,
1749 verbose linkStuff   false,
1749 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules' ]
1750 info linkStuff redis@0.8.2
1751 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1752 verbose linkBins redis@0.8.2
1753 verbose linkMans redis@0.8.2
1754 verbose rebuildBundles redis@0.8.2
1755 silly gunzTarPerm extractEntry README.markdown
1756 silly gunzTarPerm extractEntry example/center.js
1757 info install redis@0.8.2
1758 info postinstall redis@0.8.2
1759 silly gunzTarPerm extractEntry examples/all-properties.js
1760 silly gunzTarPerm extractEntry examples/array-argument.js
1761 silly gunzTarPerm extractEntry example/meat.js
1762 silly gunzTarPerm extractEntry test/break.js
1763 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle/package.json
1764 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/Makefile
1765 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/Readme.md
1766 silly gunzTarPerm extractEntry test/wrap.js
1767 silly gunzTarPerm extractEntry test/idleness.txt
1768 silly lockFile cca67f12-dules-winston-node-modules-cycle tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle
1769 silly lockFile cca67f12-dules-winston-node-modules-cycle tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle
1770 silly lockFile ba9011f0-ckey-npm-cycle-1-0-3-package-tgz tar:///Users/bmackey/.npm/cycle/1.0.3/package.tgz
1771 silly lockFile ba9011f0-ckey-npm-cycle-1-0-3-package-tgz tar:///Users/bmackey/.npm/cycle/1.0.3/package.tgz
1772 silly gunzTarPerm extractEntry examples/multiple-properties.js
1773 silly gunzTarPerm extractEntry examples/object-argument.js
1774 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/lib/delayed_stream.js
1775 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/common.js
1776 info preinstall cycle@1.0.3
1777 silly gunzTarPerm extractEntry test/lang/ar.js
1778 silly gunzTarPerm extractEntry test/lang/zh-tw.js
1779 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle/package.json
1780 verbose readDependencies using package.json deps
1781 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle/package.json
1782 verbose readDependencies using package.json deps
1783 silly resolved []
1784 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle
1785 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle
1786 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/cycle/package.json
1787 verbose linkStuff [ false,
1787 verbose linkStuff   false,
1787 verbose linkStuff   false,
1787 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules' ]
1788 info linkStuff cycle@1.0.3
1789 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1790 verbose linkBins cycle@1.0.3
1791 verbose linkMans cycle@1.0.3
1792 verbose rebuildBundles cycle@1.0.3
1793 info install cycle@1.0.3
1794 info postinstall cycle@1.0.3
1795 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace/package.json
1796 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/run.js
1797 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-http-upload.js
1798 silly lockFile d91f7aeb-winston-node-modules-stack-trace tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace
1799 silly lockFile d91f7aeb-winston-node-modules-stack-trace tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace
1800 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes/package.json
1801 silly lockFile 832c9b45-pm-stack-trace-0-0-9-package-tgz tar:///Users/bmackey/.npm/stack-trace/0.0.9/package.tgz
1802 silly lockFile 832c9b45-pm-stack-trace-0-0-9-package-tgz tar:///Users/bmackey/.npm/stack-trace/0.0.9/package.tgz
1803 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-stream-auto-pause.js
1804 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-stream-pause.js
1805 info preinstall stack-trace@0.0.9
1806 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace/package.json
1807 verbose readDependencies using package.json deps
1808 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace/package.json
1809 silly lockFile 2832b32a-odules-winston-node-modules-eyes tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes
1810 silly lockFile 2832b32a-odules-winston-node-modules-eyes tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes
1811 verbose readDependencies using package.json deps
1812 silly resolved []
1813 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace
1814 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace
1815 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/stack-trace/package.json
1816 verbose linkStuff [ false,
1816 verbose linkStuff   false,
1816 verbose linkStuff   false,
1816 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules' ]
1817 info linkStuff stack-trace@0.0.9
1818 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1819 verbose linkBins stack-trace@0.0.9
1820 verbose linkMans stack-trace@0.0.9
1821 verbose rebuildBundles stack-trace@0.0.9
1822 info install stack-trace@0.0.9
1823 silly lockFile ebb0f71a-ackey-npm-eyes-0-1-8-package-tgz tar:///Users/bmackey/.npm/eyes/0.1.8/package.tgz
1824 silly lockFile ebb0f71a-ackey-npm-eyes-0-1-8-package-tgz tar:///Users/bmackey/.npm/eyes/0.1.8/package.tgz
1825 silly gunzTarPerm extractEntry Makefile
1826 silly gunzTarPerm extractEntry lib/async.js
1827 info postinstall stack-trace@0.0.9
1828 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-delayed-stream.js
1829 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-handle-source-errors.js
1830 silly gunzTarPerm extractEntry examples/single-property.js
1831 silly gunzTarPerm extractEntry lib/pkginfo.js
1832 info preinstall eyes@0.1.8
1833 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes/package.json
1834 verbose readDependencies using package.json deps
1835 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes/package.json
1836 verbose readDependencies using package.json deps
1837 silly resolved []
1838 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes
1839 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes
1840 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/eyes/package.json
1841 verbose linkStuff [ false,
1841 verbose linkStuff   false,
1841 verbose linkStuff   false,
1841 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules' ]
1842 info linkStuff eyes@0.1.8
1843 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1844 verbose linkBins eyes@0.1.8
1845 verbose linkMans eyes@0.1.8
1846 verbose rebuildBundles eyes@0.1.8
1847 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-max-data-size.js
1848 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-pipe-resumes.js
1849 info install eyes@0.1.8
1850 info postinstall eyes@0.1.8
1851 silly gunzTarPerm extractEntry test/lang/is.js
1852 silly gunzTarPerm extractEntry test/moment/add_subtract.js
1853 silly gunzTarPerm extractEntry test/pkginfo-test.js
1854 silly gunzTarPerm extractEntry node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-proxy-readable.js
1855 silly gunzTarPerm extractEntry node_modules/mime/package.json
1856 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors/package.json
1857 silly lockFile cb30e8af-ules-winston-node-modules-colors tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors
1858 silly lockFile cb30e8af-ules-winston-node-modules-colors tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors
1859 silly lockFile 04e0ee82-key-npm-colors-0-6-2-package-tgz tar:///Users/bmackey/.npm/colors/0.6.2/package.tgz
1860 silly lockFile 04e0ee82-key-npm-colors-0-6-2-package-tgz tar:///Users/bmackey/.npm/colors/0.6.2/package.tgz
1861 info preinstall colors@0.6.2
1862 silly gunzTarPerm extractEntry node_modules/mime/README.md
1863 silly gunzTarPerm extractEntry node_modules/mime/LICENSE
1864 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors/package.json
1865 verbose readDependencies using package.json deps
1866 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors/package.json
1867 verbose readDependencies using package.json deps
1868 silly resolved []
1869 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors
1870 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors
1871 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/colors/package.json
1872 verbose linkStuff [ false,
1872 verbose linkStuff   false,
1872 verbose linkStuff   false,
1872 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules' ]
1873 info linkStuff colors@0.6.2
1874 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1875 verbose linkBins colors@0.6.2
1876 verbose linkMans colors@0.6.2
1877 verbose rebuildBundles colors@0.6.2
1878 info install colors@0.6.2
1879 info postinstall colors@0.6.2
1880 silly gunzTarPerm extractEntry node_modules/mime/mime.js
1881 silly gunzTarPerm extractEntry node_modules/mime/test.js
1882 silly gunzTarPerm extractEntry test/moment/getters_setters.js
1883 silly gunzTarPerm extractEntry test/moment/is_after.js
1884 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap/package.json
1885 silly gunzTarPerm extractEntry node_modules/mime/types/mime.types
1886 silly gunzTarPerm extractEntry node_modules/mime/types/node.types
1887 silly lockFile c07cc7d0-s-optimist-node-modules-wordwrap tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap
1888 silly lockFile c07cc7d0-s-optimist-node-modules-wordwrap tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap
1889 silly lockFile bd8660c2-y-npm-wordwrap-0-0-2-package-tgz tar:///Users/bmackey/.npm/wordwrap/0.0.2/package.tgz
1890 silly lockFile bd8660c2-y-npm-wordwrap-0-0-2-package-tgz tar:///Users/bmackey/.npm/wordwrap/0.0.2/package.tgz
1891 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo/package.json
1892 info preinstall wordwrap@0.0.2
1893 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap/package.json
1894 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async/package.json
1895 verbose readDependencies using package.json deps
1896 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap/package.json
1897 verbose readDependencies using package.json deps
1898 silly resolved []
1899 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap
1900 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap
1901 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules/wordwrap/package.json
1902 verbose linkStuff [ false,
1902 verbose linkStuff   false,
1902 verbose linkStuff   false,
1902 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/node_modules' ]
1903 info linkStuff wordwrap@0.0.2
1904 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1905 verbose linkBins wordwrap@0.0.2
1906 verbose linkMans wordwrap@0.0.2
1907 verbose rebuildBundles wordwrap@0.0.2
1908 info install wordwrap@0.0.2
1909 silly lockFile 750222ae-les-winston-node-modules-pkginfo tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo
1910 silly lockFile 750222ae-les-winston-node-modules-pkginfo tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo
1911 info postinstall wordwrap@0.0.2
1912 silly lockFile 86e8a719-ey-npm-pkginfo-0-2-3-package-tgz tar:///Users/bmackey/.npm/pkginfo/0.2.3/package.tgz
1913 silly lockFile 86e8a719-ey-npm-pkginfo-0-2-3-package-tgz tar:///Users/bmackey/.npm/pkginfo/0.2.3/package.tgz
1914 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist
1915 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist
1916 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules/optimist/package.json
1917 verbose linkStuff [ false,
1917 verbose linkStuff   false,
1917 verbose linkStuff   false,
1917 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/node_modules' ]
1918 info linkStuff optimist@0.3.7
1919 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1920 verbose linkBins optimist@0.3.7
1921 verbose linkMans optimist@0.3.7
1922 verbose rebuildBundles optimist@0.3.7
1923 verbose rebuildBundles [ 'wordwrap' ]
1924 info install optimist@0.3.7
1925 silly gunzTarPerm extractEntry test/moment/is_before.js
1926 silly gunzTarPerm extractEntry test/moment/format.js
1927 info postinstall optimist@0.3.7
1928 silly lockFile 78811b7a-dules-winston-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async
1929 silly lockFile 78811b7a-dules-winston-node-modules-async tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async
1930 info preinstall pkginfo@0.2.3
1931 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
1932 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc
1933 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/rc/package.json
1934 verbose linkStuff [ false,
1934 verbose linkStuff   false,
1934 verbose linkStuff   false,
1934 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules' ]
1935 info linkStuff rc@0.1.1
1936 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1937 verbose linkBins rc@0.1.1
1938 verbose link bins [ { rc: './index.js' },
1938 verbose link bins   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-amqp-js/node_modules/.bin',
1938 verbose link bins   false ]
1939 verbose linkMans rc@0.1.1
1940 verbose rebuildBundles rc@0.1.1
1941 silly lockFile f443e3bd-key-npm-async-0-1-22-package-tgz tar:///Users/bmackey/.npm/async/0.1.22/package.tgz
1942 silly lockFile f443e3bd-key-npm-async-0-1-22-package-tgz tar:///Users/bmackey/.npm/async/0.1.22/package.tgz
1943 verbose rebuildBundles [ 'deep-extend', 'ini', 'optimist' ]
1944 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo/package.json
1945 verbose readDependencies using package.json deps
1946 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo/package.json
1947 verbose readDependencies using package.json deps
1948 silly resolved []
1949 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo
1950 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo
1951 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/pkginfo/package.json
1952 verbose linkStuff [ false,
1952 verbose linkStuff   false,
1952 verbose linkStuff   false,
1952 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules' ]
1953 info linkStuff pkginfo@0.2.3
1954 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1955 verbose linkBins pkginfo@0.2.3
1956 verbose linkMans pkginfo@0.2.3
1957 verbose rebuildBundles pkginfo@0.2.3
1958 info install pkginfo@0.2.3
1959 info preinstall async@0.1.22
1960 info install rc@0.1.1
1961 info postinstall pkginfo@0.2.3
1962 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async/package.json
1963 info postinstall rc@0.1.1
1964 verbose readDependencies using package.json deps
1965 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async/package.json
1966 verbose readDependencies using package.json deps
1967 silly resolved []
1968 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async
1969 info build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async
1970 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules/async/package.json
1971 verbose linkStuff [ false,
1971 verbose linkStuff   false,
1971 verbose linkStuff   false,
1971 verbose linkStuff   '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/winston/node_modules' ]
1972 info linkStuff async@0.1.22
1973 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/package.json
1974 verbose linkBins async@0.1.22
1975 verbose linkMans async@0.1.22
1976 verbose rebuildBundles async@0.1.22
1977 info install async@0.1.22
1978 info postinstall async@0.1.22
1979 silly gunzTarPerm extractEntry test/moment/is_same.js
1980 silly gunzTarPerm extractEntry test/moment/is_valid.js
1981 silly gunzTarPerm extractEntry test/moment/lang.js
1982 silly gunzTarPerm extractEntry test/moment/leapyear.js
1983 silly gunzTarPerm extractEntry test/moment/mutable.js
1984 silly gunzTarPerm extractEntry test/moment/duration.js
1985 silly gunzTarPerm extractEntry test/moment/preparse_postformat.js
1986 silly gunzTarPerm extractEntry test/moment/diff.js
1987 silly gunzTarPerm extractEntry test/moment/sod_eod.js
1988 silly gunzTarPerm extractEntry test/moment/days_in_month.js
1989 silly gunzTarPerm extractEntry test/moment/utc.js
1990 silly gunzTarPerm extractEntry test/moment/create.js
1991 silly gunzTarPerm extractEntry test/moment/weeks.js
1992 silly gunzTarPerm extractEntry test/moment/is_moment.js
1993 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/package.json
1994 silly lockFile 6ba771ee--nodeapp-node-modules-fh-connect tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
1995 silly lockFile 6ba771ee--nodeapp-node-modules-fh-connect tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
1996 silly lockFile 82617ff2-npm-fh-connect-1-8-6-package-tgz tar:///Users/bmackey/.npm/fh-connect/1.8.6/package.tgz
1997 silly lockFile 82617ff2-npm-fh-connect-1-8-6-package-tgz tar:///Users/bmackey/.npm/fh-connect/1.8.6/package.tgz
1998 info preinstall fh-connect@1.8.6
1999 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/package.json
2000 verbose readDependencies using package.json deps
2001 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/package.json
2002 verbose readDependencies using package.json deps
2003 silly gunzTarPerm extractEntry lang/ar-ma.js
2004 silly gunzTarPerm extractEntry lang/he.js
2005 verbose cache add [ 'qs@>= 0.4.0', null ]
2006 verbose cache add name=undefined spec="qs@>= 0.4.0" args=["qs@>= 0.4.0",null]
2007 verbose parsed url { protocol: null,
2007 verbose parsed url   slashes: null,
2007 verbose parsed url   auth: null,
2007 verbose parsed url   host: null,
2007 verbose parsed url   port: null,
2007 verbose parsed url   hostname: null,
2007 verbose parsed url   hash: null,
2007 verbose parsed url   search: null,
2007 verbose parsed url   query: null,
2007 verbose parsed url   pathname: 'qs@%3E=%200.4.0',
2007 verbose parsed url   path: 'qs@%3E=%200.4.0',
2007 verbose parsed url   href: 'qs@%3E=%200.4.0' }
2008 verbose cache add name="qs" spec=">= 0.4.0" args=["qs",">= 0.4.0"]
2009 verbose parsed url { protocol: null,
2009 verbose parsed url   slashes: null,
2009 verbose parsed url   auth: null,
2009 verbose parsed url   host: null,
2009 verbose parsed url   port: null,
2009 verbose parsed url   hostname: null,
2009 verbose parsed url   hash: null,
2009 verbose parsed url   search: null,
2009 verbose parsed url   query: null,
2009 verbose parsed url   pathname: '%3E=%200.4.0',
2009 verbose parsed url   path: '%3E=%200.4.0',
2009 verbose parsed url   href: '%3E=%200.4.0' }
2010 verbose addNamed [ 'qs', '>= 0.4.0' ]
2011 verbose addNamed [ null, '>=0.4.0' ]
2012 silly lockFile d8ffb163-qs-0-4-0 qs@>= 0.4.0
2013 verbose lock qs@>= 0.4.0 /Users/bmackey/.npm/d8ffb163-qs-0-4-0.lock
2014 verbose cache add [ 'mime@>= 0.0.1', null ]
2015 verbose cache add name=undefined spec="mime@>= 0.0.1" args=["mime@>= 0.0.1",null]
2016 verbose parsed url { protocol: null,
2016 verbose parsed url   slashes: null,
2016 verbose parsed url   auth: null,
2016 verbose parsed url   host: null,
2016 verbose parsed url   port: null,
2016 verbose parsed url   hostname: null,
2016 verbose parsed url   hash: null,
2016 verbose parsed url   search: null,
2016 verbose parsed url   query: null,
2016 verbose parsed url   pathname: 'mime@%3E=%200.0.1',
2016 verbose parsed url   path: 'mime@%3E=%200.0.1',
2016 verbose parsed url   href: 'mime@%3E=%200.0.1' }
2017 verbose cache add name="mime" spec=">= 0.0.1" args=["mime",">= 0.0.1"]
2018 verbose parsed url { protocol: null,
2018 verbose parsed url   slashes: null,
2018 verbose parsed url   auth: null,
2018 verbose parsed url   host: null,
2018 verbose parsed url   port: null,
2018 verbose parsed url   hostname: null,
2018 verbose parsed url   hash: null,
2018 verbose parsed url   search: null,
2018 verbose parsed url   query: null,
2018 verbose parsed url   pathname: '%3E=%200.0.1',
2018 verbose parsed url   path: '%3E=%200.0.1',
2018 verbose parsed url   href: '%3E=%200.0.1' }
2019 verbose addNamed [ 'mime', '>= 0.0.1' ]
2020 verbose addNamed [ null, '>=0.0.1' ]
2021 silly lockFile c812b446-mime-0-0-1 mime@>= 0.0.1
2022 verbose lock mime@>= 0.0.1 /Users/bmackey/.npm/c812b446-mime-0-0-1.lock
2023 silly addNameRange { name: 'qs', range: '>=0.4.0', hasData: false }
2024 verbose cache add [ 'formidable@1.0.11', null ]
2025 verbose cache add name=undefined spec="formidable@1.0.11" args=["formidable@1.0.11",null]
2026 verbose parsed url { protocol: null,
2026 verbose parsed url   slashes: null,
2026 verbose parsed url   auth: null,
2026 verbose parsed url   host: null,
2026 verbose parsed url   port: null,
2026 verbose parsed url   hostname: null,
2026 verbose parsed url   hash: null,
2026 verbose parsed url   search: null,
2026 verbose parsed url   query: null,
2026 verbose parsed url   pathname: 'formidable@1.0.11',
2026 verbose parsed url   path: 'formidable@1.0.11',
2026 verbose parsed url   href: 'formidable@1.0.11' }
2027 verbose cache add name="formidable" spec="1.0.11" args=["formidable","1.0.11"]
2028 verbose parsed url { protocol: null,
2028 verbose parsed url   slashes: null,
2028 verbose parsed url   auth: null,
2028 verbose parsed url   host: null,
2028 verbose parsed url   port: null,
2028 verbose parsed url   hostname: null,
2028 verbose parsed url   hash: null,
2028 verbose parsed url   search: null,
2028 verbose parsed url   query: null,
2028 verbose parsed url   pathname: '1.0.11',
2028 verbose parsed url   path: '1.0.11',
2028 verbose parsed url   href: '1.0.11' }
2029 verbose addNamed [ 'formidable', '1.0.11' ]
2030 verbose addNamed [ '1.0.11', '1.0.11' ]
2031 silly lockFile 85cafced-formidable-1-0-11 formidable@1.0.11
2032 verbose lock formidable@1.0.11 /Users/bmackey/.npm/85cafced-formidable-1-0-11.lock
2033 silly addNameRange { name: 'mime', range: '>=0.0.1', hasData: false }
2034 verbose registry.get qs not expired, no request
2035 silly addNameRange number 2 { name: 'qs', range: '>=0.4.0', hasData: true }
2036 silly addNameRange versions [ 'qs',
2036 silly addNameRange   [ '0.0.1',
2036 silly addNameRange     '0.0.2',
2036 silly addNameRange     '0.0.3',
2036 silly addNameRange     '0.0.4',
2036 silly addNameRange     '0.0.5',
2036 silly addNameRange     '0.0.6',
2036 silly addNameRange     '0.0.7',
2036 silly addNameRange     '0.1.0',
2036 silly addNameRange     '0.2.0',
2036 silly addNameRange     '0.3.0',
2036 silly addNameRange     '0.3.1',
2036 silly addNameRange     '0.3.2',
2036 silly addNameRange     '0.4.0',
2036 silly addNameRange     '0.4.1',
2036 silly addNameRange     '0.4.2',
2036 silly addNameRange     '0.5.0',
2036 silly addNameRange     '0.5.1',
2036 silly addNameRange     '0.5.2',
2036 silly addNameRange     '0.5.3',
2036 silly addNameRange     '0.5.4',
2036 silly addNameRange     '0.5.5',
2036 silly addNameRange     '0.5.6',
2036 silly addNameRange     '0.6.0',
2036 silly addNameRange     '0.6.1',
2036 silly addNameRange     '0.6.2',
2036 silly addNameRange     '0.6.3',
2036 silly addNameRange     '0.6.4',
2036 silly addNameRange     '0.6.5',
2036 silly addNameRange     '0.6.6' ] ]
2037 verbose addNamed [ 'qs', '0.6.6' ]
2038 verbose addNamed [ '0.6.6', '0.6.6' ]
2039 silly lockFile b8bccda2-qs-0-6-6 qs@0.6.6
2040 verbose lock qs@0.6.6 /Users/bmackey/.npm/b8bccda2-qs-0-6-6.lock
2041 verbose registry.get mime not expired, no request
2042 silly addNameRange number 2 { name: 'mime', range: '>=0.0.1', hasData: true }
2043 silly addNameRange versions [ 'mime',
2043 silly addNameRange   [ '1.0.0',
2043 silly addNameRange     '1.1.0',
2043 silly addNameRange     '1.2.1',
2043 silly addNameRange     '1.2.2',
2043 silly addNameRange     '1.2.3',
2043 silly addNameRange     '1.2.4',
2043 silly addNameRange     '1.2.5',
2043 silly addNameRange     '1.2.6',
2043 silly addNameRange     '1.2.7',
2043 silly addNameRange     '1.2.8',
2043 silly addNameRange     '1.2.9',
2043 silly addNameRange     '1.2.10',
2043 silly addNameRange     '1.2.11' ] ]
2044 verbose addNamed [ 'mime', '1.2.11' ]
2045 verbose addNamed [ '1.2.11', '1.2.11' ]
2046 silly lockFile c4b0741f-mime-1-2-11 mime@1.2.11
2047 verbose lock mime@1.2.11 /Users/bmackey/.npm/c4b0741f-mime-1-2-11.lock
2048 verbose registry.get formidable/1.0.11 not expired, no request
2049 verbose read json /Users/bmackey/.npm/formidable/1.0.11/package/package.json
2050 verbose read json /Users/bmackey/.npm/qs/0.6.6/package/package.json
2051 verbose read json /Users/bmackey/.npm/mime/1.2.11/package/package.json
2052 warn package.json formidable@1.0.11 No repository field.
2053 silly lockFile 85cafced-formidable-1-0-11 formidable@1.0.11
2054 silly lockFile 85cafced-formidable-1-0-11 formidable@1.0.11
2055 silly lockFile b8bccda2-qs-0-6-6 qs@0.6.6
2056 silly lockFile b8bccda2-qs-0-6-6 qs@0.6.6
2057 silly lockFile c4b0741f-mime-1-2-11 mime@1.2.11
2058 silly lockFile c4b0741f-mime-1-2-11 mime@1.2.11
2059 silly lockFile d8ffb163-qs-0-4-0 qs@>= 0.4.0
2060 silly lockFile d8ffb163-qs-0-4-0 qs@>= 0.4.0
2061 silly lockFile c812b446-mime-0-0-1 mime@>= 0.0.1
2062 silly lockFile c812b446-mime-0-0-1 mime@>= 0.0.1
2063 silly resolved [ { name: 'formidable',
2063 silly resolved     version: '1.0.11',
2063 silly resolved     dependencies: {},
2063 silly resolved     devDependencies:
2063 silly resolved      { gently: '0.8.0',
2063 silly resolved        findit: '0.1.1',
2063 silly resolved        hashish: '0.0.4',
2063 silly resolved        urun: '0.0.4',
2063 silly resolved        utest: '0.0.3' },
2063 silly resolved     directories: { lib: './lib' },
2063 silly resolved     main: './lib/index',
2063 silly resolved     scripts: { test: 'make test' },
2063 silly resolved     engines: { node: '*' },
2063 silly resolved     optionalDependencies: {},
2063 silly resolved     readme: '# Formidable\n\n[![Build Status](https://secure.travis-ci.org/felixge/node-formidable.png?branch=master)](http://travis-ci.org/felixge/node-formidable)\n\n## Purpose\n\nA node.js module for parsing form data, especially file uploads.\n\n## Current status\n\nThis module was developed for [Transloadit](http://transloadit.com/), a service focused on uploading\nand encoding images and videos. It has been battle-tested against hundreds of GB of file uploads from\na large variety of clients and is considered production-ready.\n\n## Features\n\n* Fast (~500mb/sec), non-buffering multipart parser\n* Automatically writing file uploads to disk\n* Low memory footprint\n* Graceful error handling\n* Very high test coverage\n\n## Changelog\n\n### v1.0.9\n\n* Emit progress when content length header parsed (Tim Koschützki)\n* Fix Readme syntax due to GitHub changes (goob)\n* Replace references to old \'sys\' module in Readme with \'util\' (Peter Sugihara)\n\n### v1.0.8\n\n* Strip potentially unsafe characters when using `keepExtensions: true`.\n* Switch to utest / urun for testing\n* Add travis build\n\n### v1.0.7\n\n* Remove file from package that was causing problems when installing on windows. (#102)\n* Fix typos in Readme (Jason Davies).\n\n### v1.0.6\n\n* Do not default to the default to the field name for file uploads where\n  filename="".\n\n### v1.0.5\n\n* Support filename="" in multipart parts\n* Explain unexpected end() errors in parser better\n\n**Note:** Starting with this version, formidable emits \'file\' events for empty\nfile input fields. Previously those were incorrectly emitted as regular file\ninput fields with value = "".\n\n### v1.0.4\n\n* Detect a good default tmp directory regardless of platform. (#88)\n\n### v1.0.3\n\n* Fix problems with utf8 characters (#84) / semicolons in filenames (#58)\n* Small performance improvements\n* New test suite and fixture system\n\n### v1.0.2\n\n* Exclude node\\_modules folder from git\n* Implement new `\'aborted\'` event\n* Fix files in example folder to work with recent node versions\n* Make gently a devDependency\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v1.0.1...v1.0.2)\n\n### v1.0.1\n\n* Fix package.json to refer to proper main directory. (#68, Dean Landolt)\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v1.0.0...v1.0.1)\n\n### v1.0.0\n\n* Add support for multipart boundaries that are quoted strings. (Jeff Craig)\n\nThis marks the beginning of development on version 2.0 which will include\nseveral architectural improvements.\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v0.9.11...v1.0.0)\n\n### v0.9.11\n\n* Emit `\'progress\'` event when receiving data, regardless of parsing it. (Tim Koschützki)\n* Use [W3C FileAPI Draft](http://dev.w3.org/2006/webapi/FileAPI/) properties for File class\n\n**Important:** The old property names of the File class will be removed in a\nfuture release.\n\n[See Commits](https://github.com/felixge/node-formidable/compare/v0.9.10...v0.9.11)\n\n### Older releases\n\nThese releases were done before starting to maintain the above Changelog:\n\n* [v0.9.10](https://github.com/felixge/node-formidable/compare/v0.9.9...v0.9.10)\n* [v0.9.9](https://github.com/felixge/node-formidable/compare/v0.9.8...v0.9.9)\n* [v0.9.8](https://github.com/felixge/node-formidable/compare/v0.9.7...v0.9.8)\n* [v0.9.7](https://github.com/felixge/node-formidable/compare/v0.9.6...v0.9.7)\n* [v0.9.6](https://github.com/felixge/node-formidable/compare/v0.9.5...v0.9.6)\n* [v0.9.5](https://github.com/felixge/node-formidable/compare/v0.9.4...v0.9.5)\n* [v0.9.4](https://github.com/felixge/node-formidable/compare/v0.9.3...v0.9.4)\n* [v0.9.3](https://github.com/felixge/node-formidable/compare/v0.9.2...v0.9.3)\n* [v0.9.2](https://github.com/felixge/node-formidable/compare/v0.9.1...v0.9.2)\n* [v0.9.1](https://github.com/felixge/node-formidable/compare/v0.9.0...v0.9.1)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.9.0](https://github.com/felixge/node-formidable/compare/v0.8.0...v0.9.0)\n* [v0.1.0](https://github.com/felixge/node-formidable/commits/v0.1.0)\n\n## Installation\n\nVia [npm](http://github.com/isaacs/npm):\n\n    npm install formidable@latest\n\nManually:\n\n    git clone git://github.com/felixge/node-formidable.git formidable\n    vim my.js\n    # var formidable = require(\'./formidable\');\n\nNote: Formidable requires [gently](http://github.com/felixge/node-gently) to run the unit tests, but you won\'t need it for just using the library.\n\n## Example\n\nParse an incoming file upload.\n\n    var formidable = require(\'formidable\'),\n        http = require(\'http\'),\n\n        util = require(\'util\');\n\n    http.createServer(function(req, res) {\n      if (req.url == \'/upload\' && req.method.toLowerCase() == \'post\') {\n        // parse a file upload\n        var form = new formidable.IncomingForm();\n        form.parse(req, function(err, fields, files) {\n          res.writeHead(200, {\'content-type\': \'text/plain\'});\n          res.write(\'received upload:\\n\\n\');\n          res.end(util.inspect({fields: fields, files: files}));\n        });\n        return;\n      }\n\n      // show a file upload form\n      res.writeHead(200, {\'content-type\': \'text/html\'});\n      res.end(\n        \'<form action="/upload" enctype="multipart/form-data" method="post">\'+\n        \'<input type="text" name="title"><br>\'+\n        \'<input type="file" name="upload" multiple="multiple"><br>\'+\n        \'<input type="submit" value="Upload">\'+\n        \'</form>\'\n      );\n    }).listen(80);\n\n## API\n\n### formidable.IncomingForm\n\n__new formidable.IncomingForm()__\n\nCreates a new incoming form.\n\n__incomingForm.encoding = \'utf-8\'__\n\nThe encoding to use for incoming form fields.\n\n__incomingForm.uploadDir = process.env.TMP || \'/tmp\' || process.cwd()__\n\nThe directory for placing file uploads in. You can move them later on using\n`fs.rename()`. The default directory is picked at module load time depending on\nthe first existing directory from those listed above.\n\n__incomingForm.keepExtensions = false__\n\nIf you want the files written to `incomingForm.uploadDir` to include the extensions of the original files, set this property to `true`.\n\n__incomingForm.type__\n\nEither \'multipart\' or \'urlencoded\' depending on the incoming request.\n\n__incomingForm.maxFieldsSize = 2 * 1024 * 1024__\n\nLimits the amount of memory a field (not file) can allocate in bytes.\nIf this value is exceeded, an `\'error\'` event is emitted. The default\nsize is 2MB.\n\n__incomingForm.hash = false__\n\nIf you want checksums calculated for incoming files, set this to either `\'sha1\'` or `\'md5\'`.\n\n__incomingForm.bytesReceived__\n\nThe amount of bytes received for this form so far.\n\n__incomingForm.bytesExpected__\n\nThe expected number of bytes in this form.\n\n__incomingForm.parse(request, [cb])__\n\nParses an incoming node.js `request` containing form data. If `cb` is provided, all fields an files are collected and passed to the callback:\n\n    incomingForm.parse(req, function(err, fields, files) {\n      // ...\n    });\n\n__incomingForm.onPart(part)__\n\nYou may overwrite this method if you are interested in directly accessing the multipart stream. Doing so will disable any `\'field\'` / `\'file\'` events  processing which would occur otherwise, making you fully responsible for handling the processing.\n\n    incomingForm.onPart = function(part) {\n      part.addListener(\'data\', function() {\n        // ...\n      });\n    }\n\nIf you want to use formidable to only handle certain parts for you, you can do so:\n\n    incomingForm.onPart = function(part) {\n      if (!part.filename) {\n        // let formidable handle all non-file parts\n        incomingForm.handlePart(part);\n      }\n    }\n\nCheck the code in this method for further inspiration.\n\n__Event: \'progress\' (bytesReceived, bytesExpected)__\n\nEmitted after each incoming chunk of data that has been parsed. Can be used to roll your own progress bar.\n\n__Event: \'field\' (name, value)__\n\nEmitted whenever a field / value pair has been received.\n\n__Event: \'fileBegin\' (name, file)__\n\nEmitted whenever a new file is detected in the upload stream. Use this even if\nyou want to stream the file to somewhere else while buffering the upload on\nthe file system.\n\n__Event: \'file\' (name, file)__\n\nEmitted whenever a field / file pair has been received. `file` is an instance of `File`.\n\n__Event: \'error\' (err)__\n\nEmitted when there is an error processing the incoming form. A request that experiences an error is automatically paused, you will have to manually call `request.resume()` if you want the request to continue firing `\'data\'` events.\n\n__Event: \'aborted\'__\n\nEmitted when the request was aborted by the user. Right now this can be due to a \'timeout\' or \'close\' event on the socket. In the future there will be a separate \'timeout\' event (needs a change in the node core).\n\n__Event: \'end\' ()__\n\nEmitted when the entire request has been received, and all contained files have finished flushing to disk. This is a great place for you to send your response.\n\n### formidable.File\n\n__file.size = 0__\n\nThe size of the uploaded file in bytes. If the file is still being uploaded (see `\'fileBegin\'` event), this property says how many bytes of the file have been written to disk yet.\n\n__file.path = null__\n\nThe path this file is being written to. You can modify this in the `\'fileBegin\'` event in\ncase you are unhappy with the way formidable generates a temporary path for your files.\n\n__file.name = null__\n\nThe name this file had according to the uploading client.\n\n__file.type = null__\n\nThe mime type of this file, according to the uploading client.\n\n__file.lastModifiedDate = null__\n\nA date object (or `null`) containing the time this file was last written to. Mostly\nhere for compatibility with the [W3C File API Draft](http://dev.w3.org/2006/webapi/FileAPI/).\n\n__file.hash = null__\n\nIf hash calculation was set, you can read the hex digest out of this var.\n\n## License\n\nFormidable is licensed under the MIT license.\n\n## Ports\n\n* [multipart-parser](http://github.com/FooBarWidget/multipart-parser): a C++ parser based on formidable\n\n## Credits\n\n* [Ryan Dahl](http://twitter.com/ryah) for his work on [http-parser](http://github.com/ry/http-parser) which heavily inspired multipart_parser.js\n',
2063 silly resolved     readmeFilename: 'Readme.md',
2063 silly resolved     description: '[![Build Status](https://secure.travis-ci.org/felixge/node-formidable.png?branch=master)](http://travis-ci.org/felixge/node-formidable)',
2063 silly resolved     _id: 'formidable@1.0.11',
2063 silly resolved     _from: 'formidable@1.0.11' },
2063 silly resolved   { name: 'qs',
2063 silly resolved     description: 'querystring parser',
2063 silly resolved     version: '0.6.6',
2063 silly resolved     keywords: [ 'query string', 'parser', 'component' ],
2063 silly resolved     repository:
2063 silly resolved      { type: 'git',
2063 silly resolved        url: 'git://github.com/visionmedia/node-querystring.git' },
2063 silly resolved     devDependencies: { mocha: '*', 'expect.js': '*' },
2063 silly resolved     scripts: { test: 'make test' },
2063 silly resolved     author:
2063 silly resolved      { name: 'TJ Holowaychuk',
2063 silly resolved        email: 'tj@vision-media.ca',
2063 silly resolved        url: 'http://tjholowaychuk.com' },
2063 silly resolved     main: 'index',
2063 silly resolved     engines: { node: '*' },
2063 silly resolved     readme: '# node-querystring\n\n  query string parser for node and the browser supporting nesting, as it was removed from `0.3.x`, so this library provides the previous and commonly desired behaviour (and twice as fast). Used by [express](http://expressjs.com), [connect](http://senchalabs.github.com/connect) and others.\n\n## Installation\n\n    $ npm install qs\n\n## Examples\n\n```js\nvar qs = require(\'qs\');\n\nqs.parse(\'user[name][first]=Tobi&user[email]=tobi@learnboost.com\');\n// => { user: { name: { first: \'Tobi\' }, email: \'tobi@learnboost.com\' } }\n\nqs.stringify({ user: { name: \'Tobi\', email: \'tobi@learnboost.com\' }})\n// => user[name]=Tobi&user[email]=tobi%40learnboost.com\n```\n\n## Testing\n\nInstall dev dependencies:\n\n    $ npm install -d\n\nand execute:\n\n    $ make test\n\nbrowser:\n\n    $ open test/browser/index.html\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2010 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.',
2063 silly resolved     readmeFilename: 'Readme.md',
2063 silly resolved     bugs: { url: 'https://github.com/visionmedia/node-querystring/issues' },
2063 silly resolved     _id: 'qs@0.6.6',
2063 silly resolved     _from: 'qs@>= 0.4.0' },
2063 silly resolved   { author:
2063 silly resolved      { name: 'Robert Kieffer',
2063 silly resolved        email: 'robert@broofa.com',
2063 silly resolved        url: 'http://github.com/broofa' },
2063 silly resolved     contributors: [ [Object] ],
2063 silly resolved     dependencies: {},
2063 silly resolved     description: 'A comprehensive library for mime-type mapping',
2063 silly resolved     devDependencies: {},
2063 silly resolved     keywords: [ 'util', 'mime' ],
2063 silly resolved     main: 'mime.js',
2063 silly resolved     name: 'mime',
2063 silly resolved     repository: { url: 'https://github.com/broofa/node-mime', type: 'git' },
2063 silly resolved     version: '1.2.11',
2063 silly resolved     readme: '# mime\n\nComprehensive MIME type mapping API. Includes all 600+ types and 800+ extensions defined by the Apache project, plus additional types submitted by the node.js community.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file, if no mime type is found `application/octet-stream` is returned. Performs a case-insensitive lookup using the extension in `path` (the substring after the last \'/\' or \'.\').  E.g.\n\n    var mime = require(\'mime\');\n\n    mime.lookup(\'/path/to/file.txt\');         // => \'text/plain\'\n    mime.lookup(\'file.txt\');                  // => \'text/plain\'\n    mime.lookup(\'.TXT\');                      // => \'text/plain\'\n    mime.lookup(\'htm\');                       // => \'text/html\'\n\n### mime.default_type\nSets the mime type returned when `mime.lookup` fails to find the extension searched for. (Default is `application/octet-stream`.)\n\n### mime.extension(type)\nGet the default extension for `type`\n\n    mime.extension(\'text/html\');                 // => \'html\'\n    mime.extension(\'application/octet-stream\');  // => \'bin\'\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n    mime.charsets.lookup(\'text/plain\');        // => \'UTF-8\'\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nThe following APIs allow you to add your own type mappings within your project.  If you feel a type should be included as part of node-mime, see [requesting new types](https://github.com/broofa/node-mime/wiki/Requesting-New-Types).\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n    mime.define({\n        \'text/x-some-format\': [\'x-sf\', \'x-sft\', \'x-sfml\'],\n        \'application/x-my-type\': [\'x-mt\', \'x-mtt\'],\n        // etc ...\n    });\n\n    mime.lookup(\'x-sft\');                 // => \'text/x-some-format\'\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n    mime.extension(\'text/x-some-format\'); // => \'x-sf\'\n\n### mime.load(filepath)\n\nLoad mappings from an Apache ".types" format file\n\n    mime.load(\'./my_project.types\');\n\nThe .types file format is simple -  See the `types` dir for examples.\n',
2063 silly resolved     readmeFilename: 'README.md',
2063 silly resolved     bugs: { url: 'https://github.com/broofa/node-mime/issues' },
2063 silly resolved     _id: 'mime@1.2.11',
2063 silly resolved     _from: 'mime@>= 0.0.1' } ]
2064 info install formidable@1.0.11 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
2065 info install qs@0.6.6 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
2066 info install mime@1.2.11 into /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
2067 info installOne formidable@1.0.11
2068 info installOne qs@0.6.6
2069 info installOne mime@1.2.11
2070 verbose from cache /Users/bmackey/.npm/formidable/1.0.11/package/package.json
2071 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable unbuild
2072 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable/package.json
2073 verbose from cache /Users/bmackey/.npm/qs/0.6.6/package/package.json
2074 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/qs unbuild
2075 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/qs/package.json
2076 verbose from cache /Users/bmackey/.npm/mime/1.2.11/package/package.json
2077 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/mime unbuild
2078 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/mime/package.json
2079 verbose tar unpack /Users/bmackey/.npm/formidable/1.0.11/package.tgz
2080 silly lockFile 9f646b6b--connect-node-modules-formidable tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable
2081 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable /Users/bmackey/.npm/9f646b6b--connect-node-modules-formidable.lock
2082 silly lockFile 673bfbe3-pm-formidable-1-0-11-package-tgz tar:///Users/bmackey/.npm/formidable/1.0.11/package.tgz
2083 verbose lock tar:///Users/bmackey/.npm/formidable/1.0.11/package.tgz /Users/bmackey/.npm/673bfbe3-pm-formidable-1-0-11-package-tgz.lock
2084 verbose tar unpack /Users/bmackey/.npm/qs/0.6.6/package.tgz
2085 silly lockFile 241df3d5-dules-fh-connect-node-modules-qs tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/qs
2086 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/qs /Users/bmackey/.npm/241df3d5-dules-fh-connect-node-modules-qs.lock
2087 silly lockFile 0d27fca6-bmackey-npm-qs-0-6-6-package-tgz tar:///Users/bmackey/.npm/qs/0.6.6/package.tgz
2088 verbose lock tar:///Users/bmackey/.npm/qs/0.6.6/package.tgz /Users/bmackey/.npm/0d27fca6-bmackey-npm-qs-0-6-6-package-tgz.lock
2089 verbose tar unpack /Users/bmackey/.npm/mime/1.2.11/package.tgz
2090 silly lockFile 55bca99f-les-fh-connect-node-modules-mime tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/mime
2091 verbose lock tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/mime /Users/bmackey/.npm/55bca99f-les-fh-connect-node-modules-mime.lock
2092 silly lockFile cb51193d-ckey-npm-mime-1-2-11-package-tgz tar:///Users/bmackey/.npm/mime/1.2.11/package.tgz
2093 verbose lock tar:///Users/bmackey/.npm/mime/1.2.11/package.tgz /Users/bmackey/.npm/cb51193d-ckey-npm-mime-1-2-11-package-tgz.lock
2094 silly gunzTarPerm modes [ '755', '644' ]
2095 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable/package.json
2096 silly lockFile 9f646b6b--connect-node-modules-formidable tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable
2097 silly lockFile 9f646b6b--connect-node-modules-formidable tar:///Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable
2098 silly lockFile 673bfbe3-pm-formidable-1-0-11-package-tgz tar:///Users/bmackey/.npm/formidable/1.0.11/package.tgz
2099 silly lockFile 673bfbe3-pm-formidable-1-0-11-package-tgz tar:///Users/bmackey/.npm/formidable/1.0.11/package.tgz
2100 silly gunzTarPerm extractEntry lang/hu.js
2101 silly gunzTarPerm extractEntry lang/id.js
2102 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable unbuild
2103 verbose read json /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/node_modules/formidable/package.json
2104 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect
2105 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect unbuild
2106 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/fh-connect/package.json
2107 info preuninstall fh-connect@1.8.6
2108 info uninstall fh-connect@1.8.6
2109 verbose false,/Users/bmackey/college/Project/App/xpoit/cloud/node_modules,/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules unbuild fh-connect@1.8.6
2110 info postuninstall fh-connect@1.8.6
2111 verbose about to build /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp
2112 info /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp unbuild
2113 verbose from cache /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/package.json
2114 info preuninstall fh-nodeapp@0.65.0
2115 info uninstall fh-nodeapp@0.65.0
2116 verbose true,/Users/bmackey/college/Project/App/xpoit/cloud/node_modules,/Users/bmackey/college/Project/App/xpoit/cloud/node_modules unbuild fh-nodeapp@0.65.0
2117 info postuninstall fh-nodeapp@0.65.0
2118 silly gunzTarPerm extractEntry lang/gl.js
2119 silly gunzTarPerm extractEntry lang/it.js
2120 error Error: ENOENT, lstat '/Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment/test/lang/de.js'
2121 error If you need help, you may report this log at:
2121 error     <http://github.com/isaacs/npm/issues>
2121 error or email it to:
2121 error     <npm-@googlegroups.com>
2122 error System Darwin 13.1.0
2123 error command "node" "/usr/local/bin/npm" "install"
2124 error cwd /Users/bmackey/college/Project/App/xpoit/cloud
2125 error node -v v0.10.11
2126 error npm -v 1.2.30
2127 error path /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment/test/lang/de.js
2128 error fstream_path /Users/bmackey/college/Project/App/xpoit/cloud/node_modules/fh-nodeapp/node_modules/moment/test/lang/de.js
2129 error fstream_type File
2130 error fstream_class FileWriter
2131 error code ENOENT
2132 error errno 34
2133 error fstream_stack /usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:284:26
2133 error fstream_stack Object.oncomplete (fs.js:107:15)
2134 verbose exit [ 34, true ]
